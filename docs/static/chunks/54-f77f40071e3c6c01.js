(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[54],{4492:function(e,t,r){"use strict";var i,n;e.exports=(null==(i=r.g.process)?void 0:i.env)&&"object"==typeof(null==(n=r.g.process)?void 0:n.env)?r.g.process:r(4191)},4191:function(e){!function(){var t={229:function(e){var t,r,i,n=e.exports={};function o(){throw Error("setTimeout has not been defined")}function a(){throw Error("clearTimeout has not been defined")}function s(e){if(t===setTimeout)return setTimeout(e,0);if((t===o||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(r){try{return t.call(null,e,0)}catch(r){return t.call(this,e,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:o}catch(e){t=o}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(e){r=a}}();var c=[],l=!1,h=-1;function d(){l&&i&&(l=!1,i.length?c=i.concat(c):h=-1,c.length&&u())}function u(){if(!l){var e=s(d);l=!0;for(var t=c.length;t;){for(i=c,c=[];++h<t;)i&&i[h].run();h=-1,t=c.length}i=null,l=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function g(e,t){this.fun=e,this.array=t}function p(){}n.nextTick=function(e){var t=Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];c.push(new g(e,t)),1!==c.length||l||s(u)},g.prototype.run=function(){this.fun.apply(null,this.array)},n.title="browser",n.browser=!0,n.env={},n.argv=[],n.version="",n.versions={},n.on=p,n.addListener=p,n.once=p,n.off=p,n.removeListener=p,n.removeAllListeners=p,n.emit=p,n.prependListener=p,n.prependOnceListener=p,n.listeners=function(e){return[]},n.binding=function(e){throw Error("process.binding is not supported")},n.cwd=function(){return"/"},n.chdir=function(e){throw Error("process.chdir is not supported")},n.umask=function(){return 0}}},r={};function i(e){var n=r[e];if(void 0!==n)return n.exports;var o=r[e]={exports:{}},a=!0;try{t[e](o,o.exports,i),a=!1}finally{a&&delete r[e]}return o.exports}i.ab="//";var n=i(229);e.exports=n}()},7639:function(e,t,r){"use strict";var i,n,o,a;r.d(t,{G0:function(){return n0}});/*! @azure/msal-common v14.14.1 2024-08-13 */let s={SKU:"msal.js.common",CACHE_PREFIX:"msal",DEFAULT_AUTHORITY:"https://login.microsoftonline.com/common/",DEFAULT_AUTHORITY_HOST:"login.microsoftonline.com",DEFAULT_COMMON_TENANT:"common",ADFS:"adfs",DSTS:"dstsv2",AAD_INSTANCE_DISCOVERY_ENDPT:"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",CIAM_AUTH_URL:".ciamlogin.com",AAD_TENANT_DOMAIN_SUFFIX:".onmicrosoft.com",RESOURCE_DELIM:"|",OPENID_SCOPE:"openid",PROFILE_SCOPE:"profile",OFFLINE_ACCESS_SCOPE:"offline_access",EMAIL_SCOPE:"email",CODE_RESPONSE_TYPE:"code",S256_CODE_CHALLENGE_METHOD:"S256",URL_FORM_CONTENT_TYPE:"application/x-www-form-urlencoded;charset=utf-8",EMPTY_STRING:"",NOT_APPLICABLE:"N/A",NOT_AVAILABLE:"Not Available",FORWARD_SLASH:"/",IMDS_ENDPOINT:"http://169.254.169.254/metadata/instance/compute/location",IMDS_VERSION:"2020-06-01",IMDS_TIMEOUT:2e3,AZURE_REGION_AUTO_DISCOVER_FLAG:"TryAutoDetect",REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX:"login.microsoft.com",KNOWN_PUBLIC_CLOUDS:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"],TOKEN_RESPONSE_TYPE:"token",ID_TOKEN_RESPONSE_TYPE:"id_token",SHR_NONCE_VALIDITY:240,INVALID_INSTANCE:"invalid_instance"},c={CLIENT_ERROR_RANGE_START:400,CLIENT_ERROR_RANGE_END:499,SERVER_ERROR_RANGE_START:500,SERVER_ERROR_RANGE_END:599},l=[s.OPENID_SCOPE,s.PROFILE_SCOPE,s.OFFLINE_ACCESS_SCOPE],h=[...l,s.EMAIL_SCOPE],d={CONTENT_TYPE:"Content-Type",RETRY_AFTER:"Retry-After",CCS_HEADER:"X-AnchorMailbox",X_MS_REQUEST_ID:"x-ms-request-id",X_MS_HTTP_VERSION:"x-ms-httpver"},u={ID_TOKEN:"idtoken",CLIENT_INFO:"client.info",ADAL_ID_TOKEN:"adal.idtoken",ERROR:"error",ERROR_DESC:"error.description",ACTIVE_ACCOUNT:"active-account",ACTIVE_ACCOUNT_FILTERS:"active-account-filters"},g={COMMON:"common",ORGANIZATIONS:"organizations",CONSUMERS:"consumers"},p={ACCESS_TOKEN:"access_token",XMS_CC:"xms_cc"},m={LOGIN:"login",SELECT_ACCOUNT:"select_account",CONSENT:"consent",NONE:"none",CREATE:"create",NO_SESSION:"no_session"},C={QUERY:"query",FRAGMENT:"fragment"},f={...C,FORM_POST:"form_post"},y={MSSTS_ACCOUNT_TYPE:"MSSTS",ADFS_ACCOUNT_TYPE:"ADFS",GENERIC_ACCOUNT_TYPE:"Generic"},T={CACHE_KEY_SEPARATOR:"-",CLIENT_INFO_SEPARATOR:"."},I={ID_TOKEN:"IdToken",ACCESS_TOKEN:"AccessToken",ACCESS_TOKEN_WITH_AUTH_SCHEME:"AccessToken_With_AuthScheme",REFRESH_TOKEN:"RefreshToken"},A="appmetadata",v="authority-metadata",w={CONFIG:"config",CACHE:"cache",NETWORK:"network",HARDCODED_VALUES:"hardcoded_values"},E={SCHEMA_VERSION:5,MAX_LAST_HEADER_BYTES:330,MAX_CACHED_ERRORS:50,CACHE_KEY:"server-telemetry",CATEGORY_SEPARATOR:"|",VALUE_SEPARATOR:",",OVERFLOW_TRUE:"1",OVERFLOW_FALSE:"0",UNKNOWN_ERROR:"unknown_error"},R={BEARER:"Bearer",POP:"pop",SSH:"ssh-cert"},S={DEFAULT_THROTTLE_TIME_SECONDS:60,DEFAULT_MAX_THROTTLE_TIME_SECONDS:3600,THROTTLING_PREFIX:"throttling",X_MS_LIB_CAPABILITY_VALUE:"retry-after, h429"},k={INVALID_GRANT_ERROR:"invalid_grant",CLIENT_MISMATCH_ERROR:"client_mismatch"},_={httpSuccess:200,httpBadRequest:400},b={FAILED_AUTO_DETECTION:"1",ENVIRONMENT_VARIABLE:"3",IMDS:"4"},O={CONFIGURED_NO_AUTO_DETECTION:"2",AUTO_DETECTION_REQUESTED_SUCCESSFUL:"4",AUTO_DETECTION_REQUESTED_FAILED:"5"},P={NOT_APPLICABLE:"0",FORCE_REFRESH_OR_CLAIMS:"1",NO_CACHED_ACCESS_TOKEN:"2",CACHED_ACCESS_TOKEN_EXPIRED:"3",PROACTIVELY_REFRESHED:"4"},N={Pop:"pop"};(o=i||(i={}))[o.Error=0]="Error",o[o.Warning=1]="Warning",o[o.Info=2]="Info",o[o.Verbose=3]="Verbose",o[o.Trace=4]="Trace";class M{constructor(e,t,r){this.level=i.Info;let n=e||M.createDefaultLoggerOptions();this.localCallback=n.loggerCallback||(()=>{}),this.piiLoggingEnabled=n.piiLoggingEnabled||!1,this.level="number"==typeof n.logLevel?n.logLevel:i.Info,this.correlationId=n.correlationId||s.EMPTY_STRING,this.packageName=t||s.EMPTY_STRING,this.packageVersion=r||s.EMPTY_STRING}static createDefaultLoggerOptions(){return{loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:i.Info}}clone(e,t,r){return new M({loggerCallback:this.localCallback,piiLoggingEnabled:this.piiLoggingEnabled,logLevel:this.level,correlationId:r||this.correlationId},e,t)}logMessage(e,t){if(t.logLevel>this.level||!this.piiLoggingEnabled&&t.containsPii)return;let r=new Date().toUTCString(),n=`[${r}] : [${t.correlationId||this.correlationId||""}]`,o=`${n} : ${this.packageName}@${this.packageVersion} : ${i[t.logLevel]} - ${e}`;this.executeCallback(t.logLevel,o,t.containsPii||!1)}executeCallback(e,t,r){this.localCallback&&this.localCallback(e,t,r)}error(e,t){this.logMessage(e,{logLevel:i.Error,containsPii:!1,correlationId:t||s.EMPTY_STRING})}errorPii(e,t){this.logMessage(e,{logLevel:i.Error,containsPii:!0,correlationId:t||s.EMPTY_STRING})}warning(e,t){this.logMessage(e,{logLevel:i.Warning,containsPii:!1,correlationId:t||s.EMPTY_STRING})}warningPii(e,t){this.logMessage(e,{logLevel:i.Warning,containsPii:!0,correlationId:t||s.EMPTY_STRING})}info(e,t){this.logMessage(e,{logLevel:i.Info,containsPii:!1,correlationId:t||s.EMPTY_STRING})}infoPii(e,t){this.logMessage(e,{logLevel:i.Info,containsPii:!0,correlationId:t||s.EMPTY_STRING})}verbose(e,t){this.logMessage(e,{logLevel:i.Verbose,containsPii:!1,correlationId:t||s.EMPTY_STRING})}verbosePii(e,t){this.logMessage(e,{logLevel:i.Verbose,containsPii:!0,correlationId:t||s.EMPTY_STRING})}trace(e,t){this.logMessage(e,{logLevel:i.Trace,containsPii:!1,correlationId:t||s.EMPTY_STRING})}tracePii(e,t){this.logMessage(e,{logLevel:i.Trace,containsPii:!0,correlationId:t||s.EMPTY_STRING})}isPiiLoggingEnabled(){return this.piiLoggingEnabled||!1}}/*! @azure/msal-common v14.14.1 2024-08-13 */let q={AAD:"AAD",OIDC:"OIDC"},U={None:"none"},H="unexpected_error",L="post_request_failed",D={[H]:"Unexpected error in authentication.",[L]:"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details."};D[H],D[L];class K extends Error{constructor(e,t,r){super(t?`${e}: ${t}`:e),Object.setPrototypeOf(this,K.prototype),this.errorCode=e||s.EMPTY_STRING,this.errorMessage=t||s.EMPTY_STRING,this.subError=r||s.EMPTY_STRING,this.name="AuthError"}setCorrelationId(e){this.correlationId=e}}function F(e,t){return new K(e,t?`${D[e]} ${t}`:D[e])}/*! @azure/msal-common v14.14.1 2024-08-13 */let x="client_info_decoding_error",B="client_info_empty_error",G="token_parsing_error",$="null_or_empty_token",z="endpoints_resolution_error",Q="network_error",Y="openid_config_error",V="hash_not_deserialized",W="invalid_state",j="state_mismatch",J="state_not_found",X="nonce_mismatch",Z="auth_time_not_found",ee="max_age_transpired",et="multiple_matching_tokens",er="multiple_matching_accounts",ei="multiple_matching_appMetadata",en="request_cannot_be_made",eo="cannot_remove_empty_scope",ea="cannot_append_scopeset",es="empty_input_scopeset",ec="device_code_polling_cancelled",el="device_code_expired",eh="device_code_unknown_error",ed="no_account_in_silent_request",eu="invalid_cache_record",eg="invalid_cache_environment",ep="no_account_found",em="no_crypto_object",eC="unexpected_credential_type",ef="invalid_assertion",ey="invalid_client_credential",eT="token_refresh_required",eI="user_timeout_reached",eA="token_claims_cnf_required_for_signedjwt",ev="authorization_code_missing_from_server_response",ew="binding_key_not_removed",eE="end_session_endpoint_not_supported",eR="key_id_missing",eS="no_network_connectivity",ek="user_canceled",e_="missing_tenant_id_error",eb="method_not_implemented",eO="nested_app_auth_bridge_disabled",eP={[x]:"The client info could not be parsed/decoded correctly",[B]:"The client info was empty",[G]:"Token cannot be parsed",[$]:"The token is null or empty",[z]:"Endpoints cannot be resolved",[Q]:"Network request failed",[Y]:"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.",[V]:"The hash parameters could not be deserialized",[W]:"State was not the expected format",[j]:"State mismatch error",[J]:"State not found",[X]:"Nonce mismatch error",[Z]:"Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information.",[ee]:"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.",[et]:"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account.",[er]:"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account",[ei]:"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata",[en]:"Token request cannot be made without authorization code or refresh token.",[eo]:"Cannot remove null or empty scope from ScopeSet",[ea]:"Cannot append ScopeSet",[es]:"Empty input ScopeSet cannot be processed",[ec]:"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.",[el]:"Device code is expired.",[eh]:"Device code stopped polling for unknown reasons.",[ed]:"Please pass an account object, silent flow is not supported without account information",[eu]:"Cache record object was null or undefined.",[eg]:"Invalid environment when attempting to create cache entry",[ep]:"No account found in cache for given key.",[em]:"No crypto object detected.",[eC]:"Unexpected credential type.",[ef]:"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515",[ey]:"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential",[eT]:"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.",[eI]:"User defined timeout for device code polling reached",[eA]:"Cannot generate a POP jwt if the token_claims are not populated",[ev]:"Server response does not contain an authorization code to proceed",[ew]:"Could not remove the credential's binding key from storage.",[eE]:"The provided authority does not support logout",[eR]:"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.",[eS]:"No network connectivity. Check your internet connection.",[ek]:"User cancelled the flow.",[e_]:"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.",[eb]:"This method has not been implemented",[eO]:"The nested app auth bridge is disabled"};eP[x],eP[B],eP[G],eP[$],eP[z],eP[Q],eP[Y],eP[V],eP[W],eP[j],eP[J],eP[X],eP[Z],eP[ee],eP[et],eP[er],eP[ei],eP[en],eP[eo],eP[ea],eP[es],eP[ec],eP[el],eP[eh],eP[ed],eP[eu],eP[eg],eP[ep],eP[em],eP[eC],eP[ef],eP[ey],eP[eT],eP[eI],eP[eA],eP[ev],eP[ew],eP[eE],eP[eR],eP[eS],eP[ek],eP[e_],eP[eO];class eN extends K{constructor(e,t){super(e,t?`${eP[e]}: ${t}`:eP[e]),this.name="ClientAuthError",Object.setPrototypeOf(this,eN.prototype)}}function eM(e,t){return new eN(e,t)}/*! @azure/msal-common v14.14.1 2024-08-13 */let eq={createNewGuid:()=>{throw eM(eb)},base64Decode:()=>{throw eM(eb)},base64Encode:()=>{throw eM(eb)},base64UrlEncode:()=>{throw eM(eb)},encodeKid:()=>{throw eM(eb)},async getPublicKeyThumbprint(){throw eM(eb)},async removeTokenBindingKey(){throw eM(eb)},async clearKeystore(){throw eM(eb)},async signJwt(){throw eM(eb)},async hashString(){throw eM(eb)}},eU="@azure/msal-common",eH="14.14.1";/*! @azure/msal-common v14.14.1 2024-08-13 */function eL(e,t){let r=function(e){if(!e)throw eM($);let t=/^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/.exec(e);if(!t||t.length<4)throw eM(G);return t[2]}(e);try{let e=t(r);return JSON.parse(e)}catch(e){throw eM(G)}}function eD(e,t){if(0===t||Date.now()-3e5>e+t)throw eM(ee)}/*! @azure/msal-common v14.14.1 2024-08-13 */function eK(){return Math.round(new Date().getTime()/1e3)}function eF(e,t){let r=Number(e)||0;return eK()+t>r}/*! @azure/msal-common v14.14.1 2024-08-13 */function ex(e){return[[e.homeAccountId,e.environment].join(T.CACHE_KEY_SEPARATOR).toLowerCase(),function(e){let t=e.credentialType===I.REFRESH_TOKEN&&e.familyId||e.clientId;return[e.credentialType,t,e.realm||""].join(T.CACHE_KEY_SEPARATOR).toLowerCase()}(e),(e.target||"").toLowerCase(),(e.requestedClaimsHash||"").toLowerCase(),e.tokenType&&e.tokenType.toLowerCase()!==R.BEARER.toLowerCase()?e.tokenType.toLowerCase():""].join(T.CACHE_KEY_SEPARATOR).toLowerCase()}function eB(e,t,r,i,n){return{credentialType:I.ID_TOKEN,homeAccountId:e,environment:t,clientId:i,secret:r,realm:n}}function eG(e,t,r,i,n,o,a,s,c,l,h,d,u,g,p){let m={homeAccountId:e,credentialType:I.ACCESS_TOKEN,secret:r,cachedAt:eK().toString(),expiresOn:a.toString(),extendedExpiresOn:s.toString(),environment:t,clientId:i,realm:n,target:o,tokenType:h||R.BEARER};if(d&&(m.userAssertionHash=d),l&&(m.refreshOn=l.toString()),g&&(m.requestedClaims=g,m.requestedClaimsHash=p),m.tokenType?.toLowerCase()!==R.BEARER.toLowerCase())switch(m.credentialType=I.ACCESS_TOKEN_WITH_AUTH_SCHEME,m.tokenType){case R.POP:let C=eL(r,c);if(!C?.cnf?.kid)throw eM(eA);m.keyId=C.cnf.kid;break;case R.SSH:m.keyId=u}return m}function e$(e,t,r,i,n,o,a){let s={credentialType:I.REFRESH_TOKEN,homeAccountId:e,environment:t,clientId:i,secret:r};return o&&(s.userAssertionHash=o),n&&(s.familyId=n),a&&(s.expiresOn=a.toString()),s}function ez(e){return e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("credentialType")&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("secret")}function eQ(e){return!!e&&ez(e)&&e.hasOwnProperty("realm")&&e.hasOwnProperty("target")&&(e.credentialType===I.ACCESS_TOKEN||e.credentialType===I.ACCESS_TOKEN_WITH_AUTH_SCHEME)}function eY(e){return!!e&&ez(e)&&e.hasOwnProperty("realm")&&e.credentialType===I.ID_TOKEN}function eV(e){return!!e&&ez(e)&&e.credentialType===I.REFRESH_TOKEN}function eW(e,t,r){e.authorization_endpoint=t.authorization_endpoint,e.token_endpoint=t.token_endpoint,e.end_session_endpoint=t.end_session_endpoint,e.issuer=t.issuer,e.endpointsFromNetwork=r,e.jwks_uri=t.jwks_uri}function ej(e,t,r){e.aliases=t.aliases,e.preferred_cache=t.preferred_cache,e.preferred_network=t.preferred_network,e.aliasesFromNetwork=r}function eJ(e){return e.expiresAt<=eK()}/*! @azure/msal-common v14.14.1 2024-08-13 */let eX="redirect_uri_empty",eZ="claims_request_parsing_error",e0="authority_uri_insecure",e1="url_parse_error",e2="empty_url_error",e4="empty_input_scopes_error",e6="invalid_prompt_value",e3="invalid_claims",e5="token_request_empty",e8="logout_request_empty",e9="invalid_code_challenge_method",e7="pkce_params_missing",te="invalid_cloud_discovery_metadata",tt="invalid_authority_metadata",tr="untrusted_authority",ti="missing_ssh_jwk",tn="missing_ssh_kid",to="missing_nonce_authentication_header",ta="invalid_authentication_header",ts="cannot_set_OIDCOptions",tc="cannot_allow_native_broker",tl="authority_mismatch",th={[eX]:"A redirect URI is required for all calls, and none has been set.",[eZ]:"Could not parse the given claims request object.",[e0]:"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options",[e1]:"URL could not be parsed into appropriate segments.",[e2]:"URL was empty or null.",[e4]:"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.",[e6]:"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest",[e3]:"Given claims parameter must be a stringified JSON object.",[e5]:"Token request was empty and not found in cache.",[e8]:"The logout request was null or undefined.",[e9]:'code_challenge_method passed is invalid. Valid values are "plain" and "S256".',[e7]:"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request",[te]:"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields",[tt]:"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.",[tr]:"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.",[ti]:"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.",[tn]:"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.",[to]:"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.",[ta]:"Invalid authentication header provided",[ts]:"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.",[tc]:"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.",[tl]:"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority."};th[eX],th[eZ],th[e0],th[e1],th[e2],th[e4],th[e6],th[e3],th[e5],th[e8],th[e9],th[e7],th[te],th[tt],th[tr],th[ti],th[tn],th[to],th[ta],th[ts],th[tc],th[tl];class td extends K{constructor(e){super(e,th[e]),this.name="ClientConfigurationError",Object.setPrototypeOf(this,td.prototype)}}function tu(e){return new td(e)}/*! @azure/msal-common v14.14.1 2024-08-13 */class tg{static isEmptyObj(e){if(e)try{let t=JSON.parse(e);return 0===Object.keys(t).length}catch(e){}return!0}static startsWith(e,t){return 0===e.indexOf(t)}static endsWith(e,t){return e.length>=t.length&&e.lastIndexOf(t)===e.length-t.length}static queryStringToObject(e){let t={},r=e.split("&"),i=e=>decodeURIComponent(e.replace(/\+/g," "));return r.forEach(e=>{if(e.trim()){let[r,n]=e.split(/=(.+)/g,2);r&&n&&(t[i(r)]=i(n))}}),t}static trimArrayEntries(e){return e.map(e=>e.trim())}static removeEmptyStringsFromArray(e){return e.filter(e=>!!e)}static jsonParseHelper(e){try{return JSON.parse(e)}catch(e){return null}}static matchPattern(e,t){return new RegExp(e.replace(/\\/g,"\\\\").replace(/\*/g,"[^ ]*").replace(/\?/g,"\\?")).test(t)}}/*! @azure/msal-common v14.14.1 2024-08-13 */class tp{constructor(e){let t=e?tg.trimArrayEntries([...e]):[],r=t?tg.removeEmptyStringsFromArray(t):[];this.validateInputScopes(r),this.scopes=new Set,r.forEach(e=>this.scopes.add(e))}static fromString(e){return new tp((e||s.EMPTY_STRING).split(" "))}static createSearchScopes(e){let t=new tp(e);return t.containsOnlyOIDCScopes()?t.removeScope(s.OFFLINE_ACCESS_SCOPE):t.removeOIDCScopes(),t}validateInputScopes(e){if(!e||e.length<1)throw tu(e4)}containsScope(e){let t=new tp(this.printScopesLowerCase().split(" "));return!!e&&t.scopes.has(e.toLowerCase())}containsScopeSet(e){return!!e&&!(e.scopes.size<=0)&&this.scopes.size>=e.scopes.size&&e.asArray().every(e=>this.containsScope(e))}containsOnlyOIDCScopes(){let e=0;return h.forEach(t=>{this.containsScope(t)&&(e+=1)}),this.scopes.size===e}appendScope(e){e&&this.scopes.add(e.trim())}appendScopes(e){try{e.forEach(e=>this.appendScope(e))}catch(e){throw eM(ea)}}removeScope(e){if(!e)throw eM(eo);this.scopes.delete(e.trim())}removeOIDCScopes(){h.forEach(e=>{this.scopes.delete(e)})}unionScopeSets(e){if(!e)throw eM(es);let t=new Set;return e.scopes.forEach(e=>t.add(e.toLowerCase())),this.scopes.forEach(e=>t.add(e.toLowerCase())),t}intersectingScopeSets(e){if(!e)throw eM(es);e.containsOnlyOIDCScopes()||e.removeOIDCScopes();let t=this.unionScopeSets(e),r=e.getScopeCount(),i=this.getScopeCount();return t.size<i+r}getScopeCount(){return this.scopes.size}asArray(){let e=[];return this.scopes.forEach(t=>e.push(t)),e}printScopes(){return this.scopes?this.asArray().join(" "):s.EMPTY_STRING}printScopesLowerCase(){return this.printScopes().toLowerCase()}}/*! @azure/msal-common v14.14.1 2024-08-13 */function tm(e,t){if(!e)throw eM(B);try{let r=t(e);return JSON.parse(r)}catch(e){throw eM(x)}}function tC(e){if(!e)throw eM(x);let t=e.split(T.CLIENT_INFO_SEPARATOR,2);return{uid:t[0],utid:t.length<2?s.EMPTY_STRING:t[1]}}/*! @azure/msal-common v14.14.1 2024-08-13 */function tf(e,t){return!!e&&!!t&&e===t.split(".")[1]}function ty(e,t,r,i){if(!i)return{tenantId:r,localAccountId:t,isHomeTenant:tf(r,e)};{let{oid:t,sub:r,tid:n,name:o,tfp:a,acr:s}=i,c=n||a||s||"";return{tenantId:c,localAccountId:t||r||"",name:o,isHomeTenant:tf(c,e)}}}function tT(e,t,r,i){let n=e;if(t){let{isHomeTenant:r,...i}=t;n={...e,...i}}if(r){let{isHomeTenant:t,...o}=ty(e.homeAccountId,e.localAccountId,e.tenantId,r);n={...n,...o,idTokenClaims:r,idToken:i}}return n}/*! @azure/msal-common v14.14.1 2024-08-13 */let tI={Default:0,Adfs:1,Dsts:2,Ciam:3};/*! @azure/msal-common v14.14.1 2024-08-13 */function tA(e){return e&&(e.tid||e.tfp||e.acr)||null}/*! @azure/msal-common v14.14.1 2024-08-13 */class tv{generateAccountId(){return[this.homeAccountId,this.environment].join(T.CACHE_KEY_SEPARATOR).toLowerCase()}generateAccountKey(){return tv.generateAccountCacheKey({homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId})}getAccountInfo(){return{homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId,name:this.name,nativeAccountId:this.nativeAccountId,authorityType:this.authorityType,tenantProfiles:new Map((this.tenantProfiles||[]).map(e=>[e.tenantId,e]))}}isSingleTenant(){return!this.tenantProfiles}static generateAccountCacheKey(e){let t=e.homeAccountId.split(".")[1];return[e.homeAccountId,e.environment||"",t||e.tenantId||""].join(T.CACHE_KEY_SEPARATOR).toLowerCase()}static createAccount(e,t,r){let i;let n=new tv;t.authorityType===tI.Adfs?n.authorityType=y.ADFS_ACCOUNT_TYPE:t.protocolMode===q.AAD?n.authorityType=y.MSSTS_ACCOUNT_TYPE:n.authorityType=y.GENERIC_ACCOUNT_TYPE,e.clientInfo&&r&&(i=tm(e.clientInfo,r)),n.clientInfo=e.clientInfo,n.homeAccountId=e.homeAccountId,n.nativeAccountId=e.nativeAccountId;let o=e.environment||t&&t.getPreferredCache();if(!o)throw eM(eg);n.environment=o,n.realm=i?.utid||tA(e.idTokenClaims)||"",n.localAccountId=i?.uid||e.idTokenClaims?.oid||e.idTokenClaims?.sub||"";let a=e.idTokenClaims?.preferred_username||e.idTokenClaims?.upn,s=e.idTokenClaims?.emails?e.idTokenClaims.emails[0]:null;if(n.username=a||s||"",n.name=e.idTokenClaims?.name||"",n.cloudGraphHostName=e.cloudGraphHostName,n.msGraphHost=e.msGraphHost,e.tenantProfiles)n.tenantProfiles=e.tenantProfiles;else{let t=ty(e.homeAccountId,n.localAccountId,n.realm,e.idTokenClaims);n.tenantProfiles=[t]}return n}static createFromAccountInfo(e,t,r){let i=new tv;return i.authorityType=e.authorityType||y.GENERIC_ACCOUNT_TYPE,i.homeAccountId=e.homeAccountId,i.localAccountId=e.localAccountId,i.nativeAccountId=e.nativeAccountId,i.realm=e.tenantId,i.environment=e.environment,i.username=e.username,i.name=e.name,i.cloudGraphHostName=t,i.msGraphHost=r,i.tenantProfiles=Array.from(e.tenantProfiles?.values()||[]),i}static generateHomeAccountId(e,t,r,i,n){if(!(t===tI.Adfs||t===tI.Dsts)){if(e)try{let t=tm(e,i.base64Decode);if(t.uid&&t.utid)return`${t.uid}.${t.utid}`}catch(e){}r.warning("No client info in response")}return n?.sub||""}static isAccountEntity(e){return!!e&&e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("localAccountId")&&e.hasOwnProperty("username")&&e.hasOwnProperty("authorityType")}static accountInfoIsEqual(e,t,r){if(!e||!t)return!1;let i=!0;if(r){let r=e.idTokenClaims||{},n=t.idTokenClaims||{};i=r.iat===n.iat&&r.nonce===n.nonce}return e.homeAccountId===t.homeAccountId&&e.localAccountId===t.localAccountId&&e.username===t.username&&e.tenantId===t.tenantId&&e.environment===t.environment&&e.nativeAccountId===t.nativeAccountId&&i}}/*! @azure/msal-common v14.14.1 2024-08-13 */function tw(e){return e.startsWith("#/")?e.substring(2):e.startsWith("#")||e.startsWith("?")?e.substring(1):e}function tE(e){if(!e||0>e.indexOf("="))return null;try{let t=tw(e),r=Object.fromEntries(new URLSearchParams(t));if(r.code||r.error||r.error_description||r.state)return r}catch(e){throw eM(V)}return null}/*! @azure/msal-common v14.14.1 2024-08-13 */class tR{get urlString(){return this._urlString}constructor(e){if(this._urlString=e,!this._urlString)throw tu(e2);e.includes("#")||(this._urlString=tR.canonicalizeUri(e))}static canonicalizeUri(e){if(e){let t=e.toLowerCase();return tg.endsWith(t,"?")?t=t.slice(0,-1):tg.endsWith(t,"?/")&&(t=t.slice(0,-2)),tg.endsWith(t,"/")||(t+="/"),t}return e}validateAsUri(){let e;try{e=this.getUrlComponents()}catch(e){throw tu(e1)}if(!e.HostNameAndPort||!e.PathSegments)throw tu(e1);if(!e.Protocol||"https:"!==e.Protocol.toLowerCase())throw tu(e0)}static appendQueryString(e,t){return t?0>e.indexOf("?")?`${e}?${t}`:`${e}&${t}`:e}static removeHashFromUrl(e){return tR.canonicalizeUri(e.split("#")[0])}replaceTenantPath(e){let t=this.getUrlComponents(),r=t.PathSegments;return e&&0!==r.length&&(r[0]===g.COMMON||r[0]===g.ORGANIZATIONS)&&(r[0]=e),tR.constructAuthorityUriFromObject(t)}getUrlComponents(){let e=RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"),t=this.urlString.match(e);if(!t)throw tu(e1);let r={Protocol:t[1],HostNameAndPort:t[4],AbsolutePath:t[5],QueryString:t[7]},i=r.AbsolutePath.split("/");return i=i.filter(e=>e&&e.length>0),r.PathSegments=i,r.QueryString&&r.QueryString.endsWith("/")&&(r.QueryString=r.QueryString.substring(0,r.QueryString.length-1)),r}static getDomainFromUrl(e){let t=RegExp("^([^:/?#]+://)?([^/?#]*)"),r=e.match(t);if(!r)throw tu(e1);return r[2]}static getAbsoluteUrl(e,t){if(e[0]===s.FORWARD_SLASH){let r=new tR(t).getUrlComponents();return r.Protocol+"//"+r.HostNameAndPort+e}return e}static constructAuthorityUriFromObject(e){return new tR(e.Protocol+"//"+e.HostNameAndPort+"/"+e.PathSegments.join("/"))}static hashContainsKnownProperties(e){return!!tE(e)}}/*! @azure/msal-common v14.14.1 2024-08-13 */let tS={"login.microsoftonline.com":{token_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout"},"login.chinacloudapi.cn":{token_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys",issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",authorization_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout"},"login.microsoftonline.us":{token_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout"}},tk={metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},t_=new Set;function tb(e,t,r,i){if(i?.trace(`getAliasesFromMetadata called with source: ${r}`),e&&t){let n=tO(t,e);if(n)return i?.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${r}, returning aliases`),n.aliases;i?.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${r}`)}return null}function tO(e,t){for(let r=0;r<e.length;r++){let i=e[r];if(i.aliases.includes(t))return i}return null}tk.metadata.forEach(e=>{e.aliases.forEach(e=>{t_.add(e)})});/*! @azure/msal-common v14.14.1 2024-08-13 */let tP="cache_quota_exceeded",tN="cache_error_unknown",tM={[tP]:"Exceeded cache storage capacity.",[tN]:"Unexpected error occurred when using cache storage."};class tq extends Error{constructor(e,t){let r=t||(tM[e]?tM[e]:tM[tN]);super(`${e}: ${r}`),Object.setPrototypeOf(this,tq.prototype),this.name="CacheError",this.errorCode=e,this.errorMessage=r}}/*! @azure/msal-common v14.14.1 2024-08-13 */class tU{constructor(e,t,r,i){this.clientId=e,this.cryptoImpl=t,this.commonLogger=r.clone(eU,eH),this.staticAuthorityOptions=i}getAllAccounts(e){return this.buildTenantProfiles(this.getAccountsFilteredBy(e||{}),e)}getAccountInfoFilteredBy(e){let t=this.getAllAccounts(e);return t.length>1?t.sort(e=>e.idTokenClaims?-1:1)[0]:1===t.length?t[0]:null}getBaseAccountInfo(e){let t=this.getAccountsFilteredBy(e);return t.length>0?t[0].getAccountInfo():null}buildTenantProfiles(e,t){return e.flatMap(e=>this.getTenantProfilesFromAccountEntity(e,t?.tenantId,t))}getTenantedAccountInfoByFilter(e,t,r,i){let n;if(i&&!this.tenantProfileMatchesFilter(r,i))return null;let o=this.getIdToken(e,t,r.tenantId);return o&&(n=eL(o.secret,this.cryptoImpl.base64Decode),!this.idTokenClaimsMatchTenantProfileFilter(n,i))?null:tT(e,r,n,o?.secret)}getTenantProfilesFromAccountEntity(e,t,r){let i=e.getAccountInfo(),n=i.tenantProfiles||new Map,o=this.getTokenKeys();if(t){let e=n.get(t);if(!e)return[];n=new Map([[t,e]])}let a=[];return n.forEach(e=>{let t=this.getTenantedAccountInfoByFilter(i,o,e,r);t&&a.push(t)}),a}tenantProfileMatchesFilter(e,t){return(!t.localAccountId||!!this.matchLocalAccountIdFromTenantProfile(e,t.localAccountId))&&(!t.name||e.name===t.name)&&(void 0===t.isHomeTenant||e.isHomeTenant===t.isHomeTenant)}idTokenClaimsMatchTenantProfileFilter(e,t){return!t||(!t.localAccountId||!!this.matchLocalAccountIdFromTokenClaims(e,t.localAccountId))&&(!t.loginHint||!!this.matchLoginHintFromTokenClaims(e,t.loginHint))&&(!t.username||!!this.matchUsername(e.preferred_username,t.username))&&(!t.name||!!this.matchName(e,t.name))&&(!t.sid||!!this.matchSid(e,t.sid))}async saveCacheRecord(e,t,r){if(!e)throw eM(eu);try{e.account&&this.setAccount(e.account),e.idToken&&t?.idToken!==!1&&this.setIdTokenCredential(e.idToken),e.accessToken&&t?.accessToken!==!1&&await this.saveAccessToken(e.accessToken),e.refreshToken&&t?.refreshToken!==!1&&this.setRefreshTokenCredential(e.refreshToken),e.appMetadata&&this.setAppMetadata(e.appMetadata)}catch(e){if(this.commonLogger?.error("CacheManager.saveCacheRecord: failed"),e instanceof Error){if(this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e.message}`,r),"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name||e.message.includes("exceeded the quota"))throw this.commonLogger?.error("CacheManager.saveCacheRecord: exceeded storage quota",r),new tq(tP);throw new tq(e.name,e.message)}throw this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e}`,r),new tq(tN)}}async saveAccessToken(e){let t={clientId:e.clientId,credentialType:e.credentialType,environment:e.environment,homeAccountId:e.homeAccountId,realm:e.realm,tokenType:e.tokenType,requestedClaimsHash:e.requestedClaimsHash},r=this.getTokenKeys(),i=tp.fromString(e.target),n=[];r.accessToken.forEach(e=>{if(!this.accessTokenKeyMatchesFilter(e,t,!1))return;let r=this.getAccessTokenCredential(e);r&&this.credentialMatchesFilter(r,t)&&tp.fromString(r.target).intersectingScopeSets(i)&&n.push(this.removeAccessToken(e))}),await Promise.all(n),this.setAccessTokenCredential(e)}getAccountsFilteredBy(e){let t=this.getAccountKeys(),r=[];return t.forEach(t=>{if(!this.isAccountKey(t,e.homeAccountId))return;let i=this.getAccount(t,this.commonLogger);if(!i||e.homeAccountId&&!this.matchHomeAccountId(i,e.homeAccountId)||e.username&&!this.matchUsername(i.username,e.username)||e.environment&&!this.matchEnvironment(i,e.environment)||e.realm&&!this.matchRealm(i,e.realm)||e.nativeAccountId&&!this.matchNativeAccountId(i,e.nativeAccountId)||e.authorityType&&!this.matchAuthorityType(i,e.authorityType))return;let n={localAccountId:e?.localAccountId,name:e?.name},o=i.tenantProfiles?.filter(e=>this.tenantProfileMatchesFilter(e,n));o&&0===o.length||r.push(i)}),r}isAccountKey(e,t,r){return!(e.split(T.CACHE_KEY_SEPARATOR).length<3)&&(!t||!!e.toLowerCase().includes(t.toLowerCase()))&&(!r||!!e.toLowerCase().includes(r.toLowerCase()))}isCredentialKey(e){if(e.split(T.CACHE_KEY_SEPARATOR).length<6)return!1;let t=e.toLowerCase();if(-1===t.indexOf(I.ID_TOKEN.toLowerCase())&&-1===t.indexOf(I.ACCESS_TOKEN.toLowerCase())&&-1===t.indexOf(I.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase())&&-1===t.indexOf(I.REFRESH_TOKEN.toLowerCase()))return!1;if(t.indexOf(I.REFRESH_TOKEN.toLowerCase())>-1){let e=`${I.REFRESH_TOKEN}${T.CACHE_KEY_SEPARATOR}${this.clientId}${T.CACHE_KEY_SEPARATOR}`,r=`${I.REFRESH_TOKEN}${T.CACHE_KEY_SEPARATOR}1${T.CACHE_KEY_SEPARATOR}`;if(-1===t.indexOf(e.toLowerCase())&&-1===t.indexOf(r.toLowerCase()))return!1}else if(-1===t.indexOf(this.clientId.toLowerCase()))return!1;return!0}credentialMatchesFilter(e,t){return(!t.clientId||!!this.matchClientId(e,t.clientId))&&(!t.userAssertionHash||!!this.matchUserAssertionHash(e,t.userAssertionHash))&&("string"!=typeof t.homeAccountId||!!this.matchHomeAccountId(e,t.homeAccountId))&&(!t.environment||!!this.matchEnvironment(e,t.environment))&&(!t.realm||!!this.matchRealm(e,t.realm))&&(!t.credentialType||!!this.matchCredentialType(e,t.credentialType))&&(!t.familyId||!!this.matchFamilyId(e,t.familyId))&&(!t.target||!!this.matchTarget(e,t.target))&&(!t.requestedClaimsHash&&!e.requestedClaimsHash||e.requestedClaimsHash===t.requestedClaimsHash)&&(e.credentialType!==I.ACCESS_TOKEN_WITH_AUTH_SCHEME||(!t.tokenType||!!this.matchTokenType(e,t.tokenType))&&(t.tokenType!==R.SSH||!t.keyId||!!this.matchKeyId(e,t.keyId)))}getAppMetadataFilteredBy(e){let t=this.getKeys(),r={};return t.forEach(t=>{if(!this.isAppMetadata(t))return;let i=this.getAppMetadata(t);i&&(!e.environment||this.matchEnvironment(i,e.environment))&&(!e.clientId||this.matchClientId(i,e.clientId))&&(r[t]=i)}),r}getAuthorityMetadataByAlias(e){let t=this.getAuthorityMetadataKeys(),r=null;return t.forEach(t=>{if(!this.isAuthorityMetadata(t)||-1===t.indexOf(this.clientId))return;let i=this.getAuthorityMetadata(t);i&&-1!==i.aliases.indexOf(e)&&(r=i)}),r}async removeAllAccounts(){let e=this.getAccountKeys(),t=[];e.forEach(e=>{t.push(this.removeAccount(e))}),await Promise.all(t)}async removeAccount(e){let t=this.getAccount(e,this.commonLogger);t&&(await this.removeAccountContext(t),this.removeItem(e))}async removeAccountContext(e){let t=this.getTokenKeys(),r=e.generateAccountId(),i=[];t.idToken.forEach(e=>{0===e.indexOf(r)&&this.removeIdToken(e)}),t.accessToken.forEach(e=>{0===e.indexOf(r)&&i.push(this.removeAccessToken(e))}),t.refreshToken.forEach(e=>{0===e.indexOf(r)&&this.removeRefreshToken(e)}),await Promise.all(i)}updateOutdatedCachedAccount(e,t,r){if(t&&t.isSingleTenant()){this.commonLogger?.verbose("updateOutdatedCachedAccount: Found a single-tenant (outdated) account entity in the cache, migrating to multi-tenant account entity");let i=this.getAccountKeys().filter(e=>e.startsWith(t.homeAccountId)),n=[];i.forEach(e=>{let t=this.getCachedAccountEntity(e);t&&n.push(t)});let o=n.find(e=>tf(e.realm,e.homeAccountId))||n[0];o.tenantProfiles=n.map(e=>({tenantId:e.realm,localAccountId:e.localAccountId,name:e.name,isHomeTenant:tf(e.realm,e.homeAccountId)}));let a=tU.toObject(new tv,{...o}),s=a.generateAccountKey();return i.forEach(t=>{t!==s&&this.removeOutdatedAccount(e)}),this.setAccount(a),r?.verbose("Updated an outdated account entity in the cache"),a}return t}async removeAccessToken(e){let t=this.getAccessTokenCredential(e);if(t){if(t.credentialType.toLowerCase()===I.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()&&t.tokenType===R.POP){let e=t.keyId;if(e)try{await this.cryptoImpl.removeTokenBindingKey(e)}catch(e){throw eM(ew)}}return this.removeItem(e)}}removeAppMetadata(){return this.getKeys().forEach(e=>{this.isAppMetadata(e)&&this.removeItem(e)}),!0}readAccountFromCache(e){let t=tv.generateAccountCacheKey(e);return this.getAccount(t,this.commonLogger)}getIdToken(e,t,r,i,n){this.commonLogger.trace("CacheManager - getIdToken called");let o={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:I.ID_TOKEN,clientId:this.clientId,realm:r},a=this.getIdTokensByFilter(o,t),s=a.size;if(s<1)return this.commonLogger.info("CacheManager:getIdToken - No token found"),null;if(s>1){let t=a;if(!r){let r=new Map;a.forEach((t,i)=>{t.realm===e.tenantId&&r.set(i,t)});let i=r.size;if(i<1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result"),a.values().next().value;if(1===i)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile"),r.values().next().value;t=r}return this.commonLogger.info("CacheManager:getIdToken - Multiple matching ID tokens found, clearing them"),t.forEach((e,t)=>{this.removeIdToken(t)}),i&&n&&i.addFields({multiMatchedID:a.size},n),null}return this.commonLogger.info("CacheManager:getIdToken - Returning ID token"),a.values().next().value}getIdTokensByFilter(e,t){let r=t&&t.idToken||this.getTokenKeys().idToken,i=new Map;return r.forEach(t=>{if(!this.idTokenKeyMatchesFilter(t,{clientId:this.clientId,...e}))return;let r=this.getIdTokenCredential(t);r&&this.credentialMatchesFilter(r,e)&&i.set(t,r)}),i}idTokenKeyMatchesFilter(e,t){let r=e.toLowerCase();return(!t.clientId||-1!==r.indexOf(t.clientId.toLowerCase()))&&(!t.homeAccountId||-1!==r.indexOf(t.homeAccountId.toLowerCase()))}removeIdToken(e){this.removeItem(e)}removeRefreshToken(e){this.removeItem(e)}getAccessToken(e,t,r,i,n,o){this.commonLogger.trace("CacheManager - getAccessToken called");let a=tp.createSearchScopes(t.scopes),s=t.authenticationScheme||R.BEARER,c=s&&s.toLowerCase()!==R.BEARER.toLowerCase()?I.ACCESS_TOKEN_WITH_AUTH_SCHEME:I.ACCESS_TOKEN,l={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:c,clientId:this.clientId,realm:i||e.tenantId,target:a,tokenType:s,keyId:t.sshKid,requestedClaimsHash:t.requestedClaimsHash},h=r&&r.accessToken||this.getTokenKeys().accessToken,d=[];h.forEach(e=>{if(this.accessTokenKeyMatchesFilter(e,l,!0)){let t=this.getAccessTokenCredential(e);t&&this.credentialMatchesFilter(t,l)&&d.push(t)}});let u=d.length;return u<1?(this.commonLogger.info("CacheManager:getAccessToken - No token found"),null):u>1?(this.commonLogger.info("CacheManager:getAccessToken - Multiple access tokens found, clearing them"),d.forEach(e=>{this.removeAccessToken(ex(e))}),n&&o&&n.addFields({multiMatchedAT:d.length},o),null):(this.commonLogger.info("CacheManager:getAccessToken - Returning access token"),d[0])}accessTokenKeyMatchesFilter(e,t,r){let i=e.toLowerCase();if(t.clientId&&-1===i.indexOf(t.clientId.toLowerCase())||t.homeAccountId&&-1===i.indexOf(t.homeAccountId.toLowerCase())||t.realm&&-1===i.indexOf(t.realm.toLowerCase())||t.requestedClaimsHash&&-1===i.indexOf(t.requestedClaimsHash.toLowerCase()))return!1;if(t.target){let e=t.target.asArray();for(let t=0;t<e.length;t++){if(r&&!i.includes(e[t].toLowerCase()))return!1;if(!r&&i.includes(e[t].toLowerCase()))break}}return!0}getAccessTokensByFilter(e){let t=this.getTokenKeys(),r=[];return t.accessToken.forEach(t=>{if(!this.accessTokenKeyMatchesFilter(t,e,!0))return;let i=this.getAccessTokenCredential(t);i&&this.credentialMatchesFilter(i,e)&&r.push(i)}),r}getRefreshToken(e,t,r,i,n){this.commonLogger.trace("CacheManager - getRefreshToken called");let o={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:I.REFRESH_TOKEN,clientId:this.clientId,familyId:t?"1":void 0},a=r&&r.refreshToken||this.getTokenKeys().refreshToken,s=[];a.forEach(e=>{if(this.refreshTokenKeyMatchesFilter(e,o)){let t=this.getRefreshTokenCredential(e);t&&this.credentialMatchesFilter(t,o)&&s.push(t)}});let c=s.length;return c<1?(this.commonLogger.info("CacheManager:getRefreshToken - No refresh token found."),null):(c>1&&i&&n&&i.addFields({multiMatchedRT:c},n),this.commonLogger.info("CacheManager:getRefreshToken - returning refresh token"),s[0])}refreshTokenKeyMatchesFilter(e,t){let r=e.toLowerCase();return(!t.familyId||-1!==r.indexOf(t.familyId.toLowerCase()))&&(!!t.familyId||!t.clientId||-1!==r.indexOf(t.clientId.toLowerCase()))&&(!t.homeAccountId||-1!==r.indexOf(t.homeAccountId.toLowerCase()))}readAppMetadataFromCache(e){let t={environment:e,clientId:this.clientId},r=this.getAppMetadataFilteredBy(t),i=Object.keys(r).map(e=>r[e]),n=i.length;if(n<1)return null;if(n>1)throw eM(ei);return i[0]}isAppMetadataFOCI(e){let t=this.readAppMetadataFromCache(e);return!!(t&&"1"===t.familyId)}matchHomeAccountId(e,t){return!!("string"==typeof e.homeAccountId&&t===e.homeAccountId)}matchLocalAccountIdFromTokenClaims(e,t){return t===(e.oid||e.sub)}matchLocalAccountIdFromTenantProfile(e,t){return e.localAccountId===t}matchName(e,t){return!(t.toLowerCase()!==e.name?.toLowerCase())}matchUsername(e,t){return!!(e&&"string"==typeof e&&t?.toLowerCase()===e.toLowerCase())}matchUserAssertionHash(e,t){return!!(e.userAssertionHash&&t===e.userAssertionHash)}matchEnvironment(e,t){if(this.staticAuthorityOptions){let r=function(e,t){let r;let i=e.canonicalAuthority;if(i){let n=new tR(i).getUrlComponents().HostNameAndPort;r=tb(n,e.cloudDiscoveryMetadata?.metadata,w.CONFIG,t)||tb(n,tk.metadata,w.HARDCODED_VALUES,t)||e.knownAuthorities}return r||[]}(this.staticAuthorityOptions,this.commonLogger);if(r.includes(t)&&r.includes(e.environment))return!0}let r=this.getAuthorityMetadataByAlias(t);return!!(r&&r.aliases.indexOf(e.environment)>-1)}matchCredentialType(e,t){return e.credentialType&&t.toLowerCase()===e.credentialType.toLowerCase()}matchClientId(e,t){return!!(e.clientId&&t===e.clientId)}matchFamilyId(e,t){return!!(e.familyId&&t===e.familyId)}matchRealm(e,t){return!(e.realm?.toLowerCase()!==t.toLowerCase())}matchNativeAccountId(e,t){return!!(e.nativeAccountId&&t===e.nativeAccountId)}matchLoginHintFromTokenClaims(e,t){return e.login_hint===t||e.preferred_username===t||e.upn===t}matchSid(e,t){return e.sid===t}matchAuthorityType(e,t){return!!(e.authorityType&&t.toLowerCase()===e.authorityType.toLowerCase())}matchTarget(e,t){return(e.credentialType===I.ACCESS_TOKEN||e.credentialType===I.ACCESS_TOKEN_WITH_AUTH_SCHEME)&&!!e.target&&tp.fromString(e.target).containsScopeSet(t)}matchTokenType(e,t){return!!(e.tokenType&&e.tokenType===t)}matchKeyId(e,t){return!!(e.keyId&&e.keyId===t)}isAppMetadata(e){return -1!==e.indexOf(A)}isAuthorityMetadata(e){return -1!==e.indexOf(v)}generateAuthorityMetadataCacheKey(e){return`${v}-${this.clientId}-${e}`}static toObject(e,t){for(let r in t)e[r]=t[r];return e}}class tH extends tU{setAccount(){throw eM(eb)}getAccount(){throw eM(eb)}getCachedAccountEntity(){throw eM(eb)}setIdTokenCredential(){throw eM(eb)}getIdTokenCredential(){throw eM(eb)}setAccessTokenCredential(){throw eM(eb)}getAccessTokenCredential(){throw eM(eb)}setRefreshTokenCredential(){throw eM(eb)}getRefreshTokenCredential(){throw eM(eb)}setAppMetadata(){throw eM(eb)}getAppMetadata(){throw eM(eb)}setServerTelemetry(){throw eM(eb)}getServerTelemetry(){throw eM(eb)}setAuthorityMetadata(){throw eM(eb)}getAuthorityMetadata(){throw eM(eb)}getAuthorityMetadataKeys(){throw eM(eb)}setThrottlingCache(){throw eM(eb)}getThrottlingCache(){throw eM(eb)}removeItem(){throw eM(eb)}getKeys(){throw eM(eb)}getAccountKeys(){throw eM(eb)}getTokenKeys(){throw eM(eb)}async clear(){throw eM(eb)}updateCredentialCacheKey(){throw eM(eb)}removeOutdatedAccount(){throw eM(eb)}}/*! @azure/msal-common v14.14.1 2024-08-13 */let tL={tokenRenewalOffsetSeconds:300,preventCorsPreflight:!1},tD={loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:i.Info,correlationId:s.EMPTY_STRING},tK={claimsBasedCachingEnabled:!1},tF={async sendGetRequestAsync(){throw eM(eb)},async sendPostRequestAsync(){throw eM(eb)}},tx={sku:s.SKU,version:eH,cpu:s.EMPTY_STRING,os:s.EMPTY_STRING},tB={clientSecret:s.EMPTY_STRING,clientAssertion:void 0},tG={azureCloudInstance:U.None,tenant:`${s.DEFAULT_COMMON_TENANT}`},t$={application:{appName:"",appVersion:""}};function tz(e){return e.authOptions.authority.options.protocolMode===q.OIDC}/*! @azure/msal-common v14.14.1 2024-08-13 */let tQ={sendGetRequestAsync:()=>Promise.reject(eM(eb)),sendPostRequestAsync:()=>Promise.reject(eM(eb))},tY={AcquireTokenByCode:"acquireTokenByCode",AcquireTokenByRefreshToken:"acquireTokenByRefreshToken",AcquireTokenSilent:"acquireTokenSilent",AcquireTokenSilentAsync:"acquireTokenSilentAsync",AcquireTokenPopup:"acquireTokenPopup",AcquireTokenPreRedirect:"acquireTokenPreRedirect",AcquireTokenRedirect:"acquireTokenRedirect",CryptoOptsGetPublicKeyThumbprint:"cryptoOptsGetPublicKeyThumbprint",CryptoOptsSignJwt:"cryptoOptsSignJwt",SilentCacheClientAcquireToken:"silentCacheClientAcquireToken",SilentIframeClientAcquireToken:"silentIframeClientAcquireToken",AwaitConcurrentIframe:"awaitConcurrentIframe",SilentRefreshClientAcquireToken:"silentRefreshClientAcquireToken",SsoSilent:"ssoSilent",StandardInteractionClientGetDiscoveredAuthority:"standardInteractionClientGetDiscoveredAuthority",FetchAccountIdWithNativeBroker:"fetchAccountIdWithNativeBroker",NativeInteractionClientAcquireToken:"nativeInteractionClientAcquireToken",BaseClientCreateTokenRequestHeaders:"baseClientCreateTokenRequestHeaders",RefreshTokenClientExecutePostToTokenEndpoint:"refreshTokenClientExecutePostToTokenEndpoint",AuthorizationCodeClientExecutePostToTokenEndpoint:"authorizationCodeClientExecutePostToTokenEndpoint",BrokerHandhshake:"brokerHandshake",AcquireTokenByRefreshTokenInBroker:"acquireTokenByRefreshTokenInBroker",AcquireTokenByBroker:"acquireTokenByBroker",RefreshTokenClientExecuteTokenRequest:"refreshTokenClientExecuteTokenRequest",RefreshTokenClientAcquireToken:"refreshTokenClientAcquireToken",RefreshTokenClientAcquireTokenWithCachedRefreshToken:"refreshTokenClientAcquireTokenWithCachedRefreshToken",RefreshTokenClientAcquireTokenByRefreshToken:"refreshTokenClientAcquireTokenByRefreshToken",RefreshTokenClientCreateTokenRequestBody:"refreshTokenClientCreateTokenRequestBody",AcquireTokenFromCache:"acquireTokenFromCache",SilentFlowClientAcquireCachedToken:"silentFlowClientAcquireCachedToken",SilentFlowClientGenerateResultFromCacheRecord:"silentFlowClientGenerateResultFromCacheRecord",AcquireTokenBySilentIframe:"acquireTokenBySilentIframe",InitializeBaseRequest:"initializeBaseRequest",InitializeSilentRequest:"initializeSilentRequest",InitializeClientApplication:"initializeClientApplication",PopupClientTokenHelper:"popupClientTokenHelper",SilentIframeClientTokenHelper:"silentIframeClientTokenHelper",SilentHandlerInitiateAuthRequest:"silentHandlerInitiateAuthRequest",SilentHandlerMonitorIframeForHash:"silentHandlerMonitorIframeForHash",SilentHandlerLoadFrame:"silentHandlerLoadFrame",SilentHandlerLoadFrameSync:"silentHandlerLoadFrameSync",StandardInteractionClientCreateAuthCodeClient:"standardInteractionClientCreateAuthCodeClient",StandardInteractionClientGetClientConfiguration:"standardInteractionClientGetClientConfiguration",StandardInteractionClientInitializeAuthorizationRequest:"standardInteractionClientInitializeAuthorizationRequest",StandardInteractionClientInitializeAuthorizationCodeRequest:"standardInteractionClientInitializeAuthorizationCodeRequest",GetAuthCodeUrl:"getAuthCodeUrl",HandleCodeResponseFromServer:"handleCodeResponseFromServer",HandleCodeResponse:"handleCodeResponse",UpdateTokenEndpointAuthority:"updateTokenEndpointAuthority",AuthClientAcquireToken:"authClientAcquireToken",AuthClientExecuteTokenRequest:"authClientExecuteTokenRequest",AuthClientCreateTokenRequestBody:"authClientCreateTokenRequestBody",AuthClientCreateQueryString:"authClientCreateQueryString",PopTokenGenerateCnf:"popTokenGenerateCnf",PopTokenGenerateKid:"popTokenGenerateKid",HandleServerTokenResponse:"handleServerTokenResponse",DeserializeResponse:"deserializeResponse",AuthorityFactoryCreateDiscoveredInstance:"authorityFactoryCreateDiscoveredInstance",AuthorityResolveEndpointsAsync:"authorityResolveEndpointsAsync",AuthorityResolveEndpointsFromLocalSources:"authorityResolveEndpointsFromLocalSources",AuthorityGetCloudDiscoveryMetadataFromNetwork:"authorityGetCloudDiscoveryMetadataFromNetwork",AuthorityUpdateCloudDiscoveryMetadata:"authorityUpdateCloudDiscoveryMetadata",AuthorityGetEndpointMetadataFromNetwork:"authorityGetEndpointMetadataFromNetwork",AuthorityUpdateEndpointMetadata:"authorityUpdateEndpointMetadata",AuthorityUpdateMetadataWithRegionalInformation:"authorityUpdateMetadataWithRegionalInformation",RegionDiscoveryDetectRegion:"regionDiscoveryDetectRegion",RegionDiscoveryGetRegionFromIMDS:"regionDiscoveryGetRegionFromIMDS",RegionDiscoveryGetCurrentVersion:"regionDiscoveryGetCurrentVersion",AcquireTokenByCodeAsync:"acquireTokenByCodeAsync",GetEndpointMetadataFromNetwork:"getEndpointMetadataFromNetwork",GetCloudDiscoveryMetadataFromNetworkMeasurement:"getCloudDiscoveryMetadataFromNetworkMeasurement",HandleRedirectPromiseMeasurement:"handleRedirectPromise",HandleNativeRedirectPromiseMeasurement:"handleNativeRedirectPromise",UpdateCloudDiscoveryMetadataMeasurement:"updateCloudDiscoveryMetadataMeasurement",UsernamePasswordClientAcquireToken:"usernamePasswordClientAcquireToken",NativeMessageHandlerHandshake:"nativeMessageHandlerHandshake",NativeGenerateAuthResult:"nativeGenerateAuthResult",RemoveHiddenIframe:"removeHiddenIframe",ClearTokensAndKeysWithClaims:"clearTokensAndKeysWithClaims",CacheManagerGetRefreshToken:"cacheManagerGetRefreshToken",GeneratePkceCodes:"generatePkceCodes",GenerateCodeVerifier:"generateCodeVerifier",GenerateCodeChallengeFromVerifier:"generateCodeChallengeFromVerifier",Sha256Digest:"sha256Digest",GetRandomValues:"getRandomValues"};tY.AcquireTokenByCode,tY.AcquireTokenByRefreshToken,tY.AcquireTokenSilent,tY.AcquireTokenSilentAsync,tY.AcquireTokenPopup,tY.AcquireTokenRedirect,tY.CryptoOptsGetPublicKeyThumbprint,tY.CryptoOptsSignJwt,tY.SilentCacheClientAcquireToken,tY.SilentIframeClientAcquireToken,tY.SilentRefreshClientAcquireToken,tY.SsoSilent,tY.StandardInteractionClientGetDiscoveredAuthority,tY.FetchAccountIdWithNativeBroker,tY.NativeInteractionClientAcquireToken,tY.BaseClientCreateTokenRequestHeaders,tY.RefreshTokenClientExecutePostToTokenEndpoint,tY.AuthorizationCodeClientExecutePostToTokenEndpoint,tY.BrokerHandhshake,tY.AcquireTokenByRefreshTokenInBroker,tY.AcquireTokenByBroker,tY.RefreshTokenClientExecuteTokenRequest,tY.RefreshTokenClientAcquireToken,tY.RefreshTokenClientAcquireTokenWithCachedRefreshToken,tY.RefreshTokenClientAcquireTokenByRefreshToken,tY.RefreshTokenClientCreateTokenRequestBody,tY.AcquireTokenFromCache,tY.SilentFlowClientAcquireCachedToken,tY.SilentFlowClientGenerateResultFromCacheRecord,tY.AcquireTokenBySilentIframe,tY.InitializeBaseRequest,tY.InitializeSilentRequest,tY.InitializeClientApplication,tY.SilentIframeClientTokenHelper,tY.SilentHandlerInitiateAuthRequest,tY.SilentHandlerMonitorIframeForHash,tY.SilentHandlerLoadFrame,tY.SilentHandlerLoadFrameSync,tY.StandardInteractionClientCreateAuthCodeClient,tY.StandardInteractionClientGetClientConfiguration,tY.StandardInteractionClientInitializeAuthorizationRequest,tY.StandardInteractionClientInitializeAuthorizationCodeRequest,tY.GetAuthCodeUrl,tY.HandleCodeResponseFromServer,tY.HandleCodeResponse,tY.UpdateTokenEndpointAuthority,tY.AuthClientAcquireToken,tY.AuthClientExecuteTokenRequest,tY.AuthClientCreateTokenRequestBody,tY.AuthClientCreateQueryString,tY.PopTokenGenerateCnf,tY.PopTokenGenerateKid,tY.HandleServerTokenResponse,tY.DeserializeResponse,tY.AuthorityFactoryCreateDiscoveredInstance,tY.AuthorityResolveEndpointsAsync,tY.AuthorityResolveEndpointsFromLocalSources,tY.AuthorityGetCloudDiscoveryMetadataFromNetwork,tY.AuthorityUpdateCloudDiscoveryMetadata,tY.AuthorityGetEndpointMetadataFromNetwork,tY.AuthorityUpdateEndpointMetadata,tY.AuthorityUpdateMetadataWithRegionalInformation,tY.RegionDiscoveryDetectRegion,tY.RegionDiscoveryGetRegionFromIMDS,tY.RegionDiscoveryGetCurrentVersion,tY.AcquireTokenByCodeAsync,tY.GetEndpointMetadataFromNetwork,tY.GetCloudDiscoveryMetadataFromNetworkMeasurement,tY.HandleRedirectPromiseMeasurement,tY.HandleNativeRedirectPromiseMeasurement,tY.UpdateCloudDiscoveryMetadataMeasurement,tY.UsernamePasswordClientAcquireToken,tY.NativeMessageHandlerHandshake,tY.NativeGenerateAuthResult,tY.RemoveHiddenIframe,tY.ClearTokensAndKeysWithClaims,tY.CacheManagerGetRefreshToken,tY.GeneratePkceCodes,tY.GenerateCodeVerifier,tY.GenerateCodeChallengeFromVerifier,tY.Sha256Digest,tY.GetRandomValues;/*! @azure/msal-common v14.14.1 2024-08-13 */class tV{startMeasurement(){}endMeasurement(){}flushMeasurement(){return null}}class tW{generateId(){return"callback-id"}startMeasurement(e,t){return{end:()=>null,discard:()=>{},add:()=>{},increment:()=>{},event:{eventId:this.generateId(),status:1,authority:"",libraryName:"",libraryVersion:"",clientId:"",name:e,startTimeMs:Date.now(),correlationId:t||""},measurement:new tV}}startPerformanceMeasurement(){return new tV}calculateQueuedTime(){return 0}addQueueMeasurement(){}setPreQueueTime(){}endMeasurement(){return null}discardMeasurements(){}removePerformanceCallback(){return!0}addPerformanceCallback(){return""}emitEvents(){}addFields(){}incrementFields(){}cacheEventByCorrelationId(){}}/*! @azure/msal-browser v3.21.0 2024-08-13 */let tj={INVALID_GRANT_ERROR:"invalid_grant",POPUP_WIDTH:483,POPUP_HEIGHT:600,POPUP_NAME_PREFIX:"msal",DEFAULT_POLL_INTERVAL_MS:30,MSAL_SKU:"msal.js.browser"},tJ={CHANNEL_ID:"53ee284d-920a-4b59-9d30-a60315b26836",PREFERRED_EXTENSION_ID:"ppnbnpeolgkicgegkbkbjmhlideopiji",MATS_TELEMETRY:"MATS"},tX={HandshakeRequest:"Handshake",HandshakeResponse:"HandshakeResponse",GetToken:"GetToken",Response:"Response"},tZ={LocalStorage:"localStorage",SessionStorage:"sessionStorage",MemoryStorage:"memoryStorage"},t0={GET:"GET",POST:"POST"},t1={AUTHORITY:"authority",REQUEST_STATE:"request.state",NONCE_IDTOKEN:"nonce.id_token",ORIGIN_URI:"request.origin",URL_HASH:"urlHash",REQUEST_PARAMS:"request.params",INTERACTION_STATUS_KEY:"interaction.status",CCS_CREDENTIAL:"ccs.credential",CORRELATION_ID:"request.correlationId",NATIVE_REQUEST:"request.native",REDIRECT_REQUEST:"request.redirect",REQUEST_RETRY:"request.retry"},t2={ACCOUNT_KEYS:"msal.account.keys",TOKEN_KEYS:"msal.token.keys"},t4="wrapper.sku",t6="wrapper.version",t3={acquireTokenRedirect:861,acquireTokenPopup:862,ssoSilent:863,handleRedirectPromise:865,acquireTokenByCode:866,acquireTokenSilent_silentFlow:61,logout:961,logoutPopup:962};(a=n||(n={})).Redirect="redirect",a.Popup="popup",a.Silent="silent",a.None="none";let t5={scopes:l},t8="msal.db",t9=`${t8}.keys`,t7={Default:0,AccessToken:1,AccessTokenAndRefreshToken:2,RefreshToken:3,RefreshTokenAndNetwork:4,Skip:5},re=[t7.Default,t7.Skip,t7.RefreshTokenAndNetwork];/*! @azure/msal-browser v3.21.0 2024-08-13 */class rt{navigateInternal(e,t){return rt.defaultNavigateWindow(e,t)}navigateExternal(e,t){return rt.defaultNavigateWindow(e,t)}static defaultNavigateWindow(e,t){return t.noHistory?window.location.replace(e):window.location.assign(e),new Promise(e=>{setTimeout(()=>{e(!0)},t.timeout)})}}/*! @azure/msal-browser v3.21.0 2024-08-13 */let rr="pkce_not_created",ri="crypto_nonexistent",rn="empty_navigate_uri",ro="hash_empty_error",ra="no_state_in_hash",rs="hash_does_not_contain_known_properties",rc="unable_to_parse_state",rl="state_interaction_type_mismatch",rh="interaction_in_progress",rd="popup_window_error",ru="empty_window_error",rg="user_cancelled",rp="monitor_popup_timeout",rm="monitor_window_timeout",rC="redirect_in_iframe",rf="block_iframe_reload",ry="block_nested_popups",rT="iframe_closed_prematurely",rI="silent_logout_unsupported",rA="no_account_error",rv="silent_prompt_value_error",rw="no_token_request_cache_error",rE="unable_to_parse_token_request_cache_error",rR="no_cached_authority_error",rS="auth_request_not_set_error",rk="invalid_cache_type",r_="non_browser_environment",rb="database_not_open",rO="no_network_connectivity",rP="post_request_failed",rN="get_request_failed",rM="failed_to_parse_response",rq="unable_to_load_token",rU="crypto_key_not_found",rH="auth_code_required",rL="auth_code_or_nativeAccountId_required",rD="spa_code_and_nativeAccountId_present",rK="database_unavailable",rF="unable_to_acquire_token_from_native_platform",rx="native_handshake_timeout",rB="native_extension_not_installed",rG="native_connection_not_established",r$="uninitialized_public_client_application",rz="native_prompt_not_supported",rQ="invalid_base64_string",rY="invalid_pop_token_request",rV="failed_to_retry",rW="For more visit: aka.ms/msaljs/browser-errors",rj={[rr]:"The PKCE code challenge and verifier could not be generated.",[ri]:"The crypto object or function is not available.",[rn]:"Navigation URI is empty. Please check stack trace for more info.",[ro]:`Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${rW}`,[ra]:"Hash does not contain state. Please verify that the request originated from msal.",[rs]:`Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${rW}`,[rc]:"Unable to parse state. Please verify that the request originated from msal.",[rl]:"Hash contains state but the interaction type does not match the caller.",[rh]:`Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${rW}`,[rd]:"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.",[ru]:"window.open returned null or undefined window object.",[rg]:"User cancelled the flow.",[rp]:`Token acquisition in popup failed due to timeout.  ${rW}`,[rm]:`Token acquisition in iframe failed due to timeout.  ${rW}`,[rC]:"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.",[rf]:`Request was blocked inside an iframe because MSAL detected an authentication response.  ${rW}`,[ry]:"Request was blocked inside a popup because MSAL detected it was running in a popup.",[rT]:"The iframe being monitored was closed prematurely.",[rI]:"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.",[rA]:"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.",[rv]:"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.",[rw]:"No token request found in cache.",[rE]:"The cached token request could not be parsed.",[rR]:"No cached authority found.",[rS]:"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler",[rk]:"Invalid cache type",[r_]:"Login and token requests are not supported in non-browser environments.",[rb]:"Database is not open!",[rO]:"No network connectivity. Check your internet connection.",[rP]:"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'",[rN]:"Network request failed. Please check the network trace to determine root cause.",[rM]:"Failed to parse network response. Check network trace.",[rq]:"Error loading token to cache.",[rU]:"Cryptographic Key or Keypair not found in browser storage.",[rH]:"An authorization code must be provided (as the `code` property on the request) to this flow.",[rL]:"An authorization code or nativeAccountId must be provided to this flow.",[rD]:"Request cannot contain both spa code and native account id.",[rK]:"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.",[rF]:`Unable to acquire token from native platform.  ${rW}`,[rx]:"Timed out while attempting to establish connection to browser extension",[rB]:"Native extension is not installed. If you think this is a mistake call the initialize function.",[rG]:`Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${rW}`,[r$]:`You must call and await the initialize function before attempting to call any other MSAL API.  ${rW}`,[rz]:"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.",[rQ]:"Invalid base64 encoded string.",[rY]:"Invalid PoP token request. The request should not have both a popKid value and signPopToken set to true.",[rV]:"Unable to retry failed auth code redemption due to usage of the onRedirectNavigate request parameter. Please set onRedirectNavigate on the PublicClientApplication configuration instead or call loginRedirect again."};rj[rr],rj[ri],rj[rn],rj[ro],rj[ra],rj[rs],rj[rc],rj[rl],rj[rh],rj[rd],rj[ru],rj[rg],rj[rp],rj[rm],rj[rC],rj[rf],rj[ry],rj[rT],rj[rI],rj[rA],rj[rv],rj[rw],rj[rE],rj[rR],rj[rS],rj[rk],rj[r_],rj[rb],rj[rO],rj[rP],rj[rN],rj[rM],rj[rq],rj[rU],rj[rH],rj[rL],rj[rD],rj[rK],rj[rF],rj[rx],rj[rB],rj[rG],rj[r$],rj[rz],rj[rQ],rj[rY];class rJ extends K{constructor(e){super(e,rj[e]),Object.setPrototypeOf(this,rJ.prototype),this.name="BrowserAuthError"}}function rX(e){return new rJ(e)}/*! @azure/msal-browser v3.21.0 2024-08-13 */class rZ{async sendGetRequestAsync(e,t){let r;try{r=await fetch(e,{method:t0.GET,headers:this.getFetchHeaders(t)})}catch(e){if(window.navigator.onLine)throw rX(rN);throw rX(rO)}try{return{headers:this.getHeaderDict(r.headers),body:await r.json(),status:r.status}}catch(e){throw rX(rM)}}async sendPostRequestAsync(e,t){let r;let i=t&&t.body||s.EMPTY_STRING;try{r=await fetch(e,{method:t0.POST,headers:this.getFetchHeaders(t),body:i})}catch(e){if(window.navigator.onLine)throw rX(rP);throw rX(rO)}try{return{headers:this.getHeaderDict(r.headers),body:await r.json(),status:r.status}}catch(e){throw rX(rM)}}getFetchHeaders(e){let t=new Headers;if(!(e&&e.headers))return t;let r=e.headers;return Object.keys(r).forEach(e=>{t.append(e,r[e])}),t}getHeaderDict(e){let t={};return e.forEach((e,r)=>{t[r]=e}),t}}let r0="3.21.0";/*! @azure/msal-browser v3.21.0 2024-08-13 */class r1{static loggerCallback(e,t){switch(e){case i.Error:console.error(t);return;case i.Info:console.info(t);return;case i.Verbose:console.debug(t);return;case i.Warning:console.warn(t);return;default:console.log(t);return}}constructor(e){let t;this.browserEnvironment="undefined"!=typeof window,this.config=function({auth:e,cache:t,system:r,telemetry:n},o){let a={clientId:s.EMPTY_STRING,authority:`${s.DEFAULT_AUTHORITY}`,knownAuthorities:[],cloudDiscoveryMetadata:s.EMPTY_STRING,authorityMetadata:s.EMPTY_STRING,redirectUri:s.EMPTY_STRING,postLogoutRedirectUri:s.EMPTY_STRING,navigateToLoginRequestUrl:!0,clientCapabilities:[],protocolMode:q.AAD,OIDCOptions:{serverResponseType:C.FRAGMENT,defaultScopes:[s.OPENID_SCOPE,s.PROFILE_SCOPE,s.OFFLINE_ACCESS_SCOPE]},azureCloudOptions:{azureCloudInstance:U.None,tenant:s.EMPTY_STRING},skipAuthorityMetadataCache:!1,supportsNestedAppAuth:!1},c={cacheLocation:tZ.SessionStorage,temporaryCacheLocation:tZ.SessionStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!!t&&t.cacheLocation===tZ.LocalStorage,claimsBasedCachingEnabled:!1},l={loggerCallback:()=>{},logLevel:i.Info,piiLoggingEnabled:!1},h={...{...tL,loggerOptions:l,networkClient:o?new rZ:tQ,navigationClient:new rt,loadFrameTimeout:0,windowHashTimeout:r?.loadFrameTimeout||6e4,iframeHashTimeout:r?.loadFrameTimeout||1e4,navigateFrameWait:0,redirectNavigationTimeout:3e4,asyncPopups:!1,allowRedirectInIframe:!1,allowNativeBroker:!1,nativeBrokerHandshakeTimeout:r?.nativeBrokerHandshakeTimeout||2e3,pollIntervalMilliseconds:tj.DEFAULT_POLL_INTERVAL_MS},...r,loggerOptions:r?.loggerOptions||l},d={application:{appName:s.EMPTY_STRING,appVersion:s.EMPTY_STRING},client:new tW};if(e?.protocolMode!==q.OIDC&&e?.OIDCOptions&&new M(h.loggerOptions).warning(JSON.stringify(tu(ts))),e?.protocolMode&&e.protocolMode!==q.AAD&&h?.allowNativeBroker)throw tu(tc);return{auth:{...a,...e,OIDCOptions:{...a.OIDCOptions,...e?.OIDCOptions}},cache:{...c,...t},system:h,telemetry:{...d,...n}}}(e,this.browserEnvironment);try{t=window[tZ.SessionStorage]}catch(e){}let r=t?.getItem("msal.browser.log.level"),n=t?.getItem("msal.browser.log.pii")?.toLowerCase(),o="true"===n||"false"!==n&&void 0,a={...this.config.system.loggerOptions},c=r&&Object.keys(i).includes(r)?i[r]:void 0;c&&(a.loggerCallback=r1.loggerCallback,a.logLevel=c),void 0!==o&&(a.piiLoggingEnabled=o),this.logger=new M(a,"@azure/msal-browser",r0),this.available=!1}getConfig(){return this.config}getLogger(){return this.logger}isAvailable(){return this.available}isBrowserEnvironment(){return this.browserEnvironment}}/*! @azure/msal-browser v3.21.0 2024-08-13 */class r2 extends r1{getModuleName(){return r2.MODULE_NAME}getId(){return r2.ID}async initialize(){return this.available="undefined"!=typeof window,this.available}}r2.MODULE_NAME="",r2.ID="StandardOperatingContext";/*! @azure/msal-common v14.14.1 2024-08-13 */let r4="missing_kid_error",r6="missing_alg_error",r3={[r4]:"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.",[r6]:"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided."};class r5 extends K{constructor(e,t){super(e,t),this.name="JoseHeaderError",Object.setPrototypeOf(this,r5.prototype)}}function r8(e){return new r5(e,r3[e])}/*! @azure/msal-common v14.14.1 2024-08-13 */class r9{constructor(e){this.typ=e.typ,this.alg=e.alg,this.kid=e.kid}static getShrHeaderString(e){if(!e.kid)throw r8(r4);if(!e.alg)throw r8(r6);return JSON.stringify(new r9({typ:e.typ||N.Pop,kid:e.kid,alg:e.alg}))}}/*! @azure/msal-browser v3.21.0 2024-08-13 */function r7(e){return encodeURIComponent(it(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"))}function ie(e){return ir(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function it(e){return ir(new TextEncoder().encode(e))}function ir(e){return btoa(Array.from(e,e=>String.fromCodePoint(e)).join(""))}/*! @azure/msal-browser v3.21.0 2024-08-13 */function ii(e){return new TextDecoder().decode(function(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw rX(rQ)}let r=atob(t);return Uint8Array.from(r,e=>e.codePointAt(0)||0)}(e))}let io="SHA-256",ia=new Uint8Array([1,0,1]),is="0123456789abcdef",ic=new Uint32Array(1),il={name:"RSASSA-PKCS1-v1_5",hash:io,modulusLength:2048,publicExponent:ia};async function ih(e,t,r){t?.addQueueMeasurement(tY.Sha256Digest,r);let i=new TextEncoder().encode(e);return window.crypto.subtle.digest(io,i)}function id(e){return window.crypto.getRandomValues(e)}function iu(){return window.crypto.getRandomValues(ic),ic[0]}function ig(){let e=Date.now(),t=1024*iu()+(1023&iu()),r=new Uint8Array(16),i=Math.trunc(t/1073741824),n=t&1073741824-1,o=iu();r[0]=e/1099511627776,r[1]=e/4294967296,r[2]=e/16777216,r[3]=e/65536,r[4]=e/256,r[5]=e,r[6]=112|i>>>8,r[7]=i,r[8]=128|n>>>24,r[9]=n>>>16,r[10]=n>>>8,r[11]=n,r[12]=o>>>24,r[13]=o>>>16,r[14]=o>>>8,r[15]=o;let a="";for(let e=0;e<r.length;e++)a+=is.charAt(r[e]>>>4)+is.charAt(15&r[e]),(3===e||5===e||7===e||9===e)&&(a+="-");return a}async function ip(e,t){return window.crypto.subtle.generateKey(il,e,t)}async function im(e){return window.crypto.subtle.exportKey("jwk",e)}async function iC(e,t,r){return window.crypto.subtle.importKey("jwk",e,il,t,r)}async function iy(e,t){return window.crypto.subtle.sign(il,e,t)}async function iT(e){return ie(new Uint8Array(await ih(e)))}/*! @azure/msal-browser v3.21.0 2024-08-13 */class iI{constructor(){this.dbName=t8,this.version=1,this.tableName=t9,this.dbOpen=!1}async open(){return new Promise((e,t)=>{let r=window.indexedDB.open(this.dbName,this.version);r.addEventListener("upgradeneeded",e=>{e.target.result.createObjectStore(this.tableName)}),r.addEventListener("success",t=>{this.db=t.target.result,this.dbOpen=!0,e()}),r.addEventListener("error",()=>t(rX(rK)))})}closeConnection(){let e=this.db;e&&this.dbOpen&&(e.close(),this.dbOpen=!1)}async validateDbIsOpen(){if(!this.dbOpen)return this.open()}async getItem(e){return await this.validateDbIsOpen(),new Promise((t,r)=>{if(!this.db)return r(rX(rb));let i=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).get(e);i.addEventListener("success",e=>{this.closeConnection(),t(e.target.result)}),i.addEventListener("error",e=>{this.closeConnection(),r(e)})})}async setItem(e,t){return await this.validateDbIsOpen(),new Promise((r,i)=>{if(!this.db)return i(rX(rb));let n=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).put(t,e);n.addEventListener("success",()=>{this.closeConnection(),r()}),n.addEventListener("error",e=>{this.closeConnection(),i(e)})})}async removeItem(e){return await this.validateDbIsOpen(),new Promise((t,r)=>{if(!this.db)return r(rX(rb));let i=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).delete(e);i.addEventListener("success",()=>{this.closeConnection(),t()}),i.addEventListener("error",e=>{this.closeConnection(),r(e)})})}async getKeys(){return await this.validateDbIsOpen(),new Promise((e,t)=>{if(!this.db)return t(rX(rb));let r=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).getAllKeys();r.addEventListener("success",t=>{this.closeConnection(),e(t.target.result)}),r.addEventListener("error",e=>{this.closeConnection(),t(e)})})}async containsKey(e){return await this.validateDbIsOpen(),new Promise((t,r)=>{if(!this.db)return r(rX(rb));let i=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).count(e);i.addEventListener("success",e=>{this.closeConnection(),t(1===e.target.result)}),i.addEventListener("error",e=>{this.closeConnection(),r(e)})})}async deleteDatabase(){return this.db&&this.dbOpen&&this.closeConnection(),new Promise((e,t)=>{let r=window.indexedDB.deleteDatabase(t8),i=setTimeout(()=>t(!1),200);r.addEventListener("success",()=>(clearTimeout(i),e(!0))),r.addEventListener("blocked",()=>(clearTimeout(i),e(!0))),r.addEventListener("error",()=>(clearTimeout(i),t(!1)))})}}/*! @azure/msal-browser v3.21.0 2024-08-13 */class iA{constructor(){this.cache=new Map}getItem(e){return this.cache.get(e)||null}setItem(e,t){this.cache.set(e,t)}removeItem(e){this.cache.delete(e)}getKeys(){let e=[];return this.cache.forEach((t,r)=>{e.push(r)}),e}containsKey(e){return this.cache.has(e)}clear(){this.cache.clear()}}/*! @azure/msal-browser v3.21.0 2024-08-13 */class iv{constructor(e){this.inMemoryCache=new iA,this.indexedDBCache=new iI,this.logger=e}handleDatabaseAccessError(e){if(e instanceof rJ&&e.errorCode===rK)this.logger.error("Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.");else throw e}async getItem(e){let t=this.inMemoryCache.getItem(e);if(!t)try{return this.logger.verbose("Queried item not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.getItem(e)}catch(e){this.handleDatabaseAccessError(e)}return t}async setItem(e,t){this.inMemoryCache.setItem(e,t);try{await this.indexedDBCache.setItem(e,t)}catch(e){this.handleDatabaseAccessError(e)}}async removeItem(e){this.inMemoryCache.removeItem(e);try{await this.indexedDBCache.removeItem(e)}catch(e){this.handleDatabaseAccessError(e)}}async getKeys(){let e=this.inMemoryCache.getKeys();if(0===e.length)try{return this.logger.verbose("In-memory cache is empty, now querying persistent storage."),await this.indexedDBCache.getKeys()}catch(e){this.handleDatabaseAccessError(e)}return e}async containsKey(e){let t=this.inMemoryCache.containsKey(e);if(!t)try{return this.logger.verbose("Key not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.containsKey(e)}catch(e){this.handleDatabaseAccessError(e)}return t}clearInMemory(){this.logger.verbose("Deleting in-memory keystore"),this.inMemoryCache.clear(),this.logger.verbose("In-memory keystore deleted")}async clearPersistent(){try{this.logger.verbose("Deleting persistent keystore");let e=await this.indexedDBCache.deleteDatabase();return e&&this.logger.verbose("Persistent keystore deleted"),e}catch(e){return this.handleDatabaseAccessError(e),!1}}}/*! @azure/msal-browser v3.21.0 2024-08-13 */class iw{constructor(e,t){this.logger=e,function(e){if("crypto"in window)e.verbose("BrowserCrypto: modern crypto interface available");else throw e.error("BrowserCrypto: crypto interface is unavailable"),rX(ri)}(e),this.cache=new iv(this.logger),this.performanceClient=t}createNewGuid(){return ig()}base64Encode(e){return it(e)}base64Decode(e){return ii(e)}base64UrlEncode(e){return r7(e)}encodeKid(e){return this.base64UrlEncode(JSON.stringify({kid:e}))}async getPublicKeyThumbprint(e){let t=this.performanceClient?.startMeasurement(tY.CryptoOptsGetPublicKeyThumbprint,e.correlationId),r=await ip(iw.EXTRACTABLE,iw.POP_KEY_USAGES),i=await im(r.publicKey),n=iE({e:i.e,kty:i.kty,n:i.n}),o=await this.hashString(n),a=await im(r.privateKey),s=await iC(a,!1,["sign"]);return await this.cache.setItem(o,{privateKey:s,publicKey:r.publicKey,requestMethod:e.resourceRequestMethod,requestUri:e.resourceRequestUri}),t&&t.end({success:!0}),o}async removeTokenBindingKey(e){return await this.cache.removeItem(e),!await this.cache.containsKey(e)}async clearKeystore(){this.cache.clearInMemory();try{return await this.cache.clearPersistent(),!0}catch(e){return e instanceof Error?this.logger.error(`Clearing keystore failed with error: ${e.message}`):this.logger.error("Clearing keystore failed with unknown error"),!1}}async signJwt(e,t,r,i){let n=this.performanceClient?.startMeasurement(tY.CryptoOptsSignJwt,i),o=await this.cache.getItem(t);if(!o)throw rX(rU);let a=await im(o.publicKey),s=iE(a),c=r7(JSON.stringify({kid:t})),l=r7(r9.getShrHeaderString({...r?.header,alg:a.alg,kid:c}));e.cnf={jwk:JSON.parse(s)};let h=r7(JSON.stringify(e)),d=`${l}.${h}`,u=new TextEncoder().encode(d),g=ie(new Uint8Array(await iy(o.privateKey,u))),p=`${d}.${g}`;return n&&n.end({success:!0}),p}async hashString(e){return iT(e)}}function iE(e){return JSON.stringify(e,Object.keys(e).sort())}iw.POP_KEY_USAGES=["sign","verify"],iw.EXTRACTABLE=!0;/*! @azure/msal-common v14.14.1 2024-08-13 */let iR=(e,t,r,i,n)=>(...o)=>{r.trace(`Executing function ${t}`);let a=i?.startMeasurement(t,n);n&&i?.incrementFields({[t+"CallCount"]:1},n);try{let i=e(...o);return a?.end({success:!0}),r.trace(`Returning result from ${t}`),i}catch(e){r.trace(`Error occurred in ${t}`);try{r.trace(JSON.stringify(e))}catch(e){r.trace("Unable to print error message.")}throw a?.end({success:!1},e),e}},iS=(e,t,r,i,n)=>(...o)=>{r.trace(`Executing function ${t}`);let a=i?.startMeasurement(t,n);return n&&i?.incrementFields({[t+"CallCount"]:1},n),i?.setPreQueueTime(t,n),e(...o).then(e=>(r.trace(`Returning result from ${t}`),a?.end({success:!0}),e)).catch(e=>{r.trace(`Error occurred in ${t}`);try{r.trace(JSON.stringify(e))}catch(e){r.trace("Unable to print error message.")}throw a?.end({success:!1},e),e})};/*! @azure/msal-common v14.14.1 2024-08-13 */class ik{constructor(e,t,r,i){this.networkInterface=e,this.logger=t,this.performanceClient=r,this.correlationId=i}async detectRegion(e,t){this.performanceClient?.addQueueMeasurement(tY.RegionDiscoveryDetectRegion,this.correlationId);let r=e;if(r)t.region_source=b.ENVIRONMENT_VARIABLE;else{let e=ik.IMDS_OPTIONS;try{let i=await iS(this.getRegionFromIMDS.bind(this),tY.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(s.IMDS_VERSION,e);if(i.status===_.httpSuccess&&(r=i.body,t.region_source=b.IMDS),i.status===_.httpBadRequest){let i=await iS(this.getCurrentVersion.bind(this),tY.RegionDiscoveryGetCurrentVersion,this.logger,this.performanceClient,this.correlationId)(e);if(!i)return t.region_source=b.FAILED_AUTO_DETECTION,null;let n=await iS(this.getRegionFromIMDS.bind(this),tY.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(i,e);n.status===_.httpSuccess&&(r=n.body,t.region_source=b.IMDS)}}catch(e){return t.region_source=b.FAILED_AUTO_DETECTION,null}}return r||(t.region_source=b.FAILED_AUTO_DETECTION),r||null}async getRegionFromIMDS(e,t){return this.performanceClient?.addQueueMeasurement(tY.RegionDiscoveryGetRegionFromIMDS,this.correlationId),this.networkInterface.sendGetRequestAsync(`${s.IMDS_ENDPOINT}?api-version=${e}&format=text`,t,s.IMDS_TIMEOUT)}async getCurrentVersion(e){this.performanceClient?.addQueueMeasurement(tY.RegionDiscoveryGetCurrentVersion,this.correlationId);try{let t=await this.networkInterface.sendGetRequestAsync(`${s.IMDS_ENDPOINT}?format=json`,e);if(t.status===_.httpBadRequest&&t.body&&t.body["newest-versions"]&&t.body["newest-versions"].length>0)return t.body["newest-versions"][0];return null}catch(e){return null}}}ik.IMDS_OPTIONS={headers:{Metadata:"true"}};/*! @azure/msal-common v14.14.1 2024-08-13 */class i_{constructor(e,t,r,i,n,o,a,s){this.canonicalAuthority=e,this._canonicalAuthority.validateAsUri(),this.networkInterface=t,this.cacheManager=r,this.authorityOptions=i,this.regionDiscoveryMetadata={region_used:void 0,region_source:void 0,region_outcome:void 0},this.logger=n,this.performanceClient=a,this.correlationId=o,this.managedIdentity=s||!1,this.regionDiscovery=new ik(t,this.logger,this.performanceClient,this.correlationId)}getAuthorityType(e){if(e.HostNameAndPort.endsWith(s.CIAM_AUTH_URL))return tI.Ciam;let t=e.PathSegments;if(t.length)switch(t[0].toLowerCase()){case s.ADFS:return tI.Adfs;case s.DSTS:return tI.Dsts}return tI.Default}get authorityType(){return this.getAuthorityType(this.canonicalAuthorityUrlComponents)}get protocolMode(){return this.authorityOptions.protocolMode}get options(){return this.authorityOptions}get canonicalAuthority(){return this._canonicalAuthority.urlString}set canonicalAuthority(e){this._canonicalAuthority=new tR(e),this._canonicalAuthority.validateAsUri(),this._canonicalAuthorityUrlComponents=null}get canonicalAuthorityUrlComponents(){return this._canonicalAuthorityUrlComponents||(this._canonicalAuthorityUrlComponents=this._canonicalAuthority.getUrlComponents()),this._canonicalAuthorityUrlComponents}get hostnameAndPort(){return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase()}get tenant(){return this.canonicalAuthorityUrlComponents.PathSegments[0]}get authorizationEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.authorization_endpoint);throw eM(z)}get tokenEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint);throw eM(z)}get deviceCodeEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint.replace("/token","/devicecode"));throw eM(z)}get endSessionEndpoint(){if(this.discoveryComplete()){if(!this.metadata.end_session_endpoint)throw eM(eE);return this.replacePath(this.metadata.end_session_endpoint)}throw eM(z)}get selfSignedJwtAudience(){if(this.discoveryComplete())return this.replacePath(this.metadata.issuer);throw eM(z)}get jwksUri(){if(this.discoveryComplete())return this.replacePath(this.metadata.jwks_uri);throw eM(z)}canReplaceTenant(e){return 1===e.PathSegments.length&&!i_.reservedTenantDomains.has(e.PathSegments[0])&&this.getAuthorityType(e)===tI.Default&&this.protocolMode===q.AAD}replaceTenant(e){return e.replace(/{tenant}|{tenantid}/g,this.tenant)}replacePath(e){let t=e,r=new tR(this.metadata.canonical_authority).getUrlComponents(),i=r.PathSegments;return this.canonicalAuthorityUrlComponents.PathSegments.forEach((e,n)=>{let o=i[n];if(0===n&&this.canReplaceTenant(r)){let e=new tR(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];o!==e&&(this.logger.verbose(`Replacing tenant domain name ${o} with id ${e}`),o=e)}e!==o&&(t=t.replace(`/${o}/`,`/${e}/`))}),this.replaceTenant(t)}get defaultOpenIdConfigurationEndpoint(){let e=this.hostnameAndPort;return this.canonicalAuthority.endsWith("v2.0/")||this.authorityType===tI.Adfs||this.protocolMode!==q.AAD&&!this.isAliasOfKnownMicrosoftAuthority(e)?`${this.canonicalAuthority}.well-known/openid-configuration`:`${this.canonicalAuthority}v2.0/.well-known/openid-configuration`}discoveryComplete(){return!!this.metadata}async resolveEndpointsAsync(){this.performanceClient?.addQueueMeasurement(tY.AuthorityResolveEndpointsAsync,this.correlationId);let e=this.getCurrentMetadataEntity(),t=await iS(this.updateCloudDiscoveryMetadata.bind(this),tY.AuthorityUpdateCloudDiscoveryMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.canonicalAuthority=this.canonicalAuthority.replace(this.hostnameAndPort,e.preferred_network);let r=await iS(this.updateEndpointMetadata.bind(this),tY.AuthorityUpdateEndpointMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.updateCachedMetadata(e,t,{source:r}),this.performanceClient?.addFields({cloudDiscoverySource:t,authorityEndpointSource:r},this.correlationId)}getCurrentMetadataEntity(){let e=this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);return e||(e={aliases:[],preferred_cache:this.hostnameAndPort,preferred_network:this.hostnameAndPort,canonical_authority:this.canonicalAuthority,authorization_endpoint:"",token_endpoint:"",end_session_endpoint:"",issuer:"",aliasesFromNetwork:!1,endpointsFromNetwork:!1,expiresAt:eK()+86400,jwks_uri:""}),e}updateCachedMetadata(e,t,r){t!==w.CACHE&&r?.source!==w.CACHE&&(e.expiresAt=eK()+86400,e.canonical_authority=this.canonicalAuthority);let i=this.cacheManager.generateAuthorityMetadataCacheKey(e.preferred_cache);this.cacheManager.setAuthorityMetadata(i,e),this.metadata=e}async updateEndpointMetadata(e){this.performanceClient?.addQueueMeasurement(tY.AuthorityUpdateEndpointMetadata,this.correlationId);let t=this.updateEndpointMetadataFromLocalSources(e);if(t)return t.source===w.HARDCODED_VALUES&&this.authorityOptions.azureRegionConfiguration?.azureRegion&&t.metadata&&(eW(e,await iS(this.updateMetadataWithRegionalInformation.bind(this),tY.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(t.metadata),!1),e.canonical_authority=this.canonicalAuthority),t.source;let r=await iS(this.getEndpointMetadataFromNetwork.bind(this),tY.AuthorityGetEndpointMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(r)return this.authorityOptions.azureRegionConfiguration?.azureRegion&&(r=await iS(this.updateMetadataWithRegionalInformation.bind(this),tY.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(r)),eW(e,r,!0),w.NETWORK;throw eM(Y,this.defaultOpenIdConfigurationEndpoint)}updateEndpointMetadataFromLocalSources(e){this.logger.verbose("Attempting to get endpoint metadata from authority configuration");let t=this.getEndpointMetadataFromConfig();if(t)return this.logger.verbose("Found endpoint metadata in authority configuration"),eW(e,t,!1),{source:w.CONFIG};if(this.logger.verbose("Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values."),this.authorityOptions.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.");else{let t=this.getEndpointMetadataFromHardcodedValues();if(t)return eW(e,t,!1),{source:w.HARDCODED_VALUES,metadata:t};this.logger.verbose("Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.")}let r=eJ(e);return this.isAuthoritySameType(e)&&e.endpointsFromNetwork&&!r?(this.logger.verbose("Found endpoint metadata in the cache."),{source:w.CACHE}):(r&&this.logger.verbose("The metadata entity is expired."),null)}isAuthoritySameType(e){return new tR(e.canonical_authority).getUrlComponents().PathSegments.length===this.canonicalAuthorityUrlComponents.PathSegments.length}getEndpointMetadataFromConfig(){if(this.authorityOptions.authorityMetadata)try{return JSON.parse(this.authorityOptions.authorityMetadata)}catch(e){throw tu(tt)}return null}async getEndpointMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(tY.AuthorityGetEndpointMetadataFromNetwork,this.correlationId);let e=this.defaultOpenIdConfigurationEndpoint;this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${e}`);try{var t;let r=await this.networkInterface.sendGetRequestAsync(e,{});if((t=r.body).hasOwnProperty("authorization_endpoint")&&t.hasOwnProperty("token_endpoint")&&t.hasOwnProperty("issuer")&&t.hasOwnProperty("jwks_uri"))return r.body;return this.logger.verbose("Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration"),null}catch(e){return this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${e}`),null}}getEndpointMetadataFromHardcodedValues(){return this.hostnameAndPort in tS?tS[this.hostnameAndPort]:null}async updateMetadataWithRegionalInformation(e){this.performanceClient?.addQueueMeasurement(tY.AuthorityUpdateMetadataWithRegionalInformation,this.correlationId);let t=this.authorityOptions.azureRegionConfiguration?.azureRegion;if(t){if(t!==s.AZURE_REGION_AUTO_DISCOVER_FLAG)return this.regionDiscoveryMetadata.region_outcome=O.CONFIGURED_NO_AUTO_DETECTION,this.regionDiscoveryMetadata.region_used=t,i_.replaceWithRegionalInformation(e,t);let r=await iS(this.regionDiscovery.detectRegion.bind(this.regionDiscovery),tY.RegionDiscoveryDetectRegion,this.logger,this.performanceClient,this.correlationId)(this.authorityOptions.azureRegionConfiguration?.environmentRegion,this.regionDiscoveryMetadata);if(r)return this.regionDiscoveryMetadata.region_outcome=O.AUTO_DETECTION_REQUESTED_SUCCESSFUL,this.regionDiscoveryMetadata.region_used=r,i_.replaceWithRegionalInformation(e,r);this.regionDiscoveryMetadata.region_outcome=O.AUTO_DETECTION_REQUESTED_FAILED}return e}async updateCloudDiscoveryMetadata(e){this.performanceClient?.addQueueMeasurement(tY.AuthorityUpdateCloudDiscoveryMetadata,this.correlationId);let t=this.updateCloudDiscoveryMetadataFromLocalSources(e);if(t)return t;let r=await iS(this.getCloudDiscoveryMetadataFromNetwork.bind(this),tY.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(r)return ej(e,r,!0),w.NETWORK;throw tu(tr)}updateCloudDiscoveryMetadataFromLocalSources(e){this.logger.verbose("Attempting to get cloud discovery metadata  from authority configuration"),this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities||s.NOT_APPLICABLE}`),this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata||s.NOT_APPLICABLE}`),this.logger.verbosePii(`Canonical Authority: ${e.canonical_authority||s.NOT_APPLICABLE}`);let t=this.getCloudDiscoveryMetadataFromConfig();if(t)return this.logger.verbose("Found cloud discovery metadata in authority configuration"),ej(e,t,!1),w.CONFIG;if(this.logger.verbose("Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values."),this.options.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.");else{var r;let t=(r=this.hostnameAndPort,tO(tk.metadata,r));if(t)return this.logger.verbose("Found cloud discovery metadata from hardcoded values."),ej(e,t,!1),w.HARDCODED_VALUES;this.logger.verbose("Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.")}let i=eJ(e);return this.isAuthoritySameType(e)&&e.aliasesFromNetwork&&!i?(this.logger.verbose("Found cloud discovery metadata in the cache."),w.CACHE):(i&&this.logger.verbose("The metadata entity is expired."),null)}getCloudDiscoveryMetadataFromConfig(){if(this.authorityType===tI.Ciam)return this.logger.verbose("CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host."),i_.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);if(this.authorityOptions.cloudDiscoveryMetadata){this.logger.verbose("The cloud discovery metadata has been provided as a network response, in the config.");try{this.logger.verbose("Attempting to parse the cloud discovery metadata.");let e=JSON.parse(this.authorityOptions.cloudDiscoveryMetadata),t=tO(e.metadata,this.hostnameAndPort);if(this.logger.verbose("Parsed the cloud discovery metadata."),t)return this.logger.verbose("There is returnable metadata attached to the parsed cloud discovery metadata."),t;this.logger.verbose("There is no metadata attached to the parsed cloud discovery metadata.")}catch(e){throw this.logger.verbose("Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error."),tu(te)}}return this.isInKnownAuthorities()?(this.logger.verbose("The host is included in knownAuthorities. Creating new cloud discovery metadata from the host."),i_.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)):null}async getCloudDiscoveryMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(tY.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.correlationId);let e=`${s.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`,t=null;try{var r,i;let n,o;let a=await this.networkInterface.sendGetRequestAsync(e,{});if((r=a.body).hasOwnProperty("tenant_discovery_endpoint")&&r.hasOwnProperty("metadata"))o=(n=a.body).metadata,this.logger.verbosePii(`tenant_discovery_endpoint is: ${n.tenant_discovery_endpoint}`);else{if(!((i=a.body).hasOwnProperty("error")&&i.hasOwnProperty("error_description")))return this.logger.error("AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse"),null;if(this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${a.status}`),(n=a.body).error===s.INVALID_INSTANCE)return this.logger.error("The CloudInstanceDiscoveryErrorResponse error is invalid_instance."),null;this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${n.error}`),this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${n.error_description}`),this.logger.warning("Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []"),o=[]}this.logger.verbose("Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request."),t=tO(o,this.hostnameAndPort)}catch(e){return e instanceof K?this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.
Error: ${e.errorCode}
Error Description: ${e.errorMessage}`):this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.
Error: ${e.name}
Error Description: ${e.message}`),null}return t||(this.logger.warning("The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request."),this.logger.verbose("Creating custom Authority for custom domain scenario."),t=i_.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)),t}isInKnownAuthorities(){return this.authorityOptions.knownAuthorities.filter(e=>e&&tR.getDomainFromUrl(e).toLowerCase()===this.hostnameAndPort).length>0}static generateAuthority(e,t){let r;if(t&&t.azureCloudInstance!==U.None){let e=t.tenant?t.tenant:s.DEFAULT_COMMON_TENANT;r=`${t.azureCloudInstance}/${e}/`}return r||e}static createCloudDiscoveryMetadataFromHost(e){return{preferred_network:e,preferred_cache:e,aliases:[e]}}getPreferredCache(){if(this.managedIdentity)return s.DEFAULT_AUTHORITY_HOST;if(this.discoveryComplete())return this.metadata.preferred_cache;throw eM(z)}isAlias(e){return this.metadata.aliases.indexOf(e)>-1}isAliasOfKnownMicrosoftAuthority(e){return t_.has(e)}static isPublicCloudAuthority(e){return s.KNOWN_PUBLIC_CLOUDS.indexOf(e)>=0}static buildRegionalAuthorityString(e,t,r){let i=new tR(e);i.validateAsUri();let n=i.getUrlComponents(),o=`${t}.${n.HostNameAndPort}`;this.isPublicCloudAuthority(n.HostNameAndPort)&&(o=`${t}.${s.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`);let a=tR.constructAuthorityUriFromObject({...i.getUrlComponents(),HostNameAndPort:o}).urlString;return r?`${a}?${r}`:a}static replaceWithRegionalInformation(e,t){let r={...e};return r.authorization_endpoint=i_.buildRegionalAuthorityString(r.authorization_endpoint,t),r.token_endpoint=i_.buildRegionalAuthorityString(r.token_endpoint,t),r.end_session_endpoint&&(r.end_session_endpoint=i_.buildRegionalAuthorityString(r.end_session_endpoint,t)),r}static transformCIAMAuthority(e){let t=e,r=new tR(e).getUrlComponents();if(0===r.PathSegments.length&&r.HostNameAndPort.endsWith(s.CIAM_AUTH_URL)){let e=r.HostNameAndPort.split(".")[0];t=`${t}${e}${s.AAD_TENANT_DOMAIN_SUFFIX}`}return t}}function ib(e){return e.endsWith(s.FORWARD_SLASH)?e:`${e}${s.FORWARD_SLASH}`}i_.reservedTenantDomains=new Set(["{tenant}","{tenantid}",g.COMMON,g.CONSUMERS,g.ORGANIZATIONS]);/*! @azure/msal-common v14.14.1 2024-08-13 */let iO="no_tokens_found",iP="native_account_unavailable",iN="refresh_token_expired",iM="bad_token",iq=["interaction_required","consent_required","login_required",iM],iU=["message_only","additional_action","basic_action","user_password_expired","consent_required","bad_token"],iH={[iO]:"No refresh token found in the cache. Please sign-in.",[iP]:"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.",[iN]:"Refresh token has expired.",[iM]:"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve."};iH[iO],iH[iP],iH[iM];class iL extends K{constructor(e,t,r,i,n,o,a,c){super(e,t,r),Object.setPrototypeOf(this,iL.prototype),this.timestamp=i||s.EMPTY_STRING,this.traceId=n||s.EMPTY_STRING,this.correlationId=o||s.EMPTY_STRING,this.claims=a||s.EMPTY_STRING,this.name="InteractionRequiredAuthError",this.errorNo=c}}function iD(e,t,r){let i=!!e&&iq.indexOf(e)>-1,n=!!r&&iU.indexOf(r)>-1,o=!!t&&iq.some(e=>t.indexOf(e)>-1);return i||o||n}function iK(e){return new iL(e,iH[e])}/*! @azure/msal-common v14.14.1 2024-08-13 */class iF{static setRequestState(e,t,r){let i=iF.generateLibraryState(e,r);return t?`${i}${s.RESOURCE_DELIM}${t}`:i}static generateLibraryState(e,t){if(!e)throw eM(em);let r={id:e.createNewGuid()};t&&(r.meta=t);let i=JSON.stringify(r);return e.base64Encode(i)}static parseRequestState(e,t){if(!e)throw eM(em);if(!t)throw eM(W);try{let r=t.split(s.RESOURCE_DELIM),i=r[0],n=r.length>1?r.slice(1).join(s.RESOURCE_DELIM):s.EMPTY_STRING,o=e.base64Decode(i),a=JSON.parse(o);return{userRequestState:n||s.EMPTY_STRING,libraryState:a}}catch(e){throw eM(W)}}}/*! @azure/msal-common v14.14.1 2024-08-13 */let ix={HOME_ACCOUNT_ID:"home_account_id",UPN:"UPN"},iB="storage_not_supported",iG="stubbed_public_client_application_called",i$="in_mem_redirect_unavailable",iz={[iB]:"Given storage configuration option was not supported.",[iG]:"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors",[i$]:"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true."};iz[iB],iz[iG],iz[i$];class iQ extends K{constructor(e,t){super(e,t),this.name="BrowserConfigurationAuthError",Object.setPrototypeOf(this,iQ.prototype)}}function iY(e){return new iQ(e,iz[e])}/*! @azure/msal-browser v3.21.0 2024-08-13 */class iV{constructor(e){this.validateWindowStorage(e),this.windowStorage=window[e]}validateWindowStorage(e){if(e!==tZ.LocalStorage&&e!==tZ.SessionStorage||!window[e])throw iY(iB)}getItem(e){return this.windowStorage.getItem(e)}setItem(e,t){this.windowStorage.setItem(e,t)}removeItem(e){this.windowStorage.removeItem(e)}getKeys(){return Object.keys(this.windowStorage)}containsKey(e){return this.windowStorage.hasOwnProperty(e)}}/*! @azure/msal-browser v3.21.0 2024-08-13 */function iW(e,t){if(!t)return null;try{return iF.parseRequestState(e,t).libraryState.meta}catch(e){throw eM(W)}}/*! @azure/msal-browser v3.21.0 2024-08-13 */class ij extends tU{constructor(e,t,r,i,n,o){super(e,r,i,n),this.COOKIE_LIFE_MULTIPLIER=864e5,this.cacheConfig=t,this.logger=i,this.internalStorage=new iA,this.browserStorage=this.setupBrowserStorage(this.cacheConfig.cacheLocation),this.temporaryCacheStorage=this.setupTemporaryCacheStorage(this.cacheConfig.temporaryCacheLocation,this.cacheConfig.cacheLocation),t.cacheMigrationEnabled&&(this.migrateCacheEntries(),this.createKeyMaps()),this.performanceClient=o}setupBrowserStorage(e){switch(e){case tZ.LocalStorage:case tZ.SessionStorage:try{return new iV(e)}catch(e){this.logger.verbose(e)}}return this.cacheConfig.cacheLocation=tZ.MemoryStorage,new iA}setupTemporaryCacheStorage(e,t){switch(t){case tZ.LocalStorage:case tZ.SessionStorage:try{return new iV(e||tZ.SessionStorage)}catch(e){return this.logger.verbose(e),this.internalStorage}case tZ.MemoryStorage:default:return this.internalStorage}}migrateCacheEntries(){let e=`${s.CACHE_PREFIX}.${u.ID_TOKEN}`,t=`${s.CACHE_PREFIX}.${u.CLIENT_INFO}`,r=`${s.CACHE_PREFIX}.${u.ERROR}`,i=`${s.CACHE_PREFIX}.${u.ERROR_DESC}`,n=this.browserStorage.getItem(e),o=[n,this.browserStorage.getItem(t),this.browserStorage.getItem(r),this.browserStorage.getItem(i)];[u.ID_TOKEN,u.CLIENT_INFO,u.ERROR,u.ERROR_DESC].forEach((e,t)=>{let r=o[t];r&&this.setTemporaryCache(e,r,!0)})}createKeyMaps(){this.logger.trace("BrowserCacheManager - createKeyMaps called.");let e=this.getItem(t2.ACCOUNT_KEYS),t=this.getItem(`${t2.TOKEN_KEYS}.${this.clientId}`);if(e&&t){this.logger.verbose("BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration.");return}this.browserStorage.getKeys().forEach(e=>{if(this.isCredentialKey(e)){let t=this.getItem(e);if(t){let r=this.validateAndParseJson(t);if(r&&r.hasOwnProperty("credentialType"))switch(r.credentialType){case I.ID_TOKEN:if(eY(r)){this.logger.trace("BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - idToken with key: ${e} found, saving key to token key map`);let t=this.updateCredentialCacheKey(e,r);this.addTokenKey(t,I.ID_TOKEN);return}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${e}`);break;case I.ACCESS_TOKEN:case I.ACCESS_TOKEN_WITH_AUTH_SCHEME:if(eQ(r)){this.logger.trace("BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - accessToken with key: ${e} found, saving key to token key map`);let t=this.updateCredentialCacheKey(e,r);this.addTokenKey(t,I.ACCESS_TOKEN);return}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${e}`);break;case I.REFRESH_TOKEN:if(eV(r)){this.logger.trace("BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - refreshToken with key: ${e} found, saving key to token key map`);let t=this.updateCredentialCacheKey(e,r);this.addTokenKey(t,I.REFRESH_TOKEN);return}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${e}`)}}}if(this.isAccountKey(e)){let t=this.getItem(e);if(t){let r=this.validateAndParseJson(t);r&&tv.isAccountEntity(r)&&(this.logger.trace("BrowserCacheManager:createKeyMaps - account found, saving key to account key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - account with key: ${e} found, saving key to account key map`),this.addAccountKeyToMap(e))}}})}validateAndParseJson(e){try{let t=JSON.parse(e);return t&&"object"==typeof t?t:null}catch(e){return null}}getItem(e){return this.browserStorage.getItem(e)}setItem(e,t){this.browserStorage.setItem(e,t)}getAccount(e,t){this.logger.trace("BrowserCacheManager.getAccount called");let r=this.getCachedAccountEntity(e);return this.updateOutdatedCachedAccount(e,r,t)}getCachedAccountEntity(e){let t=this.getItem(e);if(!t)return this.removeAccountKeyFromMap(e),null;let r=this.validateAndParseJson(t);return r&&tv.isAccountEntity(r)?tU.toObject(new tv,r):(this.removeAccountKeyFromMap(e),null)}setAccount(e){this.logger.trace("BrowserCacheManager.setAccount called");let t=e.generateAccountKey();this.setItem(t,JSON.stringify(e)),this.addAccountKeyToMap(t)}getAccountKeys(){this.logger.trace("BrowserCacheManager.getAccountKeys called");let e=this.getItem(t2.ACCOUNT_KEYS);return e?JSON.parse(e):(this.logger.verbose("BrowserCacheManager.getAccountKeys - No account keys found"),[])}addAccountKeyToMap(e){this.logger.trace("BrowserCacheManager.addAccountKeyToMap called"),this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${e}`);let t=this.getAccountKeys();-1===t.indexOf(e)?(t.push(e),this.setItem(t2.ACCOUNT_KEYS,JSON.stringify(t)),this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key added")):this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key already exists in map")}removeAccountKeyFromMap(e){this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap called"),this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${e}`);let t=this.getAccountKeys(),r=t.indexOf(e);r>-1?(t.splice(r,1),this.setItem(t2.ACCOUNT_KEYS,JSON.stringify(t)),this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap account key removed")):this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap key not found in existing map")}async removeAccount(e){super.removeAccount(e),this.removeAccountKeyFromMap(e)}removeOutdatedAccount(e){this.removeItem(e),this.removeAccountKeyFromMap(e)}removeIdToken(e){super.removeIdToken(e),this.removeTokenKey(e,I.ID_TOKEN)}async removeAccessToken(e){super.removeAccessToken(e),this.removeTokenKey(e,I.ACCESS_TOKEN)}removeRefreshToken(e){super.removeRefreshToken(e),this.removeTokenKey(e,I.REFRESH_TOKEN)}getTokenKeys(){this.logger.trace("BrowserCacheManager.getTokenKeys called");let e=this.getItem(`${t2.TOKEN_KEYS}.${this.clientId}`);if(e){let t=this.validateAndParseJson(e);if(t&&t.hasOwnProperty("idToken")&&t.hasOwnProperty("accessToken")&&t.hasOwnProperty("refreshToken"))return t;this.logger.error("BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.")}else this.logger.verbose("BrowserCacheManager.getTokenKeys - No token keys found");return{idToken:[],accessToken:[],refreshToken:[]}}addTokenKey(e,t){this.logger.trace("BrowserCacheManager addTokenKey called");let r=this.getTokenKeys();switch(t){case I.ID_TOKEN:-1===r.idToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - idToken added to map"),r.idToken.push(e));break;case I.ACCESS_TOKEN:-1===r.accessToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - accessToken added to map"),r.accessToken.push(e));break;case I.REFRESH_TOKEN:-1===r.refreshToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - refreshToken added to map"),r.refreshToken.push(e));break;default:throw this.logger.error(`BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${t}`),eM(eC)}this.setItem(`${t2.TOKEN_KEYS}.${this.clientId}`,JSON.stringify(r))}removeTokenKey(e,t){this.logger.trace("BrowserCacheManager removeTokenKey called");let r=this.getTokenKeys();switch(t){case I.ID_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${e} from map`);let i=r.idToken.indexOf(e);i>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - idToken removed from map"),r.idToken.splice(i,1)):this.logger.info("BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.");break;case I.ACCESS_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${e} from map`);let n=r.accessToken.indexOf(e);n>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - accessToken removed from map"),r.accessToken.splice(n,1)):this.logger.info("BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.");break;case I.REFRESH_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${e} from map`);let o=r.refreshToken.indexOf(e);o>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken removed from map"),r.refreshToken.splice(o,1)):this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.");break;default:throw this.logger.error(`BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${t}`),eM(eC)}this.setItem(`${t2.TOKEN_KEYS}.${this.clientId}`,JSON.stringify(r))}getIdTokenCredential(e){let t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,I.ID_TOKEN),null;let r=this.validateAndParseJson(t);return r&&eY(r)?(this.logger.trace("BrowserCacheManager.getIdTokenCredential: cache hit"),r):(this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,I.ID_TOKEN),null)}setIdTokenCredential(e){this.logger.trace("BrowserCacheManager.setIdTokenCredential called");let t=ex(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,I.ID_TOKEN)}getAccessTokenCredential(e){let t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,I.ACCESS_TOKEN),null;let r=this.validateAndParseJson(t);return r&&eQ(r)?(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: cache hit"),r):(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,I.ACCESS_TOKEN),null)}setAccessTokenCredential(e){this.logger.trace("BrowserCacheManager.setAccessTokenCredential called");let t=ex(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,I.ACCESS_TOKEN)}getRefreshTokenCredential(e){let t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,I.REFRESH_TOKEN),null;let r=this.validateAndParseJson(t);return r&&eV(r)?(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: cache hit"),r):(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,I.REFRESH_TOKEN),null)}setRefreshTokenCredential(e){this.logger.trace("BrowserCacheManager.setRefreshTokenCredential called");let t=ex(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,I.REFRESH_TOKEN)}getAppMetadata(e){let t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null;let r=this.validateAndParseJson(t);return r&&r&&0===e.indexOf(A)&&r.hasOwnProperty("clientId")&&r.hasOwnProperty("environment")?(this.logger.trace("BrowserCacheManager.getAppMetadata: cache hit"),r):(this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null)}setAppMetadata(e){this.logger.trace("BrowserCacheManager.setAppMetadata called");let t=function({environment:e,clientId:t}){return[A,e,t].join(T.CACHE_KEY_SEPARATOR).toLowerCase()}(e);this.setItem(t,JSON.stringify(e))}getServerTelemetry(e){let t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null;let r=this.validateAndParseJson(t);return r&&function(e,t){let r=0===e.indexOf(E.CACHE_KEY),i=!0;return t&&(i=t.hasOwnProperty("failedRequests")&&t.hasOwnProperty("errors")&&t.hasOwnProperty("cacheHits")),r&&i}(e,r)?(this.logger.trace("BrowserCacheManager.getServerTelemetry: cache hit"),r):(this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null)}setServerTelemetry(e,t){this.logger.trace("BrowserCacheManager.setServerTelemetry called"),this.setItem(e,JSON.stringify(t))}getAuthorityMetadata(e){let t=this.internalStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAuthorityMetadata: called, no cache hit"),null;let r=this.validateAndParseJson(t);return r&&r&&0===e.indexOf(v)&&r.hasOwnProperty("aliases")&&r.hasOwnProperty("preferred_cache")&&r.hasOwnProperty("preferred_network")&&r.hasOwnProperty("canonical_authority")&&r.hasOwnProperty("authorization_endpoint")&&r.hasOwnProperty("token_endpoint")&&r.hasOwnProperty("issuer")&&r.hasOwnProperty("aliasesFromNetwork")&&r.hasOwnProperty("endpointsFromNetwork")&&r.hasOwnProperty("expiresAt")&&r.hasOwnProperty("jwks_uri")?(this.logger.trace("BrowserCacheManager.getAuthorityMetadata: cache hit"),r):null}getAuthorityMetadataKeys(){return this.internalStorage.getKeys().filter(e=>this.isAuthorityMetadata(e))}setWrapperMetadata(e,t){this.internalStorage.setItem(t4,e),this.internalStorage.setItem(t6,t)}getWrapperMetadata(){return[this.internalStorage.getItem(t4)||s.EMPTY_STRING,this.internalStorage.getItem(t6)||s.EMPTY_STRING]}setAuthorityMetadata(e,t){this.logger.trace("BrowserCacheManager.setAuthorityMetadata called"),this.internalStorage.setItem(e,JSON.stringify(t))}getActiveAccount(){let e=this.generateCacheKey(u.ACTIVE_ACCOUNT_FILTERS),t=this.getItem(e);if(!t){this.logger.trace("BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema");let e=this.generateCacheKey(u.ACTIVE_ACCOUNT),t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null;let r=this.getAccountInfoFilteredBy({localAccountId:t});return r?(this.logger.trace("BrowserCacheManager.getActiveAccount: Legacy active account cache schema found"),this.logger.trace("BrowserCacheManager.getActiveAccount: Adding active account filters cache schema"),this.setActiveAccount(r),r):null}let r=this.validateAndParseJson(t);return r?(this.logger.trace("BrowserCacheManager.getActiveAccount: Active account filters schema found"),this.getAccountInfoFilteredBy({homeAccountId:r.homeAccountId,localAccountId:r.localAccountId,tenantId:r.tenantId})):(this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null)}setActiveAccount(e){let t=this.generateCacheKey(u.ACTIVE_ACCOUNT_FILTERS),r=this.generateCacheKey(u.ACTIVE_ACCOUNT);if(e){this.logger.verbose("setActiveAccount: Active account set");let i={homeAccountId:e.homeAccountId,localAccountId:e.localAccountId,tenantId:e.tenantId};this.browserStorage.setItem(t,JSON.stringify(i)),this.browserStorage.setItem(r,e.localAccountId)}else this.logger.verbose("setActiveAccount: No account passed, active account not set"),this.browserStorage.removeItem(t),this.browserStorage.removeItem(r)}getThrottlingCache(e){let t,r;let i=this.getItem(e);if(!i)return this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null;let n=this.validateAndParseJson(i);return n&&(t=!1,e&&(t=0===e.indexOf(S.THROTTLING_PREFIX)),r=!0,n&&(r=n.hasOwnProperty("throttleTime")),t&&r)?(this.logger.trace("BrowserCacheManager.getThrottlingCache: cache hit"),n):(this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null)}setThrottlingCache(e,t){this.logger.trace("BrowserCacheManager.setThrottlingCache called"),this.setItem(e,JSON.stringify(t))}getTemporaryCache(e,t){let r=t?this.generateCacheKey(e):e;if(this.cacheConfig.storeAuthStateInCookie){let e=this.getItemCookie(r);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies"),e}let i=this.temporaryCacheStorage.getItem(r);if(!i){if(this.cacheConfig.cacheLocation===tZ.LocalStorage){let e=this.browserStorage.getItem(r);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage"),e}return this.logger.trace("BrowserCacheManager.getTemporaryCache: No cache item found in local storage"),null}return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item returned"),i}setTemporaryCache(e,t,r){let i=r?this.generateCacheKey(e):e;this.temporaryCacheStorage.setItem(i,t),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie"),this.setItemCookie(i,t))}removeItem(e){this.browserStorage.removeItem(e)}removeTemporaryItem(e){this.temporaryCacheStorage.removeItem(e),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie"),this.clearItemCookie(e))}getKeys(){return this.browserStorage.getKeys()}async clear(){await this.removeAllAccounts(),this.removeAppMetadata(),this.temporaryCacheStorage.getKeys().forEach(e=>{(-1!==e.indexOf(s.CACHE_PREFIX)||-1!==e.indexOf(this.clientId))&&this.removeTemporaryItem(e)}),this.browserStorage.getKeys().forEach(e=>{(-1!==e.indexOf(s.CACHE_PREFIX)||-1!==e.indexOf(this.clientId))&&this.browserStorage.removeItem(e)}),this.internalStorage.clear()}async clearTokensAndKeysWithClaims(e,t){e.addQueueMeasurement(tY.ClearTokensAndKeysWithClaims,t);let r=this.getTokenKeys(),i=[];r.accessToken.forEach(e=>{let t=this.getAccessTokenCredential(e);t?.requestedClaimsHash&&e.includes(t.requestedClaimsHash.toLowerCase())&&i.push(this.removeAccessToken(e))}),await Promise.all(i),i.length>0&&this.logger.warning(`${i.length} access tokens with claims in the cache keys have been removed from the cache.`)}setItemCookie(e,t,r){let i=`${encodeURIComponent(e)}=${encodeURIComponent(t)};path=/;SameSite=Lax;`;if(r){let e=this.getCookieExpirationTime(r);i+=`expires=${e};`}this.cacheConfig.secureCookies&&(i+="Secure;"),document.cookie=i}getItemCookie(e){let t=`${encodeURIComponent(e)}=`,r=document.cookie.split(";");for(let e=0;e<r.length;e++){let i=r[e];for(;" "===i.charAt(0);)i=i.substring(1);if(0===i.indexOf(t))return decodeURIComponent(i.substring(t.length,i.length))}return s.EMPTY_STRING}clearMsalCookies(){let e=`${s.CACHE_PREFIX}.${this.clientId}`;document.cookie.split(";").forEach(t=>{for(;" "===t.charAt(0);)t=t.substring(1);if(0===t.indexOf(e)){let e=t.split("=")[0];this.clearItemCookie(e)}})}clearItemCookie(e){this.setItemCookie(e,s.EMPTY_STRING,-1)}getCookieExpirationTime(e){return new Date(new Date().getTime()+e*this.COOKIE_LIFE_MULTIPLIER).toUTCString()}generateCacheKey(e){return this.validateAndParseJson(e)?JSON.stringify(e):tg.startsWith(e,s.CACHE_PREFIX)||tg.startsWith(e,u.ADAL_ID_TOKEN)?e:`${s.CACHE_PREFIX}.${this.clientId}.${e}`}generateAuthorityKey(e){let{libraryState:{id:t}}=iF.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${t1.AUTHORITY}.${t}`)}generateNonceKey(e){let{libraryState:{id:t}}=iF.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${t1.NONCE_IDTOKEN}.${t}`)}generateStateKey(e){let{libraryState:{id:t}}=iF.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${t1.REQUEST_STATE}.${t}`)}getCachedAuthority(e){let t=this.generateStateKey(e),r=this.getTemporaryCache(t);if(!r)return null;let i=this.generateAuthorityKey(r);return this.getTemporaryCache(i)}updateCacheEntries(e,t,r,i,n){this.logger.trace("BrowserCacheManager.updateCacheEntries called");let o=this.generateStateKey(e);this.setTemporaryCache(o,e,!1);let a=this.generateNonceKey(e);this.setTemporaryCache(a,t,!1);let s=this.generateAuthorityKey(e);if(this.setTemporaryCache(s,r,!1),n){let e={credential:n.homeAccountId,type:ix.HOME_ACCOUNT_ID};this.setTemporaryCache(t1.CCS_CREDENTIAL,JSON.stringify(e),!0)}else if(i){let e={credential:i,type:ix.UPN};this.setTemporaryCache(t1.CCS_CREDENTIAL,JSON.stringify(e),!0)}}resetRequestCache(e){this.logger.trace("BrowserCacheManager.resetRequestCache called"),e&&(this.temporaryCacheStorage.getKeys().forEach(t=>{-1!==t.indexOf(e)&&this.removeTemporaryItem(t)}),this.removeTemporaryItem(this.generateStateKey(e)),this.removeTemporaryItem(this.generateNonceKey(e)),this.removeTemporaryItem(this.generateAuthorityKey(e))),this.removeTemporaryItem(this.generateCacheKey(t1.REQUEST_PARAMS)),this.removeTemporaryItem(this.generateCacheKey(t1.ORIGIN_URI)),this.removeTemporaryItem(this.generateCacheKey(t1.URL_HASH)),this.removeTemporaryItem(this.generateCacheKey(t1.CORRELATION_ID)),this.removeTemporaryItem(this.generateCacheKey(t1.CCS_CREDENTIAL)),this.removeTemporaryItem(this.generateCacheKey(t1.NATIVE_REQUEST)),this.removeTemporaryItem(this.generateCacheKey(t1.REDIRECT_REQUEST)),this.setInteractionInProgress(!1)}cleanRequestByState(e){if(this.logger.trace("BrowserCacheManager.cleanRequestByState called"),e){let t=this.generateStateKey(e),r=this.temporaryCacheStorage.getItem(t);this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${r}`),this.resetRequestCache(r||s.EMPTY_STRING)}this.clearMsalCookies()}cleanRequestByInteractionType(e){this.logger.trace("BrowserCacheManager.cleanRequestByInteractionType called"),this.temporaryCacheStorage.getKeys().forEach(t=>{if(-1===t.indexOf(t1.REQUEST_STATE))return;let r=this.temporaryCacheStorage.getItem(t);if(!r)return;let i=iW(this.cryptoImpl,r);i&&i.interactionType===e&&(this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${r}`),this.resetRequestCache(r))}),this.clearMsalCookies(),this.setInteractionInProgress(!1)}generateRequestRetriedKey(){return`${s.CACHE_PREFIX}.${t1.REQUEST_RETRY}.${this.clientId}`}getRequestRetried(){let e=this.generateRequestRetriedKey(),t=this.getTemporaryCache(e);return t?parseInt(t):null}setRequestRetried(){this.logger.trace("BrowserCacheManager.setRequestRetried called");let e=this.generateRequestRetriedKey();this.setTemporaryCache(e,"1",!1)}removeRequestRetried(){let e=this.generateRequestRetriedKey();this.removeTemporaryItem(e)}cacheRedirectRequest(e){this.logger.trace("BrowserCacheManager.cacheRedirectRequest called");let{...t}=e;delete t.onRedirectNavigate;let r=JSON.stringify(t);this.setTemporaryCache(t1.REDIRECT_REQUEST,r,!0)}getCachedRedirectRequest(){this.logger.trace("BrowserCacheManager.getCachedRedirectRequest called");let e=this.getTemporaryCache(t1.REDIRECT_REQUEST,!0);if(e){let t;this.removeTemporaryItem(this.generateCacheKey(t1.REDIRECT_REQUEST));try{t=JSON.parse(e)}catch(t){this.logger.errorPii(`Attempted to parse: ${e}`),this.logger.error(`Parsing cached redirect request threw with error: ${t}`);return}if(t)return t}else this.logger.error("No cached redirect request found.")}cacheCodeRequest(e){this.logger.trace("BrowserCacheManager.cacheCodeRequest called");let t=it(JSON.stringify(e));this.setTemporaryCache(t1.REQUEST_PARAMS,t,!0)}getCachedRequest(e){let t;this.logger.trace("BrowserCacheManager.getCachedRequest called");let r=this.getTemporaryCache(t1.REQUEST_PARAMS,!0);if(!r)throw rX(rw);try{t=JSON.parse(ii(r))}catch(e){throw this.logger.errorPii(`Attempted to parse: ${r}`),this.logger.error(`Parsing cached token request threw with error: ${e}`),rX(rE)}if(this.removeTemporaryItem(this.generateCacheKey(t1.REQUEST_PARAMS)),!t.authority){let r=this.generateAuthorityKey(e),i=this.getTemporaryCache(r);if(!i)throw rX(rR);t.authority=i}return t}getCachedNativeRequest(){this.logger.trace("BrowserCacheManager.getCachedNativeRequest called");let e=this.getTemporaryCache(t1.NATIVE_REQUEST,!0);return e?this.validateAndParseJson(e)||(this.logger.error("BrowserCacheManager.getCachedNativeRequest: Unable to parse native request"),null):(this.logger.trace("BrowserCacheManager.getCachedNativeRequest: No cached native request found"),null)}isInteractionInProgress(e){let t=this.getInteractionInProgress();return e?t===this.clientId:!!t}getInteractionInProgress(){let e=`${s.CACHE_PREFIX}.${t1.INTERACTION_STATUS_KEY}`;return this.getTemporaryCache(e,!1)}setInteractionInProgress(e){let t=`${s.CACHE_PREFIX}.${t1.INTERACTION_STATUS_KEY}`;if(e){if(this.getInteractionInProgress())throw rX(rh);this.setTemporaryCache(t,this.clientId,!1)}else e||this.getInteractionInProgress()!==this.clientId||this.removeTemporaryItem(t)}getLegacyLoginHint(){let e=this.getTemporaryCache(u.ADAL_ID_TOKEN);e&&(this.browserStorage.removeItem(u.ADAL_ID_TOKEN),this.logger.verbose("Cached ADAL id token retrieved."));let t=this.getTemporaryCache(u.ID_TOKEN,!0);t&&(this.browserStorage.removeItem(this.generateCacheKey(u.ID_TOKEN)),this.logger.verbose("Cached MSAL.js v1 id token retrieved"));let r=t||e;if(r){let e=eL(r,ii);if(e.preferred_username)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint"),e.preferred_username;if(e.upn)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint"),e.upn;this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.")}return null}updateCredentialCacheKey(e,t){let r=ex(t);if(e!==r){let i=this.getItem(e);if(i)return this.browserStorage.removeItem(e),this.setItem(r,i),this.logger.verbose(`Updated an outdated ${t.credentialType} cache key`),r;this.logger.error(`Attempted to update an outdated ${t.credentialType} cache key but no item matching the outdated key was found in storage`)}return e}async hydrateCache(e,t){let r;let i=eB(e.account?.homeAccountId,e.account?.environment,e.idToken,this.clientId,e.tenantId);t.claims&&(r=await this.cryptoImpl.hashString(t.claims));let n=eG(e.account?.homeAccountId,e.account.environment,e.accessToken,this.clientId,e.tenantId,e.scopes.join(" "),e.expiresOn?e.expiresOn.getTime()/1e3:0,e.extExpiresOn?e.extExpiresOn.getTime()/1e3:0,ii,void 0,e.tokenType,void 0,t.sshKid,t.claims,r);return this.saveCacheRecord({idToken:i,accessToken:n})}async saveCacheRecord(e,t,r){try{await super.saveCacheRecord(e,t,r)}catch(e){if(e instanceof tq&&this.performanceClient&&r)try{let e=this.getTokenKeys();this.performanceClient.addFields({cacheRtCount:e.refreshToken.length,cacheIdCount:e.idToken.length,cacheAtCount:e.accessToken.length},r)}catch(e){}throw e}}}let iJ=(e,t)=>new ij(e,{cacheLocation:tZ.MemoryStorage,temporaryCacheLocation:tZ.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1},eq,t);function iX(){return window.parent!==window}function iZ(){return window.location.href.split("?")[0].split("#")[0]}function i0(e){if(!e)throw rX(r$)}function i1(e){!function(){if("undefined"==typeof window)throw rX(r_)}(),function(){if(tR.hashContainsKnownProperties(window.location.hash)&&iX())throw rX(rf)}(),function(){if("undefined"!=typeof window&&window.opener&&window.opener!==window&&"string"==typeof window.name&&0===window.name.indexOf(`${tj.POPUP_NAME_PREFIX}.`))throw rX(ry)}(),i0(e)}function i2(e,t){if(i1(e),!function(e){if(iX()&&!e)throw rX(rC)}(t.system.allowRedirectInIframe),t.cache.cacheLocation===tZ.MemoryStorage&&!t.cache.storeAuthStateInCookie)throw iY(i$)}function i4(e){let t=document.createElement("link");t.rel="preconnect",t.href=new URL(e).origin,t.crossOrigin="anonymous",document.head.appendChild(t),window.setTimeout(()=>{try{document.head.removeChild(t)}catch{}},1e4)}/*! @azure/msal-browser v3.21.0 2024-08-13 */let i6={INITIALIZE_START:"msal:initializeStart",INITIALIZE_END:"msal:initializeEnd",ACCOUNT_ADDED:"msal:accountAdded",ACCOUNT_REMOVED:"msal:accountRemoved",ACTIVE_ACCOUNT_CHANGED:"msal:activeAccountChanged",LOGIN_START:"msal:loginStart",LOGIN_SUCCESS:"msal:loginSuccess",LOGIN_FAILURE:"msal:loginFailure",ACQUIRE_TOKEN_START:"msal:acquireTokenStart",ACQUIRE_TOKEN_SUCCESS:"msal:acquireTokenSuccess",ACQUIRE_TOKEN_FAILURE:"msal:acquireTokenFailure",ACQUIRE_TOKEN_NETWORK_START:"msal:acquireTokenFromNetworkStart",SSO_SILENT_START:"msal:ssoSilentStart",SSO_SILENT_SUCCESS:"msal:ssoSilentSuccess",SSO_SILENT_FAILURE:"msal:ssoSilentFailure",ACQUIRE_TOKEN_BY_CODE_START:"msal:acquireTokenByCodeStart",ACQUIRE_TOKEN_BY_CODE_SUCCESS:"msal:acquireTokenByCodeSuccess",ACQUIRE_TOKEN_BY_CODE_FAILURE:"msal:acquireTokenByCodeFailure",HANDLE_REDIRECT_START:"msal:handleRedirectStart",HANDLE_REDIRECT_END:"msal:handleRedirectEnd",POPUP_OPENED:"msal:popupOpened",LOGOUT_START:"msal:logoutStart",LOGOUT_SUCCESS:"msal:logoutSuccess",LOGOUT_FAILURE:"msal:logoutFailure",LOGOUT_END:"msal:logoutEnd",RESTORE_FROM_BFCACHE:"msal:restoreFromBFCache"};/*! @azure/msal-browser v3.21.0 2024-08-13 */class i3{constructor(e,t){this.eventCallbacks=new Map,this.logger=e,this.browserCrypto=t,this.listeningToStorageEvents=!1,this.handleAccountCacheChange=this.handleAccountCacheChange.bind(this)}addEventCallback(e){if("undefined"!=typeof window){let t=ig();return this.eventCallbacks.set(t,e),this.logger.verbose(`Event callback registered with id: ${t}`),t}return null}removeEventCallback(e){this.eventCallbacks.delete(e),this.logger.verbose(`Event callback ${e} removed.`)}enableAccountStorageEvents(){"undefined"!=typeof window&&(this.listeningToStorageEvents?this.logger.verbose("Account storage listener already registered."):(this.logger.verbose("Adding account storage listener."),this.listeningToStorageEvents=!0,window.addEventListener("storage",this.handleAccountCacheChange)))}disableAccountStorageEvents(){"undefined"!=typeof window&&(this.listeningToStorageEvents?(this.logger.verbose("Removing account storage listener."),window.removeEventListener("storage",this.handleAccountCacheChange),this.listeningToStorageEvents=!1):this.logger.verbose("No account storage listener registered."))}emitEvent(e,t,r,i){if("undefined"!=typeof window){let n={eventType:e,interactionType:t||null,payload:r||null,error:i||null,timestamp:Date.now()};this.logger.info(`Emitting event: ${e}`),this.eventCallbacks.forEach((t,r)=>{this.logger.verbose(`Emitting event to callback ${r}: ${e}`),t.apply(null,[n])})}}handleAccountCacheChange(e){try{e.key?.includes(u.ACTIVE_ACCOUNT_FILTERS)&&this.emitEvent(i6.ACTIVE_ACCOUNT_CHANGED);let t=e.newValue||e.oldValue;if(!t)return;let r=JSON.parse(t);if("object"!=typeof r||!tv.isAccountEntity(r))return;let i=tU.toObject(new tv,r).getAccountInfo();!e.oldValue&&e.newValue?(this.logger.info("Account was added to cache in a different window"),this.emitEvent(i6.ACCOUNT_ADDED,void 0,i)):!e.newValue&&e.oldValue&&(this.logger.info("Account was removed from cache in a different window"),this.emitEvent(i6.ACCOUNT_REMOVED,void 0,i))}catch(e){return}}}/*! @azure/msal-common v14.14.1 2024-08-13 */class i5 extends K{constructor(e,t,r,i,n){super(e,t,r),this.name="ServerError",this.errorNo=i,this.status=n,Object.setPrototypeOf(this,i5.prototype)}}/*! @azure/msal-common v14.14.1 2024-08-13 */class i8{static generateThrottlingStorageKey(e){return`${S.THROTTLING_PREFIX}.${JSON.stringify(e)}`}static preProcess(e,t){let r=i8.generateThrottlingStorageKey(t),i=e.getThrottlingCache(r);if(i){if(i.throttleTime<Date.now()){e.removeItem(r);return}throw new i5(i.errorCodes?.join(" ")||s.EMPTY_STRING,i.errorMessage,i.subError)}}static postProcess(e,t,r){if(i8.checkResponseStatus(r)||i8.checkResponseForRetryAfter(r)){let i={throttleTime:i8.calculateThrottleTime(parseInt(r.headers[d.RETRY_AFTER])),error:r.body.error,errorCodes:r.body.error_codes,errorMessage:r.body.error_description,subError:r.body.suberror};e.setThrottlingCache(i8.generateThrottlingStorageKey(t),i)}}static checkResponseStatus(e){return 429===e.status||e.status>=500&&e.status<600}static checkResponseForRetryAfter(e){return!!e.headers&&e.headers.hasOwnProperty(d.RETRY_AFTER)&&(e.status<200||e.status>=300)}static calculateThrottleTime(e){let t=Date.now()/1e3;return Math.floor(1e3*Math.min(t+((e<=0?0:e)||S.DEFAULT_THROTTLE_TIME_SECONDS),t+S.DEFAULT_MAX_THROTTLE_TIME_SECONDS))}static removeThrottle(e,t,r,i){let n={clientId:t,authority:r.authority,scopes:r.scopes,homeAccountIdentifier:i,claims:r.claims,authenticationScheme:r.authenticationScheme,resourceRequestMethod:r.resourceRequestMethod,resourceRequestUri:r.resourceRequestUri,shrClaims:r.shrClaims,sshKid:r.sshKid},o=this.generateThrottlingStorageKey(n);e.removeItem(o)}}/*! @azure/msal-common v14.14.1 2024-08-13 */class i9{constructor(e,t){this.networkClient=e,this.cacheManager=t}async sendPostRequest(e,t,r){let i;i8.preProcess(this.cacheManager,e);try{i=await this.networkClient.sendPostRequestAsync(t,r)}catch(e){if(e instanceof K)throw e;throw eM(Q)}return i8.postProcess(this.cacheManager,e,i),i}}/*! @azure/msal-common v14.14.1 2024-08-13 */let i7="client_id",ne="response_type",nt="token_type",nr="req_cnf",ni="return_spa_code";/*! @azure/msal-common v14.14.1 2024-08-13 */class nn{static validateRedirectUri(e){if(!e)throw tu(eX)}static validatePrompt(e){let t=[];for(let e in m)t.push(m[e]);if(0>t.indexOf(e))throw tu(e6)}static validateClaims(e){try{JSON.parse(e)}catch(e){throw tu(e3)}}static validateCodeChallengeParams(e,t){if(e&&t)this.validateCodeChallengeMethod(t);else throw tu(e7)}static validateCodeChallengeMethod(e){if(0>["plain","S256"].indexOf(e))throw tu(e9)}}/*! @azure/msal-common v14.14.1 2024-08-13 */class no{constructor(){this.parameters=new Map}addResponseTypeCode(){this.parameters.set(ne,encodeURIComponent(s.CODE_RESPONSE_TYPE))}addResponseTypeForTokenAndIdToken(){this.parameters.set(ne,encodeURIComponent(`${s.TOKEN_RESPONSE_TYPE} ${s.ID_TOKEN_RESPONSE_TYPE}`))}addResponseMode(e){this.parameters.set("response_mode",encodeURIComponent(e||f.QUERY))}addNativeBroker(){this.parameters.set("nativebroker",encodeURIComponent("1"))}addScopes(e,t=!0,r=l){!t||r.includes("openid")||e.includes("openid")||r.push("openid");let i=new tp(t?[...e||[],...r]:e||[]);this.parameters.set("scope",encodeURIComponent(i.printScopes()))}addClientId(e){this.parameters.set(i7,encodeURIComponent(e))}addRedirectUri(e){nn.validateRedirectUri(e),this.parameters.set("redirect_uri",encodeURIComponent(e))}addPostLogoutRedirectUri(e){nn.validateRedirectUri(e),this.parameters.set("post_logout_redirect_uri",encodeURIComponent(e))}addIdTokenHint(e){this.parameters.set("id_token_hint",encodeURIComponent(e))}addDomainHint(e){this.parameters.set("domain_hint",encodeURIComponent(e))}addLoginHint(e){this.parameters.set("login_hint",encodeURIComponent(e))}addCcsUpn(e){this.parameters.set(d.CCS_HEADER,encodeURIComponent(`UPN:${e}`))}addCcsOid(e){this.parameters.set(d.CCS_HEADER,encodeURIComponent(`Oid:${e.uid}@${e.utid}`))}addSid(e){this.parameters.set("sid",encodeURIComponent(e))}addClaims(e,t){let r=this.addClientCapabilitiesToClaims(e,t);nn.validateClaims(r),this.parameters.set("claims",encodeURIComponent(r))}addCorrelationId(e){this.parameters.set("client-request-id",encodeURIComponent(e))}addLibraryInfo(e){this.parameters.set("x-client-SKU",e.sku),this.parameters.set("x-client-VER",e.version),e.os&&this.parameters.set("x-client-OS",e.os),e.cpu&&this.parameters.set("x-client-CPU",e.cpu)}addApplicationTelemetry(e){e?.appName&&this.parameters.set("x-app-name",e.appName),e?.appVersion&&this.parameters.set("x-app-ver",e.appVersion)}addPrompt(e){nn.validatePrompt(e),this.parameters.set("prompt",encodeURIComponent(e))}addState(e){e&&this.parameters.set("state",encodeURIComponent(e))}addNonce(e){this.parameters.set("nonce",encodeURIComponent(e))}addCodeChallengeParams(e,t){if(nn.validateCodeChallengeParams(e,t),e&&t)this.parameters.set("code_challenge",encodeURIComponent(e)),this.parameters.set("code_challenge_method",encodeURIComponent(t));else throw tu(e7)}addAuthorizationCode(e){this.parameters.set("code",encodeURIComponent(e))}addDeviceCode(e){this.parameters.set("device_code",encodeURIComponent(e))}addRefreshToken(e){this.parameters.set("refresh_token",encodeURIComponent(e))}addCodeVerifier(e){this.parameters.set("code_verifier",encodeURIComponent(e))}addClientSecret(e){this.parameters.set("client_secret",encodeURIComponent(e))}addClientAssertion(e){e&&this.parameters.set("client_assertion",encodeURIComponent(e))}addClientAssertionType(e){e&&this.parameters.set("client_assertion_type",encodeURIComponent(e))}addOboAssertion(e){this.parameters.set("assertion",encodeURIComponent(e))}addRequestTokenUse(e){this.parameters.set("requested_token_use",encodeURIComponent(e))}addGrantType(e){this.parameters.set("grant_type",encodeURIComponent(e))}addClientInfo(){this.parameters.set("client_info","1")}addExtraQueryParameters(e){Object.entries(e).forEach(([e,t])=>{!this.parameters.has(e)&&t&&this.parameters.set(e,t)})}addClientCapabilitiesToClaims(e,t){let r;if(e)try{r=JSON.parse(e)}catch(e){throw tu(e3)}else r={};return t&&t.length>0&&(r.hasOwnProperty(p.ACCESS_TOKEN)||(r[p.ACCESS_TOKEN]={}),r[p.ACCESS_TOKEN][p.XMS_CC]={values:t}),JSON.stringify(r)}addUsername(e){this.parameters.set("username",encodeURIComponent(e))}addPassword(e){this.parameters.set("password",encodeURIComponent(e))}addPopToken(e){e&&(this.parameters.set(nt,R.POP),this.parameters.set(nr,encodeURIComponent(e)))}addSshJwk(e){e&&(this.parameters.set(nt,R.SSH),this.parameters.set(nr,encodeURIComponent(e)))}addServerTelemetry(e){this.parameters.set("x-client-current-telemetry",e.generateCurrentRequestHeaderValue()),this.parameters.set("x-client-last-telemetry",e.generateLastRequestHeaderValue())}addThrottling(){this.parameters.set("x-ms-lib-capability",S.X_MS_LIB_CAPABILITY_VALUE)}addLogoutHint(e){this.parameters.set("logout_hint",encodeURIComponent(e))}createQueryString(){let e=[];return this.parameters.forEach((t,r)=>{e.push(`${r}=${t}`)}),e.join("&")}}/*! @azure/msal-common v14.14.1 2024-08-13 */async function na(e,t,r,i,n,o,a){a?.addQueueMeasurement(tY.AuthorityFactoryCreateDiscoveredInstance,o);let s=i_.transformCIAMAuthority(ib(e)),c=new i_(s,t,r,i,n,o,a);try{return await iS(c.resolveEndpointsAsync.bind(c),tY.AuthorityResolveEndpointsAsync,n,a,o)(),c}catch(e){throw eM(z)}}/*! @azure/msal-common v14.14.1 2024-08-13 */class ns{constructor(e,t){this.config=function({authOptions:e,systemOptions:t,loggerOptions:r,cacheOptions:i,storageInterface:n,networkInterface:o,cryptoInterface:a,clientCredentials:s,libraryInfo:c,telemetry:l,serverTelemetryManager:h,persistencePlugin:d,serializableCache:u}){let g={...tD,...r};return{authOptions:{clientCapabilities:[],azureCloudOptions:tG,skipAuthorityMetadataCache:!1,...e},systemOptions:{...tL,...t},loggerOptions:g,cacheOptions:{...tK,...i},storageInterface:n||new tH(e.clientId,eq,new M(g)),networkInterface:o||tF,cryptoInterface:a||eq,clientCredentials:s||tB,libraryInfo:{...tx,...c},telemetry:{...t$,...l},serverTelemetryManager:h||null,persistencePlugin:d||null,serializableCache:u||null}}(e),this.logger=new M(this.config.loggerOptions,eU,eH),this.cryptoUtils=this.config.cryptoInterface,this.cacheManager=this.config.storageInterface,this.networkClient=this.config.networkInterface,this.networkManager=new i9(this.networkClient,this.cacheManager),this.serverTelemetryManager=this.config.serverTelemetryManager,this.authority=this.config.authOptions.authority,this.performanceClient=t}createTokenRequestHeaders(e){let t={};if(t[d.CONTENT_TYPE]=s.URL_FORM_CONTENT_TYPE,!this.config.systemOptions.preventCorsPreflight&&e)switch(e.type){case ix.HOME_ACCOUNT_ID:try{let r=tC(e.credential);t[d.CCS_HEADER]=`Oid:${r.uid}@${r.utid}`}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case ix.UPN:t[d.CCS_HEADER]=`UPN: ${e.credential}`}return t}async executePostToTokenEndpoint(e,t,r,i,n,o){o&&this.performanceClient?.addQueueMeasurement(o,n);let a=await this.networkManager.sendPostRequest(i,e,{body:t,headers:r});return this.performanceClient?.addFields({refreshTokenSize:a.body.refresh_token?.length||0,httpVerToken:a.headers?.[d.X_MS_HTTP_VERSION]||""},n),this.config.serverTelemetryManager&&a.status<500&&429!==a.status&&this.config.serverTelemetryManager.clearTelemetryCache(),a}async updateAuthority(e,t){this.performanceClient?.addQueueMeasurement(tY.UpdateTokenEndpointAuthority,t);let r=`https://${e}/${this.authority.tenant}/`,i=await na(r,this.networkClient,this.cacheManager,this.authority.options,this.logger,t,this.performanceClient);this.authority=i}createTokenQueryParameters(e){let t=new no;return e.tokenQueryParameters&&t.addExtraQueryParameters(e.tokenQueryParameters),t.createQueryString()}}class nc{constructor(e,t){this.cryptoUtils=e,this.performanceClient=t}async generateCnf(e,t){this.performanceClient?.addQueueMeasurement(tY.PopTokenGenerateCnf,e.correlationId);let r=await iS(this.generateKid.bind(this),tY.PopTokenGenerateCnf,t,this.performanceClient,e.correlationId)(e),i=this.cryptoUtils.base64UrlEncode(JSON.stringify(r));return{kid:r.kid,reqCnfString:i}}async generateKid(e){return this.performanceClient?.addQueueMeasurement(tY.PopTokenGenerateKid,e.correlationId),{kid:await this.cryptoUtils.getPublicKeyThumbprint(e),xms_ksl:"sw"}}async signPopToken(e,t,r){return this.signPayload(e,t,r)}async signPayload(e,t,r,i){let{resourceRequestMethod:n,resourceRequestUri:o,shrClaims:a,shrNonce:s,shrOptions:c}=r,l=o?new tR(o):void 0,h=l?.getUrlComponents();return this.cryptoUtils.signJwt({at:e,ts:eK(),m:n?.toUpperCase(),u:h?.HostNameAndPort,nonce:s||this.cryptoUtils.createNewGuid(),p:h?.AbsolutePath,q:h?.QueryString?[[],h.QueryString]:void 0,client_claims:a||void 0,...i},t,c,r.correlationId)}}/*! @azure/msal-common v14.14.1 2024-08-13 */class nl{constructor(e,t){this.cache=e,this.hasChanged=t}get cacheHasChanged(){return this.hasChanged}get tokenCache(){return this.cache}}class nh{constructor(e,t,r,i,n,o,a){this.clientId=e,this.cacheStorage=t,this.cryptoObj=r,this.logger=i,this.serializableCache=n,this.persistencePlugin=o,this.performanceClient=a}validateServerAuthorizationCodeResponse(e,t){let r,i;if(!e.state||!t)throw e.state?eM(J,"Cached State"):eM(J,"Server State");try{r=decodeURIComponent(e.state)}catch(t){throw eM(W,e.state)}try{i=decodeURIComponent(t)}catch(t){throw eM(W,e.state)}if(r!==i)throw eM(j);if(e.error||e.error_description||e.suberror){let t=/*! @azure/msal-common v14.14.1 2024-08-13 */function(e){let t="code=",r=e.error_uri?.lastIndexOf(t);return r&&r>=0?e.error_uri?.substring(r+t.length):void 0}(e);if(iD(e.error,e.error_description,e.suberror))throw new iL(e.error||"",e.error_description,e.suberror,e.timestamp||"",e.trace_id||"",e.correlation_id||"",e.claims||"",t);throw new i5(e.error||"",e.error_description,e.suberror,t)}}validateTokenResponse(e,t){if(e.error||e.error_description||e.suberror){let r=`Error(s): ${e.error_codes||s.NOT_AVAILABLE} - Timestamp: ${e.timestamp||s.NOT_AVAILABLE} - Description: ${e.error_description||s.NOT_AVAILABLE} - Correlation ID: ${e.correlation_id||s.NOT_AVAILABLE} - Trace ID: ${e.trace_id||s.NOT_AVAILABLE}`,i=e.error_codes?.length?e.error_codes[0]:void 0,n=new i5(e.error,r,e.suberror,i,e.status);if(t&&e.status&&e.status>=c.SERVER_ERROR_RANGE_START&&e.status<=c.SERVER_ERROR_RANGE_END){this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.
${n}`);return}if(t&&e.status&&e.status>=c.CLIENT_ERROR_RANGE_START&&e.status<=c.CLIENT_ERROR_RANGE_END){this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.
${n}`);return}if(iD(e.error,e.error_description,e.suberror))throw new iL(e.error,e.error_description,e.suberror,e.timestamp||s.EMPTY_STRING,e.trace_id||s.EMPTY_STRING,e.correlation_id||s.EMPTY_STRING,e.claims||s.EMPTY_STRING,i);throw n}}async handleServerTokenResponse(e,t,r,i,n,o,a,c,l){let h,d,u;if(this.performanceClient?.addQueueMeasurement(tY.HandleServerTokenResponse,e.correlation_id),e.id_token){if(h=eL(e.id_token||s.EMPTY_STRING,this.cryptoObj.base64Decode),n&&n.nonce&&h.nonce!==n.nonce)throw eM(X);if(i.maxAge||0===i.maxAge){let e=h.auth_time;if(!e)throw eM(Z);eD(e,i.maxAge)}}this.homeAccountIdentifier=tv.generateHomeAccountId(e.client_info||s.EMPTY_STRING,t.authorityType,this.logger,this.cryptoObj,h),n&&n.state&&(d=iF.parseRequestState(this.cryptoObj,n.state)),e.key_id=e.key_id||i.sshKid||void 0;let g=this.generateCacheRecord(e,t,r,i,h,o,n);try{if(this.persistencePlugin&&this.serializableCache&&(this.logger.verbose("Persistence enabled, calling beforeCacheAccess"),u=new nl(this.serializableCache,!0),await this.persistencePlugin.beforeCacheAccess(u)),a&&!c&&g.account){let e=g.account.generateAccountKey();if(!this.cacheStorage.getAccount(e,this.logger))return this.logger.warning("Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache"),await nh.generateAuthenticationResult(this.cryptoObj,t,g,!1,i,h,d,void 0,l)}await this.cacheStorage.saveCacheRecord(g,i.storeInCache,i.correlationId)}finally{this.persistencePlugin&&this.serializableCache&&u&&(this.logger.verbose("Persistence enabled, calling afterCacheAccess"),await this.persistencePlugin.afterCacheAccess(u))}return nh.generateAuthenticationResult(this.cryptoObj,t,g,!1,i,h,d,e,l)}generateCacheRecord(e,t,r,i,n,o,a){let s,c;let l=t.getPreferredCache();if(!l)throw eM(eg);let h=tA(n);e.id_token&&n&&(s=eB(this.homeAccountIdentifier,l,e.id_token,this.clientId,h||""),c=nd(this.cacheStorage,t,this.homeAccountIdentifier,this.cryptoObj.base64Decode,n,e.client_info,l,h,a,void 0,this.logger));let d=null;if(e.access_token){let n=e.scope?tp.fromString(e.scope):new tp(i.scopes||[]),a=("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0,s=("string"==typeof e.ext_expires_in?parseInt(e.ext_expires_in,10):e.ext_expires_in)||0,c=("string"==typeof e.refresh_in?parseInt(e.refresh_in,10):e.refresh_in)||void 0,u=r+a;d=eG(this.homeAccountIdentifier,l,e.access_token,this.clientId,h||t.tenant||"",n.printScopes(),u,u+s,this.cryptoObj.base64Decode,c&&c>0?r+c:void 0,e.token_type,o,e.key_id,i.claims,i.requestedClaimsHash)}let u=null;if(e.refresh_token){let t;e.refresh_token_expires_in&&(t=r+("string"==typeof e.refresh_token_expires_in?parseInt(e.refresh_token_expires_in,10):e.refresh_token_expires_in)),u=e$(this.homeAccountIdentifier,l,e.refresh_token,this.clientId,e.foci,o,t)}let g=null;return e.foci&&(g={clientId:this.clientId,environment:l,familyId:e.foci}),{account:c,idToken:s,accessToken:d,refreshToken:u,appMetadata:g}}static async generateAuthenticationResult(e,t,r,i,n,o,a,c,l){let h,d,u=s.EMPTY_STRING,g=[],p=null,m=s.EMPTY_STRING;if(r.accessToken){if(r.accessToken.tokenType!==R.POP||n.popKid)u=r.accessToken.secret;else{let t=new nc(e),{secret:i,keyId:o}=r.accessToken;if(!o)throw eM(eR);u=await t.signPopToken(i,o,n)}g=tp.fromString(r.accessToken.target).asArray(),p=new Date(1e3*Number(r.accessToken.expiresOn)),h=new Date(1e3*Number(r.accessToken.extendedExpiresOn)),r.accessToken.refreshOn&&(d=new Date(1e3*Number(r.accessToken.refreshOn)))}r.appMetadata&&(m="1"===r.appMetadata.familyId?"1":"");let C=o?.oid||o?.sub||"",f=o?.tid||"";c?.spa_accountid&&r.account&&(r.account.nativeAccountId=c?.spa_accountid);let y=r.account?tT(r.account.getAccountInfo(),void 0,o,r.idToken?.secret):null;return{authority:t.canonicalAuthority,uniqueId:C,tenantId:f,scopes:g,account:y,idToken:r?.idToken?.secret||"",idTokenClaims:o||{},accessToken:u,fromCache:i,expiresOn:p,extExpiresOn:h,refreshOn:d,correlationId:n.correlationId,requestId:l||s.EMPTY_STRING,familyId:m,tokenType:r.accessToken?.tokenType||s.EMPTY_STRING,state:a?a.userRequestState:s.EMPTY_STRING,cloudGraphHostName:r.account?.cloudGraphHostName||s.EMPTY_STRING,msGraphHost:r.account?.msGraphHost||s.EMPTY_STRING,code:c?.spa_code,fromNativeBroker:!1}}}function nd(e,t,r,i,n,o,a,s,c,l,h){h?.verbose("setCachedAccount called");let d=e.getAccountKeys().find(e=>e.startsWith(r)),u=null;d&&(u=e.getAccount(d,h));let g=u||tv.createAccount({homeAccountId:r,idTokenClaims:n,clientInfo:o,environment:a,cloudGraphHostName:c?.cloud_graph_host_name,msGraphHost:c?.msgraph_host,nativeAccountId:l},t,i),p=g.tenantProfiles||[],m=s||g.realm;if(m&&!p.find(e=>e.tenantId===m)){let e=ty(r,g.localAccountId,m,n);p.push(e)}return g.tenantProfiles=p,g}/*! @azure/msal-common v14.14.1 2024-08-13 */async function nu(e,t,r){return"string"==typeof e?e:e({clientId:t,tokenEndpoint:r})}/*! @azure/msal-common v14.14.1 2024-08-13 */class ng extends ns{constructor(e,t){super(e,t),this.includeRedirectUri=!0,this.oidcDefaultScopes=this.config.authOptions.authority.options.OIDCOptions?.defaultScopes}async getAuthCodeUrl(e){this.performanceClient?.addQueueMeasurement(tY.GetAuthCodeUrl,e.correlationId);let t=await iS(this.createAuthCodeUrlQueryString.bind(this),tY.AuthClientCreateQueryString,this.logger,this.performanceClient,e.correlationId)(e);return tR.appendQueryString(this.authority.authorizationEndpoint,t)}async acquireToken(e,t){if(this.performanceClient?.addQueueMeasurement(tY.AuthClientAcquireToken,e.correlationId),!e.code)throw eM(en);let r=eK(),i=await iS(this.executeTokenRequest.bind(this),tY.AuthClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(this.authority,e),n=i.headers?.[d.X_MS_REQUEST_ID],o=new nh(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin,this.performanceClient);return o.validateTokenResponse(i.body),iS(o.handleServerTokenResponse.bind(o),tY.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(i.body,this.authority,r,e,t,void 0,void 0,void 0,n)}handleFragmentResponse(e,t){if(new nh(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,null,null).validateServerAuthorizationCodeResponse(e,t),!e.code)throw eM(ev);return e}getLogoutUri(e){if(!e)throw tu(e8);let t=this.createLogoutUrlQueryString(e);return tR.appendQueryString(this.authority.endSessionEndpoint,t)}async executeTokenRequest(e,t){let r;this.performanceClient?.addQueueMeasurement(tY.AuthClientExecuteTokenRequest,t.correlationId);let i=this.createTokenQueryParameters(t),n=tR.appendQueryString(e.tokenEndpoint,i),o=await iS(this.createTokenRequestBody.bind(this),tY.AuthClientCreateTokenRequestBody,this.logger,this.performanceClient,t.correlationId)(t);if(t.clientInfo)try{let e=tm(t.clientInfo,this.cryptoUtils.base64Decode);r={credential:`${e.uid}${T.CLIENT_INFO_SEPARATOR}${e.utid}`,type:ix.HOME_ACCOUNT_ID}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}let a=this.createTokenRequestHeaders(r||t.ccsCredential),s={clientId:t.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:e.canonicalAuthority,scopes:t.scopes,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid};return iS(this.executePostToTokenEndpoint.bind(this),tY.AuthorizationCodeClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,t.correlationId)(n,o,a,s,t.correlationId,tY.AuthorizationCodeClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){let t;this.performanceClient?.addQueueMeasurement(tY.AuthClientCreateTokenRequestBody,e.correlationId);let r=new no;if(r.addClientId(e.tokenBodyParameters?.[i7]||this.config.authOptions.clientId),this.includeRedirectUri?r.addRedirectUri(e.redirectUri):nn.validateRedirectUri(e.redirectUri),r.addScopes(e.scopes,!0,this.oidcDefaultScopes),r.addAuthorizationCode(e.code),r.addLibraryInfo(this.config.libraryInfo),r.addApplicationTelemetry(this.config.telemetry.application),r.addThrottling(),this.serverTelemetryManager&&!tz(this.config)&&r.addServerTelemetry(this.serverTelemetryManager),e.codeVerifier&&r.addCodeVerifier(e.codeVerifier),this.config.clientCredentials.clientSecret&&r.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){let t=this.config.clientCredentials.clientAssertion;r.addClientAssertion(await nu(t.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),r.addClientAssertionType(t.assertionType)}if(r.addGrantType("authorization_code"),r.addClientInfo(),e.authenticationScheme===R.POP){let t;let i=new nc(this.cryptoUtils,this.performanceClient);t=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await iS(i.generateCnf.bind(i),tY.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,r.addPopToken(t)}else if(e.authenticationScheme===R.SSH){if(e.sshJwk)r.addSshJwk(e.sshJwk);else throw tu(ti)}let i=e.correlationId||this.config.cryptoInterface.createNewGuid();if(r.addCorrelationId(i),(!tg.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&r.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.clientInfo)try{let r=tm(e.clientInfo,this.cryptoUtils.base64Decode);t={credential:`${r.uid}${T.CLIENT_INFO_SEPARATOR}${r.utid}`,type:ix.HOME_ACCOUNT_ID}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}else t=e.ccsCredential;if(this.config.systemOptions.preventCorsPreflight&&t)switch(t.type){case ix.HOME_ACCOUNT_ID:try{let e=tC(t.credential);r.addCcsOid(e)}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case ix.UPN:r.addCcsUpn(t.credential)}return e.tokenBodyParameters&&r.addExtraQueryParameters(e.tokenBodyParameters),!e.enableSpaAuthorizationCode||e.tokenBodyParameters&&e.tokenBodyParameters[ni]||r.addExtraQueryParameters({[ni]:"1"}),r.createQueryString()}async createAuthCodeUrlQueryString(e){this.performanceClient?.addQueueMeasurement(tY.AuthClientCreateQueryString,e.correlationId);let t=new no;t.addClientId(e.extraQueryParameters?.[i7]||this.config.authOptions.clientId);let r=[...e.scopes||[],...e.extraScopesToConsent||[]];t.addScopes(r,!0,this.oidcDefaultScopes),t.addRedirectUri(e.redirectUri);let i=e.correlationId||this.config.cryptoInterface.createNewGuid();if(t.addCorrelationId(i),t.addResponseMode(e.responseMode),t.addResponseTypeCode(),t.addLibraryInfo(this.config.libraryInfo),tz(this.config)||t.addApplicationTelemetry(this.config.telemetry.application),t.addClientInfo(),e.codeChallenge&&e.codeChallengeMethod&&t.addCodeChallengeParams(e.codeChallenge,e.codeChallengeMethod),e.prompt&&t.addPrompt(e.prompt),e.domainHint&&t.addDomainHint(e.domainHint),e.prompt!==m.SELECT_ACCOUNT){if(e.sid&&e.prompt===m.NONE)this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from request"),t.addSid(e.sid);else if(e.account){let r=this.extractAccountSid(e.account),i=this.extractLoginHint(e.account);if(i&&e.domainHint&&(this.logger.warning('AuthorizationCodeClient.createAuthCodeUrlQueryString: "domainHint" param is set, skipping opaque "login_hint" claim. Please consider not passing domainHint'),i=null),i){this.logger.verbose("createAuthCodeUrlQueryString: login_hint claim present on account"),t.addLoginHint(i);try{let r=tC(e.account.homeAccountId);t.addCcsOid(r)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(r&&e.prompt===m.NONE){this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from account"),t.addSid(r);try{let r=tC(e.account.homeAccountId);t.addCcsOid(r)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(e.loginHint)this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint);else if(e.account.username){this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from account"),t.addLoginHint(e.account.username);try{let r=tC(e.account.homeAccountId);t.addCcsOid(r)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}}else e.loginHint&&(this.logger.verbose("createAuthCodeUrlQueryString: No account, adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint))}else this.logger.verbose("createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints");if(e.nonce&&t.addNonce(e.nonce),e.state&&t.addState(e.state),(e.claims||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters),e.nativeBroker&&(t.addNativeBroker(),e.authenticationScheme===R.POP)){let r;let i=new nc(this.cryptoUtils);r=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await iS(i.generateCnf.bind(i),tY.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,t.addPopToken(r)}return t.createQueryString()}createLogoutUrlQueryString(e){let t=new no;return e.postLogoutRedirectUri&&t.addPostLogoutRedirectUri(e.postLogoutRedirectUri),e.correlationId&&t.addCorrelationId(e.correlationId),e.idTokenHint&&t.addIdTokenHint(e.idTokenHint),e.state&&t.addState(e.state),e.logoutHint&&t.addLogoutHint(e.logoutHint),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters),t.createQueryString()}extractAccountSid(e){return e.idTokenClaims?.sid||null}extractLoginHint(e){return e.idTokenClaims?.login_hint||null}}class np{constructor(e,t){this.cacheOutcome=P.NOT_APPLICABLE,this.cacheManager=t,this.apiId=e.apiId,this.correlationId=e.correlationId,this.wrapperSKU=e.wrapperSKU||s.EMPTY_STRING,this.wrapperVer=e.wrapperVer||s.EMPTY_STRING,this.telemetryCacheKey=E.CACHE_KEY+T.CACHE_KEY_SEPARATOR+e.clientId}generateCurrentRequestHeaderValue(){let e=`${this.apiId}${E.VALUE_SEPARATOR}${this.cacheOutcome}`,t=[this.wrapperSKU,this.wrapperVer],r=this.getNativeBrokerErrorCode();r?.length&&t.push(`broker_error=${r}`);let i=t.join(E.VALUE_SEPARATOR),n=[e,this.getRegionDiscoveryFields()].join(E.VALUE_SEPARATOR);return[E.SCHEMA_VERSION,n,i].join(E.CATEGORY_SEPARATOR)}generateLastRequestHeaderValue(){let e=this.getLastRequests(),t=np.maxErrorsToSend(e),r=e.failedRequests.slice(0,2*t).join(E.VALUE_SEPARATOR),i=e.errors.slice(0,t).join(E.VALUE_SEPARATOR),n=e.errors.length,o=t<n?E.OVERFLOW_TRUE:E.OVERFLOW_FALSE,a=[n,o].join(E.VALUE_SEPARATOR);return[E.SCHEMA_VERSION,e.cacheHits,r,i,a].join(E.CATEGORY_SEPARATOR)}cacheFailedRequest(e){let t=this.getLastRequests();t.errors.length>=E.MAX_CACHED_ERRORS&&(t.failedRequests.shift(),t.failedRequests.shift(),t.errors.shift()),t.failedRequests.push(this.apiId,this.correlationId),e instanceof Error&&e&&e.toString()?e instanceof K?e.subError?t.errors.push(e.subError):e.errorCode?t.errors.push(e.errorCode):t.errors.push(e.toString()):t.errors.push(e.toString()):t.errors.push(E.UNKNOWN_ERROR),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}incrementCacheHits(){let e=this.getLastRequests();return e.cacheHits+=1,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e),e.cacheHits}getLastRequests(){return this.cacheManager.getServerTelemetry(this.telemetryCacheKey)||{failedRequests:[],errors:[],cacheHits:0}}clearTelemetryCache(){let e=this.getLastRequests(),t=np.maxErrorsToSend(e);if(t===e.errors.length)this.cacheManager.removeItem(this.telemetryCacheKey);else{let r={failedRequests:e.failedRequests.slice(2*t),errors:e.errors.slice(t),cacheHits:0};this.cacheManager.setServerTelemetry(this.telemetryCacheKey,r)}}static maxErrorsToSend(e){let t;let r=0,i=0,n=e.errors.length;for(t=0;t<n;t++){let n=e.failedRequests[2*t]||s.EMPTY_STRING,o=e.failedRequests[2*t+1]||s.EMPTY_STRING,a=e.errors[t]||s.EMPTY_STRING;if((i+=n.toString().length+o.toString().length+a.length+3)<E.MAX_LAST_HEADER_BYTES)r+=1;else break}return r}getRegionDiscoveryFields(){let e=[];return e.push(this.regionUsed||s.EMPTY_STRING),e.push(this.regionSource||s.EMPTY_STRING),e.push(this.regionOutcome||s.EMPTY_STRING),e.join(",")}updateRegionDiscoveryMetadata(e){this.regionUsed=e.region_used,this.regionSource=e.region_source,this.regionOutcome=e.region_outcome}setCacheOutcome(e){this.cacheOutcome=e}setNativeBrokerErrorCode(e){let t=this.getLastRequests();t.nativeBrokerErrorCode=e,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}getNativeBrokerErrorCode(){return this.getLastRequests().nativeBrokerErrorCode}clearNativeBrokerErrorCode(){let e=this.getLastRequests();delete e.nativeBrokerErrorCode,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e)}static makeExtraSkuString(e){return function(e){let{skus:t,libraryName:r,libraryVersion:i,extensionName:n,extensionVersion:o}=e,a=new Map([[0,[r,i]],[2,[n,o]]]),s=[];if(t?.length){if((s=t.split(",")).length<4)return t}else s=Array.from({length:4},()=>"|");return a.forEach((e,t)=>{2===e.length&&e[0]?.length&&e[1]?.length&&function(e){let{skuArr:t,index:r,skuName:i,skuVersion:n}=e;r>=t.length||(t[r]=[i,n].join("|"))}({skuArr:s,index:t,skuName:e[0],skuVersion:e[1]})}),s.join(",")}(e)}}/*! @azure/msal-browser v3.21.0 2024-08-13 */class nm{constructor(e,t,r,i,n,o,a,s,c){this.config=e,this.browserStorage=t,this.browserCrypto=r,this.networkClient=this.config.system.networkClient,this.eventHandler=n,this.navigationClient=o,this.nativeMessageHandler=s,this.correlationId=c||ig(),this.logger=i.clone(tj.MSAL_SKU,r0,this.correlationId),this.performanceClient=a}async clearCacheOnLogout(e){if(e){tv.accountInfoIsEqual(e,this.browserStorage.getActiveAccount(),!1)&&(this.logger.verbose("Setting active account to null"),this.browserStorage.setActiveAccount(null));try{await this.browserStorage.removeAccount(tv.generateAccountCacheKey(e)),this.logger.verbose("Cleared cache items belonging to the account provided in the logout request.")}catch(e){this.logger.error("Account provided in logout request was not found. Local cache unchanged.")}}else try{this.logger.verbose("No account provided in logout request, clearing all cache items.",this.correlationId),await this.browserStorage.clear(),await this.browserCrypto.clearKeystore()}catch(e){this.logger.error("Attempted to clear all MSAL cache items and failed. Local cache unchanged.")}}getRedirectUri(e){this.logger.verbose("getRedirectUri called");let t=e||this.config.auth.redirectUri||iZ();return tR.getAbsoluteUrl(t,iZ())}initializeServerTelemetryManager(e,t){return this.logger.verbose("initializeServerTelemetryManager called"),new np({clientId:this.config.auth.clientId,correlationId:this.correlationId,apiId:e,forceRefresh:t||!1,wrapperSKU:this.browserStorage.getWrapperMetadata()[0],wrapperVer:this.browserStorage.getWrapperMetadata()[1]},this.browserStorage)}async getDiscoveredAuthority(e,t,r){this.performanceClient.addQueueMeasurement(tY.StandardInteractionClientGetDiscoveredAuthority,this.correlationId);let i={protocolMode:this.config.auth.protocolMode,OIDCOptions:this.config.auth.OIDCOptions,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},n=e||this.config.auth.authority,o=i_.generateAuthority(n,t||this.config.auth.azureCloudOptions),a=await iS(na,tY.AuthorityFactoryCreateDiscoveredInstance,this.logger,this.performanceClient,this.correlationId)(o,this.config.system.networkClient,this.browserStorage,i,this.logger,this.correlationId,this.performanceClient);if(r&&!a.isAlias(r.environment))throw tu(tl);return a}}async function nC(e,t,r){e.addQueueMeasurement(tY.GeneratePkceCodes,r);let i=iR(nf,tY.GenerateCodeVerifier,t,e,r)(e,t,r),n=await iS(ny,tY.GenerateCodeChallengeFromVerifier,t,e,r)(i,e,t,r);return{verifier:i,challenge:n}}function nf(e,t,r){try{let i=new Uint8Array(32);return iR(id,tY.GetRandomValues,t,e,r)(i),ie(i)}catch(e){throw rX(rr)}}async function ny(e,t,r,i){t.addQueueMeasurement(tY.GenerateCodeChallengeFromVerifier,i);try{let n=await iS(ih,tY.Sha256Digest,r,t,i)(e,t,i);return ie(new Uint8Array(n))}catch(e){throw rX(rr)}}/*! @azure/msal-browser v3.21.0 2024-08-13 */async function nT(e,t,r,i){r.addQueueMeasurement(tY.InitializeBaseRequest,e.correlationId);let n=e.authority||t.auth.authority,o=[...e&&e.scopes||[]],a={...e,correlationId:e.correlationId,authority:n,scopes:o};if(a.authenticationScheme){if(a.authenticationScheme===R.SSH){if(!e.sshJwk)throw tu(ti);if(!e.sshKid)throw tu(tn)}i.verbose(`Authentication Scheme set to "${a.authenticationScheme}" as configured in Auth request`)}else a.authenticationScheme=R.BEARER,i.verbose('Authentication Scheme wasn\'t explicitly set in request, defaulting to "Bearer" request');return t.cache.claimsBasedCachingEnabled&&e.claims&&!tg.isEmptyObj(e.claims)&&(a.requestedClaimsHash=await iT(e.claims)),a}async function nI(e,t,r,i,n){i.addQueueMeasurement(tY.InitializeSilentRequest,e.correlationId);let o=await iS(nT,tY.InitializeBaseRequest,n,i,e.correlationId)(e,r,i,n);return{...e,...o,account:t,forceRefresh:e.forceRefresh||!1}}/*! @azure/msal-browser v3.21.0 2024-08-13 */class nA extends nm{async initializeAuthorizationCodeRequest(e){this.performanceClient.addQueueMeasurement(tY.StandardInteractionClientInitializeAuthorizationCodeRequest,this.correlationId);let t=await iS(nC,tY.GeneratePkceCodes,this.logger,this.performanceClient,this.correlationId)(this.performanceClient,this.logger,this.correlationId),r={...e,redirectUri:e.redirectUri,code:s.EMPTY_STRING,codeVerifier:t.verifier};return e.codeChallenge=t.challenge,e.codeChallengeMethod=s.S256_CODE_CHALLENGE_METHOD,r}initializeLogoutRequest(e){this.logger.verbose("initializeLogoutRequest called",e?.correlationId);let t={correlationId:this.correlationId||ig(),...e};if(e){if(e.logoutHint)this.logger.verbose("logoutHint has already been set in logoutRequest");else if(e.account){let r=this.getLogoutHintFromIdTokenClaims(e.account);r&&(this.logger.verbose("Setting logoutHint to login_hint ID Token Claim value for the account provided"),t.logoutHint=r)}else this.logger.verbose("logoutHint was not set and account was not passed into logout request, logoutHint will not be set")}else this.logger.verbose("logoutHint will not be set since no logout request was configured");return e&&null===e.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri passed as null, not setting post logout redirect uri",t.correlationId):e&&e.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to uri set on logout request",t.correlationId),t.postLogoutRedirectUri=tR.getAbsoluteUrl(e.postLogoutRedirectUri,iZ())):null===this.config.auth.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect",t.correlationId):this.config.auth.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to configured uri",t.correlationId),t.postLogoutRedirectUri=tR.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri,iZ())):(this.logger.verbose("Setting postLogoutRedirectUri to current page",t.correlationId),t.postLogoutRedirectUri=tR.getAbsoluteUrl(iZ(),iZ())),t}getLogoutHintFromIdTokenClaims(e){let t=e.idTokenClaims;if(t){if(t.login_hint)return t.login_hint;this.logger.verbose("The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request")}else this.logger.verbose("The provided account does not contain ID Token Claims, logoutHint will not be added to logout request");return null}async createAuthCodeClient(e,t,r,i){return this.performanceClient.addQueueMeasurement(tY.StandardInteractionClientCreateAuthCodeClient,this.correlationId),new ng(await iS(this.getClientConfiguration.bind(this),tY.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e,t,r,i),this.performanceClient)}async getClientConfiguration(e,t,r,i){this.performanceClient.addQueueMeasurement(tY.StandardInteractionClientGetClientConfiguration,this.correlationId);let n=await iS(this.getDiscoveredAuthority.bind(this),tY.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,this.correlationId)(t,r,i),o=this.config.system.loggerOptions;return{authOptions:{clientId:this.config.auth.clientId,authority:n,clientCapabilities:this.config.auth.clientCapabilities},systemOptions:{tokenRenewalOffsetSeconds:this.config.system.tokenRenewalOffsetSeconds,preventCorsPreflight:!0},loggerOptions:{loggerCallback:o.loggerCallback,piiLoggingEnabled:o.piiLoggingEnabled,logLevel:o.logLevel,correlationId:this.correlationId},cacheOptions:{claimsBasedCachingEnabled:this.config.cache.claimsBasedCachingEnabled},cryptoInterface:this.browserCrypto,networkInterface:this.networkClient,storageInterface:this.browserStorage,serverTelemetryManager:e,libraryInfo:{sku:tj.MSAL_SKU,version:r0,cpu:s.EMPTY_STRING,os:s.EMPTY_STRING},telemetry:this.config.telemetry}}async initializeAuthorizationRequest(e,t){this.performanceClient.addQueueMeasurement(tY.StandardInteractionClientInitializeAuthorizationRequest,this.correlationId);let r=this.getRedirectUri(e.redirectUri),i=iF.setRequestState(this.browserCrypto,e&&e.state||s.EMPTY_STRING,{interactionType:t}),n={...await iS(nT,tY.InitializeBaseRequest,this.logger,this.performanceClient,this.correlationId)({...e,correlationId:this.correlationId},this.config,this.performanceClient,this.logger),redirectUri:r,state:i,nonce:e.nonce||ig(),responseMode:this.config.auth.OIDCOptions.serverResponseType},o=e.account||this.browserStorage.getActiveAccount();if(o&&(this.logger.verbose("Setting validated request account",this.correlationId),this.logger.verbosePii(`Setting validated request account: ${o.homeAccountId}`,this.correlationId),n.account=o),!n.loginHint&&!o){let e=this.browserStorage.getLegacyLoginHint();e&&(n.loginHint=e)}return n}}let nv="user_switch",nw={[nv]:"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again."};class nE extends K{constructor(e,t,r){super(e,t),Object.setPrototypeOf(this,nE.prototype),this.name="NativeAuthError",this.ext=r}}function nR(e){return!!e.ext&&!!e.ext.status&&("PERSISTENT_ERROR"===e.ext.status||"DISABLED"===e.ext.status)||!!e.ext&&!!e.ext.error&&-2147186943===e.ext.error||"ContentError"===e.errorCode}function nS(e,t,r){if(r&&r.status)switch(r.status){case"ACCOUNT_UNAVAILABLE":return iK(iP);case"USER_INTERACTION_REQUIRED":return new iL(e,t);case"USER_CANCEL":return rX(rg);case"NO_NETWORK":return rX(rO)}return new nE(e,nw[e]||t,r)}class nk extends ns{constructor(e,t){super(e,t)}async acquireToken(e){this.performanceClient?.addQueueMeasurement(tY.RefreshTokenClientAcquireToken,e.correlationId);let t=eK(),r=await iS(this.executeTokenRequest.bind(this),tY.RefreshTokenClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(e,this.authority),i=r.headers?.[d.X_MS_REQUEST_ID],n=new nh(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return n.validateTokenResponse(r.body),iS(n.handleServerTokenResponse.bind(n),tY.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(r.body,this.authority,t,e,void 0,void 0,!0,e.forceCache,i)}async acquireTokenByRefreshToken(e){if(!e)throw tu(e5);if(this.performanceClient?.addQueueMeasurement(tY.RefreshTokenClientAcquireTokenByRefreshToken,e.correlationId),!e.account)throw eM(ed);if(this.cacheManager.isAppMetadataFOCI(e.account.environment))try{return await iS(this.acquireTokenWithCachedRefreshToken.bind(this),tY.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!0)}catch(r){let e=r instanceof iL&&r.errorCode===iO,t=r instanceof i5&&r.errorCode===k.INVALID_GRANT_ERROR&&r.subError===k.CLIENT_MISMATCH_ERROR;if(e||t);else throw r}return iS(this.acquireTokenWithCachedRefreshToken.bind(this),tY.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1)}async acquireTokenWithCachedRefreshToken(e,t){this.performanceClient?.addQueueMeasurement(tY.RefreshTokenClientAcquireTokenWithCachedRefreshToken,e.correlationId);let r=iR(this.cacheManager.getRefreshToken.bind(this.cacheManager),tY.CacheManagerGetRefreshToken,this.logger,this.performanceClient,e.correlationId)(e.account,t,void 0,this.performanceClient,e.correlationId);if(!r)throw iK(iO);if(r.expiresOn&&eF(r.expiresOn,e.refreshTokenExpirationOffsetSeconds||300))throw iK(iN);let i={...e,refreshToken:r.secret,authenticationScheme:e.authenticationScheme||R.BEARER,ccsCredential:{credential:e.account.homeAccountId,type:ix.HOME_ACCOUNT_ID}};try{return await iS(this.acquireToken.bind(this),tY.RefreshTokenClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(i)}catch(e){if(e instanceof iL&&e.subError===iM){this.logger.verbose("acquireTokenWithRefreshToken: bad refresh token, removing from cache");let e=ex(r);this.cacheManager.removeRefreshToken(e)}throw e}}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(tY.RefreshTokenClientExecuteTokenRequest,e.correlationId);let r=this.createTokenQueryParameters(e),i=tR.appendQueryString(t.tokenEndpoint,r),n=await iS(this.createTokenRequestBody.bind(this),tY.RefreshTokenClientCreateTokenRequestBody,this.logger,this.performanceClient,e.correlationId)(e),o=this.createTokenRequestHeaders(e.ccsCredential),a={clientId:e.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:t.canonicalAuthority,scopes:e.scopes,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid};return iS(this.executePostToTokenEndpoint.bind(this),tY.RefreshTokenClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,e.correlationId)(i,n,o,a,e.correlationId,tY.RefreshTokenClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(tY.RefreshTokenClientCreateTokenRequestBody,e.correlationId);let t=e.correlationId,r=new no;if(r.addClientId(e.tokenBodyParameters?.[i7]||this.config.authOptions.clientId),e.redirectUri&&r.addRedirectUri(e.redirectUri),r.addScopes(e.scopes,!0,this.config.authOptions.authority.options.OIDCOptions?.defaultScopes),r.addGrantType("refresh_token"),r.addClientInfo(),r.addLibraryInfo(this.config.libraryInfo),r.addApplicationTelemetry(this.config.telemetry.application),r.addThrottling(),this.serverTelemetryManager&&!tz(this.config)&&r.addServerTelemetry(this.serverTelemetryManager),r.addCorrelationId(t),r.addRefreshToken(e.refreshToken),this.config.clientCredentials.clientSecret&&r.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){let t=this.config.clientCredentials.clientAssertion;r.addClientAssertion(await nu(t.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),r.addClientAssertionType(t.assertionType)}if(e.authenticationScheme===R.POP){let t;let i=new nc(this.cryptoUtils,this.performanceClient);t=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await iS(i.generateCnf.bind(i),tY.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,r.addPopToken(t)}else if(e.authenticationScheme===R.SSH){if(e.sshJwk)r.addSshJwk(e.sshJwk);else throw tu(ti)}if((!tg.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&r.addClaims(e.claims,this.config.authOptions.clientCapabilities),this.config.systemOptions.preventCorsPreflight&&e.ccsCredential)switch(e.ccsCredential.type){case ix.HOME_ACCOUNT_ID:try{let t=tC(e.ccsCredential.credential);r.addCcsOid(t)}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case ix.UPN:r.addCcsUpn(e.ccsCredential.credential)}return e.tokenBodyParameters&&r.addExtraQueryParameters(e.tokenBodyParameters),r.createQueryString()}}/*! @azure/msal-common v14.14.1 2024-08-13 */class n_ extends ns{constructor(e,t){super(e,t)}async acquireToken(e){try{let[t,r]=await this.acquireCachedToken({...e,scopes:e.scopes?.length?e.scopes:[...l]});return r===P.PROACTIVELY_REFRESHED&&(this.logger.info("SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed."),new nk(this.config,this.performanceClient).acquireTokenByRefreshToken(e).catch(()=>{})),t}catch(t){if(t instanceof eN&&t.errorCode===eT)return new nk(this.config,this.performanceClient).acquireTokenByRefreshToken(e);throw t}}async acquireCachedToken(e){this.performanceClient?.addQueueMeasurement(tY.SilentFlowClientAcquireCachedToken,e.correlationId);let t=P.NOT_APPLICABLE;if(e.forceRefresh||!this.config.cacheOptions.claimsBasedCachingEnabled&&!tg.isEmptyObj(e.claims))throw this.setCacheOutcome(P.FORCE_REFRESH_OR_CLAIMS,e.correlationId),eM(eT);if(!e.account)throw eM(ed);let r=e.account.tenantId||function(e){let t=new tR(e).getUrlComponents(),r=t.PathSegments.slice(-1)[0]?.toLowerCase();switch(r){case g.COMMON:case g.ORGANIZATIONS:case g.CONSUMERS:return;default:return r}}(e.authority),i=this.cacheManager.getTokenKeys(),n=this.cacheManager.getAccessToken(e.account,e,i,r,this.performanceClient,e.correlationId);if(n){if(Number(n.cachedAt)>eK()||eF(n.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds))throw this.setCacheOutcome(P.CACHED_ACCESS_TOKEN_EXPIRED,e.correlationId),eM(eT);n.refreshOn&&eF(n.refreshOn,0)&&(t=P.PROACTIVELY_REFRESHED)}else throw this.setCacheOutcome(P.NO_CACHED_ACCESS_TOKEN,e.correlationId),eM(eT);let o=e.authority||this.authority.getPreferredCache(),a={account:this.cacheManager.readAccountFromCache(e.account),accessToken:n,idToken:this.cacheManager.getIdToken(e.account,i,r,this.performanceClient,e.correlationId),refreshToken:null,appMetadata:this.cacheManager.readAppMetadataFromCache(o)};return this.setCacheOutcome(t,e.correlationId),this.config.serverTelemetryManager&&this.config.serverTelemetryManager.incrementCacheHits(),[await iS(this.generateResultFromCacheRecord.bind(this),tY.SilentFlowClientGenerateResultFromCacheRecord,this.logger,this.performanceClient,e.correlationId)(a,e),t]}setCacheOutcome(e,t){this.serverTelemetryManager?.setCacheOutcome(e),this.performanceClient?.addFields({cacheOutcome:e},t),e!==P.NOT_APPLICABLE&&this.logger.info(`Token refresh is required due to cache outcome: ${e}`)}async generateResultFromCacheRecord(e,t){let r;if(this.performanceClient?.addQueueMeasurement(tY.SilentFlowClientGenerateResultFromCacheRecord,t.correlationId),e.idToken&&(r=eL(e.idToken.secret,this.config.cryptoInterface.base64Decode)),t.maxAge||0===t.maxAge){let e=r?.auth_time;if(!e)throw eM(Z);eD(e,t.maxAge)}return nh.generateAuthenticationResult(this.cryptoUtils,this.authority,e,!0,t,r)}}/*! @azure/msal-browser v3.21.0 2024-08-13 */class nb extends nA{async acquireToken(e){this.performanceClient.addQueueMeasurement(tY.SilentCacheClientAcquireToken,e.correlationId);let t=this.initializeServerTelemetryManager(t3.acquireTokenSilent_silentFlow),r=new n_(await iS(this.getClientConfiguration.bind(this),tY.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(t,e.authority,e.azureCloudOptions,e.account),this.performanceClient);this.logger.verbose("Silent auth client created");try{let t=(await iS(r.acquireCachedToken.bind(r),tY.SilentFlowClientAcquireCachedToken,this.logger,this.performanceClient,e.correlationId)(e))[0];return this.performanceClient.addFields({fromCache:!0},e.correlationId),t}catch(e){throw e instanceof rJ&&e.errorCode===rU&&this.logger.verbose("Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair."),e}}logout(e){this.logger.verbose("logoutRedirect called");let t=this.initializeLogoutRequest(e);return this.clearCacheOnLogout(t?.account)}}/*! @azure/msal-browser v3.21.0 2024-08-13 */let nO={BROKER_CLIENT_ID:"brk_client_id",BROKER_REDIRECT_URI:"brk_redirect_uri"};class nP extends nm{constructor(e,t,r,i,n,o,a,s,c,l,h,d){super(e,t,r,i,n,o,s,c,d),this.apiId=a,this.accountId=l,this.nativeMessageHandler=c,this.nativeStorageManager=h,this.silentCacheClient=new nb(e,this.nativeStorageManager,r,i,n,o,s,c,d),this.serverTelemetryManager=this.initializeServerTelemetryManager(this.apiId);let u=this.nativeMessageHandler.getExtensionId()===tJ.PREFERRED_EXTENSION_ID?"chrome":this.nativeMessageHandler.getExtensionId()?.length?"unknown":void 0;this.skus=np.makeExtraSkuString({libraryName:tj.MSAL_SKU,libraryVersion:r0,extensionName:u,extensionVersion:this.nativeMessageHandler.getExtensionVersion()})}addRequestSKUs(e){e.extraParameters={...e.extraParameters,"x-client-xtra-sku":this.skus}}async acquireToken(e){this.performanceClient.addQueueMeasurement(tY.NativeInteractionClientAcquireToken,e.correlationId),this.logger.trace("NativeInteractionClient - acquireToken called.");let t=this.performanceClient.startMeasurement(tY.NativeInteractionClientAcquireToken,e.correlationId),r=eK();try{let i=await this.initializeNativeRequest(e);try{let e=await this.acquireTokensFromCache(this.accountId,i);return t.end({success:!0,isNativeBroker:!1,fromCache:!0}),e}catch(e){this.logger.info("MSAL internal Cache does not contain tokens, proceed to make a native call")}let{...n}=i,o={method:tX.GetToken,request:n},a=await this.nativeMessageHandler.sendMessage(o),s=this.validateNativeResponse(a);return await this.handleNativeResponse(s,i,r).then(e=>(t.end({success:!0,isNativeBroker:!0,requestId:e.requestId}),this.serverTelemetryManager.clearNativeBrokerErrorCode(),e)).catch(e=>{throw t.end({success:!1,errorCode:e.errorCode,subErrorCode:e.subError,isNativeBroker:!0}),e})}catch(e){throw e instanceof nE&&this.serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode),e}}createSilentCacheRequest(e,t){return{authority:e.authority,correlationId:this.correlationId,scopes:tp.fromString(e.scope).asArray(),account:t,forceRefresh:!1}}async acquireTokensFromCache(e,t){if(!e)throw this.logger.warning("NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided"),eM(ep);let r=this.browserStorage.getBaseAccountInfo({nativeAccountId:e});if(!r)throw eM(ep);try{let e=this.createSilentCacheRequest(t,r),i=await this.silentCacheClient.acquireToken(e),n={...r,idTokenClaims:i?.idTokenClaims,idToken:i?.idToken};return{...i,account:n}}catch(e){throw e}}async acquireTokenRedirect(e,t){this.logger.trace("NativeInteractionClient - acquireTokenRedirect called.");let{...r}=e;delete r.onRedirectNavigate;let i=await this.initializeNativeRequest(r),n={method:tX.GetToken,request:i};try{let e=await this.nativeMessageHandler.sendMessage(n);this.validateNativeResponse(e)}catch(e){if(e instanceof nE&&(this.serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode),nR(e)))throw e}this.browserStorage.setTemporaryCache(t1.NATIVE_REQUEST,JSON.stringify(i),!0);let o={apiId:t3.acquireTokenRedirect,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},a=this.config.auth.navigateToLoginRequestUrl?window.location.href:this.getRedirectUri(e.redirectUri);t.end({success:!0}),await this.navigationClient.navigateExternal(a,o)}async handleRedirectPromise(e,t){if(this.logger.trace("NativeInteractionClient - handleRedirectPromise called."),!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;let r=this.browserStorage.getCachedNativeRequest();if(!r)return this.logger.verbose("NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null."),e&&t&&e?.addFields({errorCode:"no_cached_request"},t),null;let{prompt:i,...n}=r;i&&this.logger.verbose("NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window."),this.browserStorage.removeItem(this.browserStorage.generateCacheKey(t1.NATIVE_REQUEST));let o={method:tX.GetToken,request:n},a=eK();try{this.logger.verbose("NativeInteractionClient - handleRedirectPromise sending message to native broker.");let e=await this.nativeMessageHandler.sendMessage(o);this.validateNativeResponse(e);let t=this.handleNativeResponse(e,n,a);this.browserStorage.setInteractionInProgress(!1);let r=await t;return this.serverTelemetryManager.clearNativeBrokerErrorCode(),r}catch(e){throw this.browserStorage.setInteractionInProgress(!1),e}}logout(){return this.logger.trace("NativeInteractionClient - logout called."),Promise.reject("Logout not implemented yet")}async handleNativeResponse(e,t,r){this.logger.trace("NativeInteractionClient - handleNativeResponse called.");let i=eL(e.id_token,ii),n=this.createHomeAccountIdentifier(e,i);if(n!==this.browserStorage.getAccountInfoFilteredBy({nativeAccountId:t.accountId})?.homeAccountId&&e.account.id!==t.accountId)throw nS(nv);let o=await this.getDiscoveredAuthority(t.authority),a=nd(this.browserStorage,o,n,ii,i,e.client_info,void 0,i.tid,void 0,e.account.id,this.logger),s=await this.generateAuthenticationResult(e,t,i,a,o.canonicalAuthority,r);return this.cacheAccount(a),this.cacheNativeTokens(e,t,n,i,e.access_token,s.tenantId,r),s}createHomeAccountIdentifier(e,t){return tv.generateHomeAccountId(e.client_info||s.EMPTY_STRING,tI.Default,this.logger,this.browserCrypto,t)}generateScopes(e,t){return e.scope?tp.fromString(e.scope):tp.fromString(t.scope)}async generatePopAccessToken(e,t){if(t.tokenType!==R.POP||!t.signPopToken)return e.access_token;{if(e.shr)return this.logger.trace("handleNativeServerResponse: SHR is enabled in native layer"),e.shr;let r=new nc(this.browserCrypto),i={resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,shrNonce:t.shrNonce};if(!t.keyId)throw eM(eR);return r.signPopToken(e.access_token,t.keyId,i)}}async generateAuthenticationResult(e,t,r,i,n,o){let a=this.addTelemetryFromNativeResponse(e),c=e.scope?tp.fromString(e.scope):tp.fromString(t.scope),l=e.account.properties||{},h=l.UID||r.oid||r.sub||s.EMPTY_STRING,d=l.TenantId||r.tid||s.EMPTY_STRING,u=tT(i.getAccountInfo(),void 0,r,e.id_token);u.nativeAccountId!==e.account.id&&(u.nativeAccountId=e.account.id);let g=await this.generatePopAccessToken(e,t),p=t.tokenType===R.POP?R.POP:R.BEARER;return{authority:n,uniqueId:h,tenantId:d,scopes:c.asArray(),account:u,idToken:e.id_token,idTokenClaims:r,accessToken:g,fromCache:!!a&&this.isResponseFromCache(a),expiresOn:new Date(1e3*Number(o+e.expires_in)),tokenType:p,correlationId:this.correlationId,state:e.state,fromNativeBroker:!0}}cacheAccount(e){this.browserStorage.setAccount(e),this.browserStorage.removeAccountContext(e).catch(e=>{this.logger.error(`Error occurred while removing account context from browser storage. ${e}`)})}cacheNativeTokens(e,t,r,i,n,o,a){let c=eB(r,t.authority,e.id_token||"",t.clientId,i.tid||""),l=t.tokenType===R.POP?s.SHR_NONCE_VALIDITY:("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0,h=this.generateScopes(e,t),d=eG(r,t.authority,n,t.clientId,i.tid||o,h.printScopes(),a+l,0,ii,void 0,t.tokenType,void 0,t.keyId);this.nativeStorageManager.saveCacheRecord({idToken:c,accessToken:d},t.storeInCache)}addTelemetryFromNativeResponse(e){let t=this.getMATSFromResponse(e);return t?(this.performanceClient.addFields({extensionId:this.nativeMessageHandler.getExtensionId(),extensionVersion:this.nativeMessageHandler.getExtensionVersion(),matsBrokerVersion:t.broker_version,matsAccountJoinOnStart:t.account_join_on_start,matsAccountJoinOnEnd:t.account_join_on_end,matsDeviceJoin:t.device_join,matsPromptBehavior:t.prompt_behavior,matsApiErrorCode:t.api_error_code,matsUiVisible:t.ui_visible,matsSilentCode:t.silent_code,matsSilentBiSubCode:t.silent_bi_sub_code,matsSilentMessage:t.silent_message,matsSilentStatus:t.silent_status,matsHttpStatus:t.http_status,matsHttpEventCount:t.http_event_count},this.correlationId),t):null}validateNativeResponse(e){if(e.hasOwnProperty("access_token")&&e.hasOwnProperty("id_token")&&e.hasOwnProperty("client_info")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scope")&&e.hasOwnProperty("expires_in"))return e;throw F(H,"Response missing expected properties.")}getMATSFromResponse(e){if(e.properties.MATS)try{return JSON.parse(e.properties.MATS)}catch(e){this.logger.error("NativeInteractionClient - Error parsing MATS telemetry, returning null instead")}return null}isResponseFromCache(e){return void 0===e.is_cached?(this.logger.verbose("NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false."),!1):!!e.is_cached}async initializeNativeRequest(e){this.logger.trace("NativeInteractionClient - initializeNativeRequest called");let t=e.authority||this.config.auth.authority;e.account&&await this.getDiscoveredAuthority(t,e.azureCloudOptions,e.account);let r=new tR(t);r.validateAsUri();let{scopes:i,...n}=e,o=new tp(i||[]);o.appendScopes(l);let a={...n,accountId:this.accountId,clientId:this.config.auth.clientId,authority:r.urlString,scope:o.printScopes(),redirectUri:this.getRedirectUri(e.redirectUri),prompt:(()=>{switch(this.apiId){case t3.ssoSilent:case t3.acquireTokenSilent_silentFlow:return this.logger.trace("initializeNativeRequest: silent request sets prompt to none"),m.NONE}if(!e.prompt){this.logger.trace("initializeNativeRequest: prompt was not provided");return}switch(e.prompt){case m.NONE:case m.CONSENT:case m.LOGIN:return this.logger.trace("initializeNativeRequest: prompt is compatible with native flow"),e.prompt;default:throw this.logger.trace(`initializeNativeRequest: prompt = ${e.prompt} is not compatible with native flow`),rX(rz)}})(),correlationId:this.correlationId,tokenType:e.authenticationScheme,windowTitleSubstring:document.title,extraParameters:{...e.extraQueryParameters,...e.tokenQueryParameters},extendedExpiryToken:!1,keyId:e.popKid};if(a.signPopToken&&e.popKid)throw rX(rY);if(this.handleExtraBrokerParams(a),a.extraParameters=a.extraParameters||{},a.extraParameters.telemetry=tJ.MATS_TELEMETRY,e.authenticationScheme===R.POP){let t;let r={resourceRequestUri:e.resourceRequestUri,resourceRequestMethod:e.resourceRequestMethod,shrClaims:e.shrClaims,shrNonce:e.shrNonce},i=new nc(this.browserCrypto);if(a.keyId)t=this.browserCrypto.base64UrlEncode(JSON.stringify({kid:a.keyId})),a.signPopToken=!1;else{let n=await iS(i.generateCnf.bind(i),tY.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(r,this.logger);t=n.reqCnfString,a.keyId=n.kid,a.signPopToken=!0}a.reqCnf=t}return this.addRequestSKUs(a),a}handleExtraBrokerParams(e){if(e.extraParameters&&e.extraParameters.hasOwnProperty(nO.BROKER_CLIENT_ID)&&e.extraParameters.hasOwnProperty(nO.BROKER_REDIRECT_URI)&&e.extraParameters.hasOwnProperty(i7)){let t=e.extraParameters[i7],r=e.redirectUri,i=e.extraParameters[nO.BROKER_REDIRECT_URI];e.extraParameters={child_client_id:t,child_redirect_uri:r},e.redirectUri=i}}}/*! @azure/msal-browser v3.21.0 2024-08-13 */class nN{constructor(e,t,r,i){this.logger=e,this.handshakeTimeoutMs=t,this.extensionId=i,this.resolvers=new Map,this.handshakeResolvers=new Map,this.messageChannel=new MessageChannel,this.windowListener=this.onWindowMessage.bind(this),this.performanceClient=r,this.handshakeEvent=r.startMeasurement(tY.NativeMessageHandlerHandshake)}async sendMessage(e){this.logger.trace("NativeMessageHandler - sendMessage called.");let t={channel:tJ.CHANNEL_ID,extensionId:this.extensionId,responseId:ig(),body:e};return this.logger.trace("NativeMessageHandler - Sending request to browser extension"),this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(t)}`),this.messageChannel.port1.postMessage(t),new Promise((e,r)=>{this.resolvers.set(t.responseId,{resolve:e,reject:r})})}static async createProvider(e,t,r){e.trace("NativeMessageHandler - createProvider called.");try{let i=new nN(e,t,r,tJ.PREFERRED_EXTENSION_ID);return await i.sendHandshakeRequest(),i}catch(n){let i=new nN(e,t,r);return await i.sendHandshakeRequest(),i}}async sendHandshakeRequest(){this.logger.trace("NativeMessageHandler - sendHandshakeRequest called."),window.addEventListener("message",this.windowListener,!1);let e={channel:tJ.CHANNEL_ID,extensionId:this.extensionId,responseId:ig(),body:{method:tX.HandshakeRequest}};return this.handshakeEvent.add({extensionId:this.extensionId,extensionHandshakeTimeoutMs:this.handshakeTimeoutMs}),this.messageChannel.port1.onmessage=e=>{this.onChannelMessage(e)},window.postMessage(e,window.origin,[this.messageChannel.port2]),new Promise((t,r)=>{this.handshakeResolvers.set(e.responseId,{resolve:t,reject:r}),this.timeoutId=window.setTimeout(()=>{window.removeEventListener("message",this.windowListener,!1),this.messageChannel.port1.close(),this.messageChannel.port2.close(),this.handshakeEvent.end({extensionHandshakeTimedOut:!0,success:!1}),r(rX(rx)),this.handshakeResolvers.delete(e.responseId)},this.handshakeTimeoutMs)})}onWindowMessage(e){if(this.logger.trace("NativeMessageHandler - onWindowMessage called"),e.source!==window)return;let t=e.data;if(t.channel&&t.channel===tJ.CHANNEL_ID&&(!t.extensionId||t.extensionId===this.extensionId)&&t.body.method===tX.HandshakeRequest){let e=this.handshakeResolvers.get(t.responseId);if(!e){this.logger.trace(`NativeMessageHandler.onWindowMessage - resolver can't be found for request ${t.responseId}`);return}this.logger.verbose(t.extensionId?`Extension with id: ${t.extensionId} not installed`:"No extension installed"),clearTimeout(this.timeoutId),this.messageChannel.port1.close(),this.messageChannel.port2.close(),window.removeEventListener("message",this.windowListener,!1),this.handshakeEvent.end({success:!1,extensionInstalled:!1}),e.reject(rX(rB))}}onChannelMessage(e){this.logger.trace("NativeMessageHandler - onChannelMessage called.");let t=e.data,r=this.resolvers.get(t.responseId),i=this.handshakeResolvers.get(t.responseId);try{let e=t.body.method;if(e===tX.Response){if(!r)return;let e=t.body.response;if(this.logger.trace("NativeMessageHandler - Received response from browser extension"),this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(e)}`),"Success"!==e.status)r.reject(nS(e.code,e.description,e.ext));else if(e.result)e.result.code&&e.result.description?r.reject(nS(e.result.code,e.result.description,e.result.ext)):r.resolve(e.result);else throw F(H,"Event does not contain result.");this.resolvers.delete(t.responseId)}else if(e===tX.HandshakeResponse){if(!i){this.logger.trace(`NativeMessageHandler.onChannelMessage - resolver can't be found for request ${t.responseId}`);return}clearTimeout(this.timeoutId),window.removeEventListener("message",this.windowListener,!1),this.extensionId=t.extensionId,this.extensionVersion=t.body.version,this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`),this.handshakeEvent.end({extensionInstalled:!0,success:!0}),i.resolve(),this.handshakeResolvers.delete(t.responseId)}}catch(t){this.logger.error("Error parsing response from WAM Extension"),this.logger.errorPii(`Error parsing response from WAM Extension: ${t}`),this.logger.errorPii(`Unable to parse ${e}`),r?r.reject(t):i&&i.reject(t)}}getExtensionId(){return this.extensionId}getExtensionVersion(){return this.extensionVersion}static isNativeAvailable(e,t,r,i){if(t.trace("isNativeAvailable called"),!e.system.allowNativeBroker)return t.trace("isNativeAvailable: allowNativeBroker is not enabled, returning false"),!1;if(!r)return t.trace("isNativeAvailable: WAM extension provider is not initialized, returning false"),!1;if(i)switch(i){case R.BEARER:case R.POP:t.trace("isNativeAvailable: authenticationScheme is supported, returning true");break;default:return t.trace("isNativeAvailable: authenticationScheme is not supported, returning false"),!1}return!0}}/*! @azure/msal-browser v3.21.0 2024-08-13 */class nM{constructor(e,t,r,i,n){this.authModule=e,this.browserStorage=t,this.authCodeRequest=r,this.logger=i,this.performanceClient=n}async handleCodeResponse(e,t){let r;this.performanceClient.addQueueMeasurement(tY.HandleCodeResponse,t.correlationId);try{r=this.authModule.handleFragmentResponse(e,t.state)}catch(e){if(e instanceof i5&&e.subError===rg)throw rX(rg);throw e}return iS(this.handleCodeResponseFromServer.bind(this),tY.HandleCodeResponseFromServer,this.logger,this.performanceClient,t.correlationId)(r,t)}async handleCodeResponseFromServer(e,t,r=!0){if(this.performanceClient.addQueueMeasurement(tY.HandleCodeResponseFromServer,t.correlationId),this.logger.trace("InteractionHandler.handleCodeResponseFromServer called"),this.authCodeRequest.code=e.code,e.cloud_instance_host_name&&await iS(this.authModule.updateAuthority.bind(this.authModule),tY.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,t.correlationId)(e.cloud_instance_host_name,t.correlationId),r&&(e.nonce=t.nonce||void 0),e.state=t.state,e.client_info)this.authCodeRequest.clientInfo=e.client_info;else{let e=this.createCcsCredentials(t);e&&(this.authCodeRequest.ccsCredential=e)}return await iS(this.authModule.acquireToken.bind(this.authModule),tY.AuthClientAcquireToken,this.logger,this.performanceClient,t.correlationId)(this.authCodeRequest,e)}createCcsCredentials(e){return e.account?{credential:e.account.homeAccountId,type:ix.HOME_ACCOUNT_ID}:e.loginHint?{credential:e.loginHint,type:ix.UPN}:null}}/*! @azure/msal-browser v3.21.0 2024-08-13 */function nq(e,t,r){let i=tE(e);if(!i){if(tw(e))throw r.error(`A ${t} is present in the iframe but it does not contain known properties. It's likely that the ${t} has been replaced by code running on the redirectUri page.`),r.errorPii(`The ${t} detected is: ${e}`),rX(rs);throw r.error(`The request has returned to the redirectUri but a ${t} is not present. It's likely that the ${t} has been removed or the page has been redirected by code running on the redirectUri page.`),rX(ro)}return i}/*! @azure/msal-browser v3.21.0 2024-08-13 */class nU extends nA{constructor(e,t,r,i,n,o,a,s,c,l){super(e,t,r,i,n,o,a,c,l),this.unloadWindow=this.unloadWindow.bind(this),this.nativeStorage=s}acquireToken(e){try{let t=this.generatePopupName(e.scopes||l,e.authority||this.config.auth.authority),r=e.popupWindowAttributes||{};if(this.config.system.asyncPopups)return this.logger.verbose("asyncPopups set to true, acquiring token"),this.acquireTokenPopupAsync(e,t,r);{this.logger.verbose("asyncPopup set to false, opening popup before acquiring token");let i=this.openSizedPopup("about:blank",t,r);return this.acquireTokenPopupAsync(e,t,r,i)}}catch(e){return Promise.reject(e)}}logout(e){try{this.logger.verbose("logoutPopup called");let t=this.initializeLogoutRequest(e),r=this.generateLogoutPopupName(t),i=e&&e.authority,n=e&&e.mainWindowRedirectUri,o=e?.popupWindowAttributes||{};if(this.config.system.asyncPopups)return this.logger.verbose("asyncPopups set to true"),this.logoutPopupAsync(t,r,o,i,void 0,n);{this.logger.verbose("asyncPopup set to false, opening popup");let e=this.openSizedPopup("about:blank",r,o);return this.logoutPopupAsync(t,r,o,i,e,n)}}catch(e){return Promise.reject(e)}}async acquireTokenPopupAsync(e,t,r,i){let o;this.logger.verbose("acquireTokenPopupAsync called");let a=this.initializeServerTelemetryManager(t3.acquireTokenPopup),s=await iS(this.initializeAuthorizationRequest.bind(this),tY.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,n.Popup);i4(s.authority);try{let n=await iS(this.initializeAuthorizationCodeRequest.bind(this),tY.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(s);return o=await iS(this.createAuthCodeClient.bind(this),tY.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)(a,s.authority,s.azureCloudOptions,s.account),await iS(this.acquireTokenPopupAsyncHelper.bind(this),tY.PopupClientTokenHelper,this.logger,this.performanceClient,this.correlationId)(o,n,s,e,t,r,i)}catch(c){if(i&&i.close(),c instanceof K&&(c.setCorrelationId(this.correlationId),a.cacheFailedRequest(c)),!o||!(c instanceof i5)||c.errorCode!==tj.INVALID_GRANT_ERROR)throw c;this.performanceClient.addFields({retryError:c.errorCode},this.correlationId);let n=await iS(this.initializeAuthorizationCodeRequest.bind(this),tY.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(s);return await iS(this.acquireTokenPopupAsyncHelper.bind(this),tY.PopupClientTokenHelper,this.logger,this.performanceClient,this.correlationId)(o,n,s,e,t,r,i)}}async acquireTokenPopupAsyncHelper(e,t,r,i,o,a,s){let c;let l=r.correlationId;this.performanceClient.addQueueMeasurement(tY.PopupClientTokenHelper,l);let h=nN.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,i.authenticationScheme);h&&(c=this.performanceClient.startMeasurement(tY.FetchAccountIdWithNativeBroker,i.correlationId));let d=await e.getAuthCodeUrl({...r,nativeBroker:h}),u=new nM(e,this.browserStorage,t,this.logger,this.performanceClient),g=this.initiateAuthRequest(d,{popup:s,popupName:o,popupWindowAttributes:a});this.eventHandler.emitEvent(i6.POPUP_OPENED,n.Popup,{popupWindow:g},null);let p=await this.monitorPopupForHash(g),m=iR(nq,tY.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(p,this.config.auth.OIDCOptions.serverResponseType,this.logger);if(i8.removeThrottle(this.browserStorage,this.config.auth.clientId,t),m.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),c&&c.end({success:!0,isNativeBroker:!0}),!this.nativeMessageHandler)throw rX(rG);let e=new nP(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t3.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,m.accountId,this.nativeStorage,r.correlationId),{userRequestState:t}=iF.parseRequestState(this.browserCrypto,r.state);return e.acquireToken({...r,state:t,prompt:void 0})}return await u.handleCodeResponse(m,r)}async logoutPopupAsync(e,t,r,i,o,a){this.logger.verbose("logoutPopupAsync called"),this.eventHandler.emitEvent(i6.LOGOUT_START,n.Popup,e);let s=this.initializeServerTelemetryManager(t3.logoutPopup);try{await this.clearCacheOnLogout(e.account);let c=await iS(this.createAuthCodeClient.bind(this),tY.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)(s,i,void 0,e.account||void 0);try{c.authority.endSessionEndpoint}catch{if(e.account?.homeAccountId&&e.postLogoutRedirectUri&&c.authority.protocolMode===q.OIDC){if(this.browserStorage.removeAccount(e.account?.homeAccountId),this.eventHandler.emitEvent(i6.LOGOUT_SUCCESS,n.Popup,e),a){let e={apiId:t3.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=tR.getAbsoluteUrl(a,iZ());await this.navigationClient.navigateInternal(t,e)}o&&o.close();return}}let l=c.getLogoutUri(e);this.eventHandler.emitEvent(i6.LOGOUT_SUCCESS,n.Popup,e);let h=this.openPopup(l,{popupName:t,popupWindowAttributes:r,popup:o});if(this.eventHandler.emitEvent(i6.POPUP_OPENED,n.Popup,{popupWindow:h},null),await this.monitorPopupForHash(h).catch(()=>{}),a){let e={apiId:t3.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=tR.getAbsoluteUrl(a,iZ());this.logger.verbose("Redirecting main window to url specified in the request"),this.logger.verbosePii(`Redirecting main window to: ${t}`),await this.navigationClient.navigateInternal(t,e)}else this.logger.verbose("No main window navigation requested")}catch(e){throw o&&o.close(),e instanceof K&&(e.setCorrelationId(this.correlationId),s.cacheFailedRequest(e)),this.browserStorage.setInteractionInProgress(!1),this.eventHandler.emitEvent(i6.LOGOUT_FAILURE,n.Popup,null,e),this.eventHandler.emitEvent(i6.LOGOUT_END,n.Popup),e}this.eventHandler.emitEvent(i6.LOGOUT_END,n.Popup)}initiateAuthRequest(e,t){if(e)return this.logger.infoPii(`Navigate to: ${e}`),this.openPopup(e,t);throw this.logger.error("Navigate url is empty"),rX(rn)}monitorPopupForHash(e){return new Promise((t,r)=>{this.logger.verbose("PopupHandler.monitorPopupForHash - polling started");let i=setInterval(()=>{if(e.closed){this.logger.error("PopupHandler.monitorPopupForHash - window closed"),clearInterval(i),r(rX(rg));return}let n="";try{n=e.location.href}catch(e){}if(!n||"about:blank"===n)return;clearInterval(i);let o="",a=this.config.auth.OIDCOptions.serverResponseType;e&&(o=a===C.QUERY?e.location.search:e.location.hash),this.logger.verbose("PopupHandler.monitorPopupForHash - popup window is on same origin as caller"),t(o)},this.config.system.pollIntervalMilliseconds)}).finally(()=>{this.cleanPopup(e)})}openPopup(e,t){try{let r;if(t.popup?(r=t.popup,this.logger.verbosePii(`Navigating popup window to: ${e}`),r.location.assign(e)):void 0===t.popup&&(this.logger.verbosePii(`Opening popup window to: ${e}`),r=this.openSizedPopup(e,t.popupName,t.popupWindowAttributes)),!r)throw rX(ru);return r.focus&&r.focus(),this.currentWindow=r,window.addEventListener("beforeunload",this.unloadWindow),r}catch(e){throw this.logger.error("error opening popup "+e.message),this.browserStorage.setInteractionInProgress(!1),rX(rd)}}openSizedPopup(e,t,r){let i=window.screenLeft?window.screenLeft:window.screenX,n=window.screenTop?window.screenTop:window.screenY,o=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,a=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,s=r.popupSize?.width,c=r.popupSize?.height,l=r.popupPosition?.top,h=r.popupPosition?.left;return(!s||s<0||s>o)&&(this.logger.verbose("Default popup window width used. Window width not configured or invalid."),s=tj.POPUP_WIDTH),(!c||c<0||c>a)&&(this.logger.verbose("Default popup window height used. Window height not configured or invalid."),c=tj.POPUP_HEIGHT),(!l||l<0||l>a)&&(this.logger.verbose("Default popup window top position used. Window top not configured or invalid."),l=Math.max(0,a/2-tj.POPUP_HEIGHT/2+n)),(!h||h<0||h>o)&&(this.logger.verbose("Default popup window left position used. Window left not configured or invalid."),h=Math.max(0,o/2-tj.POPUP_WIDTH/2+i)),window.open(e,t,`width=${s}, height=${c}, top=${l}, left=${h}, scrollbars=yes`)}unloadWindow(e){this.browserStorage.cleanRequestByInteractionType(n.Popup),this.currentWindow&&this.currentWindow.close(),e.preventDefault()}cleanPopup(e){e&&e.close(),window.removeEventListener("beforeunload",this.unloadWindow),this.browserStorage.setInteractionInProgress(!1)}generatePopupName(e,t){return`${tj.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${e.join("-")}.${t}.${this.correlationId}`}generateLogoutPopupName(e){let t=e.account&&e.account.homeAccountId;return`${tj.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${t}.${this.correlationId}`}}/*! @azure/msal-browser v3.21.0 2024-08-13 */class nH{constructor(e,t,r,i,n){this.authModule=e,this.browserStorage=t,this.authCodeRequest=r,this.logger=i,this.performanceClient=n}async initiateAuthRequest(e,t){if(this.logger.verbose("RedirectHandler.initiateAuthRequest called"),e){t.redirectStartPage&&(this.logger.verbose("RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page"),this.browserStorage.setTemporaryCache(t1.ORIGIN_URI,t.redirectStartPage,!0)),this.browserStorage.setTemporaryCache(t1.CORRELATION_ID,this.authCodeRequest.correlationId,!0),this.browserStorage.cacheCodeRequest(this.authCodeRequest),this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${e}`);let r={apiId:t3.acquireTokenRedirect,timeout:t.redirectTimeout,noHistory:!1};if("function"==typeof t.onRedirectNavigate){if(this.logger.verbose("RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback"),!1!==t.onRedirectNavigate(e)){this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating"),await t.navigationClient.navigateExternal(e,r);return}this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation");return}this.logger.verbose("RedirectHandler.initiateAuthRequest: Navigating window to navigate url"),await t.navigationClient.navigateExternal(e,r);return}throw this.logger.info("RedirectHandler.initiateAuthRequest: Navigate url is empty"),rX(rn)}async handleCodeResponse(e,t){let r;this.logger.verbose("RedirectHandler.handleCodeResponse called"),this.browserStorage.setInteractionInProgress(!1);let i=this.browserStorage.generateStateKey(t),n=this.browserStorage.getTemporaryCache(i);if(!n)throw eM(J,"Cached State");try{r=this.authModule.handleFragmentResponse(e,n)}catch(e){if(e instanceof i5&&e.subError===rg)throw rX(rg);throw e}let o=this.browserStorage.generateNonceKey(n),a=this.browserStorage.getTemporaryCache(o);if(this.authCodeRequest.code=r.code,r.cloud_instance_host_name&&await iS(this.authModule.updateAuthority.bind(this.authModule),tY.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,this.authCodeRequest.correlationId)(r.cloud_instance_host_name,this.authCodeRequest.correlationId),r.nonce=a||void 0,r.state=n,r.client_info)this.authCodeRequest.clientInfo=r.client_info;else{let e=this.checkCcsCredentials();e&&(this.authCodeRequest.ccsCredential=e)}let s=await this.authModule.acquireToken(this.authCodeRequest,r);return this.browserStorage.cleanRequestByState(t),this.browserStorage.removeRequestRetried(),s}checkCcsCredentials(){let e=this.browserStorage.getTemporaryCache(t1.CCS_CREDENTIAL,!0);if(e)try{return JSON.parse(e)}catch(t){this.authModule.logger.error("Cache credential could not be parsed"),this.authModule.logger.errorPii(`Cache credential could not be parsed: ${e}`)}return null}}/*! @azure/msal-browser v3.21.0 2024-08-13 */class nL extends nA{constructor(e,t,r,i,n,o,a,s,c,l){super(e,t,r,i,n,o,a,c,l),this.nativeStorage=s}async acquireToken(e){e.onRedirectNavigate?this.logger.warning("Unable to cache redirect request, onRedirectNavigate request option has been deprecated. Please set onRedirectNavigate on PublicClientApplication config instead."):this.browserStorage.cacheRedirectRequest(e);let t=await iS(this.initializeAuthorizationRequest.bind(this),tY.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,n.Redirect);this.browserStorage.updateCacheEntries(t.state,t.nonce,t.authority,t.loginHint||"",t.account||null);let r=this.initializeServerTelemetryManager(t3.acquireTokenRedirect),i=e=>{e.persisted&&(this.logger.verbose("Page was restored from back/forward cache. Clearing temporary cache."),this.browserStorage.cleanRequestByState(t.state),this.eventHandler.emitEvent(i6.RESTORE_FROM_BFCACHE,n.Redirect))};try{let n=await iS(this.initializeAuthorizationCodeRequest.bind(this),tY.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(t),o=await iS(this.createAuthCodeClient.bind(this),tY.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)(r,t.authority,t.azureCloudOptions,t.account),a=new nH(o,this.browserStorage,n,this.logger,this.performanceClient),s=await o.getAuthCodeUrl({...t,nativeBroker:nN.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme)}),c=this.getRedirectStartPage(e.redirectStartPage);return this.logger.verbosePii(`Redirect start page: ${c}`),window.addEventListener("pageshow",i),await a.initiateAuthRequest(s,{navigationClient:this.navigationClient,redirectTimeout:this.config.system.redirectNavigationTimeout,redirectStartPage:c,onRedirectNavigate:e.onRedirectNavigate||this.config.auth.onRedirectNavigate})}catch(e){throw e instanceof K&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),window.removeEventListener("pageshow",i),this.browserStorage.cleanRequestByState(t.state),e}}async handleRedirectPromise(e="",t){let r=this.initializeServerTelemetryManager(t3.handleRedirectPromise);try{if(!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;let[i,o]=this.getRedirectResponse(e||"");if(!i)return this.logger.info("handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache."),this.browserStorage.cleanRequestByInteractionType(n.Redirect),t.event.errorCode="no_server_response",null;let a=this.browserStorage.getTemporaryCache(t1.ORIGIN_URI,!0)||s.EMPTY_STRING,c=tR.removeHashFromUrl(a),l=tR.removeHashFromUrl(window.location.href);if(c===l&&this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("Current page is loginRequestUrl, handling response"),a.indexOf("#")>-1&&function(e){let t=e.split("#");t.shift(),window.location.hash=t.length>0?t.join("#"):""}(a),await this.handleResponse(i,r);if(!this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("NavigateToLoginRequestUrl set to false, handling response"),await this.handleResponse(i,r);if(!iX()||this.config.system.allowRedirectInIframe){this.browserStorage.setTemporaryCache(t1.URL_HASH,o,!0);let e={apiId:t3.handleRedirectPromise,timeout:this.config.system.redirectNavigationTimeout,noHistory:!0},t=!0;if(a&&"null"!==a)this.logger.verbose(`Navigating to loginRequestUrl: ${a}`),t=await this.navigationClient.navigateInternal(a,e);else{let r=function(){let e=new tR(window.location.href).getUrlComponents();return`${e.Protocol}//${e.HostNameAndPort}/`}();this.browserStorage.setTemporaryCache(t1.ORIGIN_URI,r,!0),this.logger.warning("Unable to get valid login request url from cache, redirecting to home page"),t=await this.navigationClient.navigateInternal(r,e)}if(!t)return await this.handleResponse(i,r)}return null}catch(e){if(e instanceof K&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),e instanceof i5&&e.errorCode===tj.INVALID_GRANT_ERROR){if(this.performanceClient.addFields({retryError:e.errorCode},this.correlationId),this.browserStorage.getRequestRetried())throw this.logger.error("Retried request already detected. Throwing error."),this.browserStorage.removeRequestRetried(),e;let t=this.browserStorage.getCachedRedirectRequest();if(!t)throw this.logger.error("Unable to retry. Please retry with redirect request"),this.browserStorage.setRequestRetried(),rX(rV);return this.browserStorage.setRequestRetried(),await this.acquireToken(t),null}throw this.browserStorage.removeTemporaryItem(this.browserStorage.generateCacheKey(t1.REDIRECT_REQUEST)),this.browserStorage.removeRequestRetried(),e}finally{this.browserStorage.cleanRequestByInteractionType(n.Redirect)}}getRedirectResponse(e){this.logger.verbose("getRedirectResponseHash called");let t=e;t||(t=this.config.auth.OIDCOptions.serverResponseType===C.QUERY?window.location.search:window.location.hash);let r=tE(t);if(r){var i;try{!function(e,t,r){if(!e.state)throw rX(ra);let i=iW(t,e.state);if(!i)throw rX(rc);if(i.interactionType!==r)throw rX(rl)}(r,this.browserCrypto,n.Redirect)}catch(e){return e instanceof K&&this.logger.error(`Interaction type validation failed due to ${e.errorCode}: ${e.errorMessage}`),[null,""]}return(i=window).location.hash="","function"==typeof i.history.replaceState&&i.history.replaceState(null,"",`${i.location.origin}${i.location.pathname}${i.location.search}`),this.logger.verbose("Hash contains known properties, returning response hash"),[r,t]}let o=this.browserStorage.getTemporaryCache(t1.URL_HASH,!0);return(this.browserStorage.removeItem(this.browserStorage.generateCacheKey(t1.URL_HASH)),o&&(r=tE(o)))?(this.logger.verbose("Hash does not contain known properties, returning cached hash"),[r,o]):[null,""]}async handleResponse(e,t){let r=e.state;if(!r)throw rX(ra);let i=this.browserStorage.getCachedRequest(r);if(this.logger.verbose("handleResponse called, retrieved cached request"),e.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw rX(rG);let t=new nP(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t3.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,e.accountId,this.nativeStorage,i.correlationId),{userRequestState:n}=iF.parseRequestState(this.browserCrypto,r);return t.acquireToken({...i,state:n,prompt:void 0}).finally(()=>{this.browserStorage.cleanRequestByState(r)})}let n=this.browserStorage.getCachedAuthority(r);if(!n)throw rX(rR);let o=await iS(this.createAuthCodeClient.bind(this),tY.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)(t,n);return i8.removeThrottle(this.browserStorage,this.config.auth.clientId,i),new nH(o,this.browserStorage,i,this.logger,this.performanceClient).handleCodeResponse(e,r)}async logout(e){this.logger.verbose("logoutRedirect called");let t=this.initializeLogoutRequest(e),r=this.initializeServerTelemetryManager(t3.logout);try{this.eventHandler.emitEvent(i6.LOGOUT_START,n.Redirect,e),await this.clearCacheOnLogout(t.account);let i={apiId:t3.logout,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},o=await iS(this.createAuthCodeClient.bind(this),tY.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)(r,e&&e.authority,void 0,e&&e.account||void 0);if(o.authority.protocolMode===q.OIDC)try{o.authority.endSessionEndpoint}catch{if(t.account?.homeAccountId){this.browserStorage.removeAccount(t.account?.homeAccountId),this.eventHandler.emitEvent(i6.LOGOUT_SUCCESS,n.Redirect,t);return}}let a=o.getLogoutUri(t);if(this.eventHandler.emitEvent(i6.LOGOUT_SUCCESS,n.Redirect,t),e&&"function"==typeof e.onRedirectNavigate){let t=e.onRedirectNavigate(a);if(!1!==t){this.logger.verbose("Logout onRedirectNavigate did not return false, navigating"),this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),await this.navigationClient.navigateExternal(a,i);return}this.browserStorage.setInteractionInProgress(!1),this.logger.verbose("Logout onRedirectNavigate returned false, stopping navigation")}else{this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),await this.navigationClient.navigateExternal(a,i);return}}catch(e){throw e instanceof K&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),this.eventHandler.emitEvent(i6.LOGOUT_FAILURE,n.Redirect,null,e),this.eventHandler.emitEvent(i6.LOGOUT_END,n.Redirect),e}this.eventHandler.emitEvent(i6.LOGOUT_END,n.Redirect)}getRedirectStartPage(e){let t=e||window.location.href;return tR.getAbsoluteUrl(t,iZ())}}/*! @azure/msal-browser v3.21.0 2024-08-13 */async function nD(e,t,r,i,n){if(t.addQueueMeasurement(tY.SilentHandlerInitiateAuthRequest,i),!e)throw r.info("Navigate url is empty"),rX(rn);return n?iS(nF,tY.SilentHandlerLoadFrame,r,t,i)(e,n,t,i):iR(nx,tY.SilentHandlerLoadFrameSync,r,t,i)(e)}async function nK(e,t,r,i,n,o,a){return i.addQueueMeasurement(tY.SilentHandlerMonitorIframeForHash,o),new Promise((i,o)=>{t<1e4&&n.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${t}ms) than the default (10000ms). This may result in timeouts.`);let s=window.setTimeout(()=>{window.clearInterval(c),o(rX(rm))},t),c=window.setInterval(()=>{let t="",r=e.contentWindow;try{t=r?r.location.href:""}catch(e){}if(!t||"about:blank"===t)return;let n="";r&&(n=a===C.QUERY?r.location.search:r.location.hash),window.clearTimeout(s),window.clearInterval(c),i(n)},r)}).finally(()=>{iR(nG,tY.RemoveHiddenIframe,n,i,o)(e)})}function nF(e,t,r,i){return r.addQueueMeasurement(tY.SilentHandlerLoadFrame,i),new Promise((r,i)=>{let n=nB();window.setTimeout(()=>{if(!n){i("Unable to load iframe");return}n.src=e,r(n)},t)})}function nx(e){let t=nB();return t.src=e,t}function nB(){let e=document.createElement("iframe");return e.className="msalSilentIframe",e.style.visibility="hidden",e.style.position="absolute",e.style.width=e.style.height="0",e.style.border="0",e.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),document.body.appendChild(e),e}function nG(e){document.body===e.parentNode&&document.body.removeChild(e)}/*! @azure/msal-browser v3.21.0 2024-08-13 */class n$ extends nA{constructor(e,t,r,i,n,o,a,s,c,l,h){super(e,t,r,i,n,o,s,l,h),this.apiId=a,this.nativeStorage=c}async acquireToken(e){let t;this.performanceClient.addQueueMeasurement(tY.SilentIframeClientAcquireToken,e.correlationId),e.loginHint||e.sid||e.account&&e.account.username||this.logger.warning("No user hint provided. The authorization server may need more information to complete this request.");let r={...e};r.prompt?r.prompt!==m.NONE&&r.prompt!==m.NO_SESSION&&(this.logger.warning(`SilentIframeClient. Replacing invalid prompt ${r.prompt} with ${m.NONE}`),r.prompt=m.NONE):r.prompt=m.NONE;let i=await iS(this.initializeAuthorizationRequest.bind(this),tY.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(r,n.Silent);i4(i.authority);let o=this.initializeServerTelemetryManager(this.apiId);try{return t=await iS(this.createAuthCodeClient.bind(this),tY.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,e.correlationId)(o,i.authority,i.azureCloudOptions,i.account),await iS(this.silentTokenHelper.bind(this),tY.SilentIframeClientTokenHelper,this.logger,this.performanceClient,e.correlationId)(t,i)}catch(a){if(a instanceof K&&(a.setCorrelationId(this.correlationId),o.cacheFailedRequest(a)),!t||!(a instanceof i5)||a.errorCode!==tj.INVALID_GRANT_ERROR)throw a;this.performanceClient.addFields({retryError:a.errorCode},this.correlationId);let i=await iS(this.initializeAuthorizationRequest.bind(this),tY.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(r,n.Silent);return await iS(this.silentTokenHelper.bind(this),tY.SilentIframeClientTokenHelper,this.logger,this.performanceClient,this.correlationId)(t,i)}}logout(){return Promise.reject(rX(rI))}async silentTokenHelper(e,t){let r=t.correlationId;this.performanceClient.addQueueMeasurement(tY.SilentIframeClientTokenHelper,r);let i=await iS(this.initializeAuthorizationCodeRequest.bind(this),tY.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,r)(t),n=await iS(e.getAuthCodeUrl.bind(e),tY.GetAuthCodeUrl,this.logger,this.performanceClient,r)({...t,nativeBroker:nN.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,t.authenticationScheme)}),o=new nM(e,this.browserStorage,i,this.logger,this.performanceClient),a=await iS(nD,tY.SilentHandlerInitiateAuthRequest,this.logger,this.performanceClient,r)(n,this.performanceClient,this.logger,r,this.config.system.navigateFrameWait),s=this.config.auth.OIDCOptions.serverResponseType,c=await iS(nK,tY.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,r)(a,this.config.system.iframeHashTimeout,this.config.system.pollIntervalMilliseconds,this.performanceClient,this.logger,r,s),l=iR(nq,tY.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(c,s,this.logger);if(l.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw rX(rG);let e=new nP(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.apiId,this.performanceClient,this.nativeMessageHandler,l.accountId,this.browserStorage,r),{userRequestState:i}=iF.parseRequestState(this.browserCrypto,t.state);return iS(e.acquireToken.bind(e),tY.NativeInteractionClientAcquireToken,this.logger,this.performanceClient,r)({...t,state:i,prompt:t.prompt||m.NONE})}return iS(o.handleCodeResponse.bind(o),tY.HandleCodeResponse,this.logger,this.performanceClient,r)(l,t)}}/*! @azure/msal-browser v3.21.0 2024-08-13 */class nz extends nA{async acquireToken(e){this.performanceClient.addQueueMeasurement(tY.SilentRefreshClientAcquireToken,e.correlationId);let t=await iS(nT,tY.InitializeBaseRequest,this.logger,this.performanceClient,e.correlationId)(e,this.config,this.performanceClient,this.logger),r={...e,...t};e.redirectUri&&(r.redirectUri=this.getRedirectUri(e.redirectUri));let i=this.initializeServerTelemetryManager(t3.acquireTokenSilent_silentFlow),n=await this.createRefreshTokenClient(i,r.authority,r.azureCloudOptions,r.account);return iS(n.acquireTokenByRefreshToken.bind(n),tY.RefreshTokenClientAcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(r).catch(e=>{throw e.setCorrelationId(this.correlationId),i.cacheFailedRequest(e),e})}logout(){return Promise.reject(rX(rI))}async createRefreshTokenClient(e,t,r,i){return new nk(await iS(this.getClientConfiguration.bind(this),tY.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e,t,r,i),this.performanceClient)}}/*! @azure/msal-browser v3.21.0 2024-08-13 */class nQ{constructor(e,t,r,i){this.isBrowserEnvironment="undefined"!=typeof window,this.config=e,this.storage=t,this.logger=r,this.cryptoObj=i}loadExternalTokens(e,t,r){if(!this.isBrowserEnvironment)throw rX(r_);let i=t.id_token?eL(t.id_token,ii):void 0,n={protocolMode:this.config.auth.protocolMode,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},o=e.authority?new i_(i_.generateAuthority(e.authority,e.azureCloudOptions),this.config.system.networkClient,this.storage,n,this.logger,e.correlationId||ig()):void 0,a=this.loadAccount(e,r.clientInfo||t.client_info||"",i,o),s=this.loadIdToken(t,a.homeAccountId,a.environment,a.realm),c=this.loadAccessToken(e,t,a.homeAccountId,a.environment,a.realm,r),l=this.loadRefreshToken(t,a.homeAccountId,a.environment);return this.generateAuthenticationResult(e,{account:a,idToken:s,accessToken:c,refreshToken:l},i,o)}loadAccount(e,t,r,i){if(this.logger.verbose("TokenCache - loading account"),e.account){let t=tv.createFromAccountInfo(e.account);return this.storage.setAccount(t),t}if(!i||!t&&!r)throw this.logger.error("TokenCache - if an account is not provided on the request, authority and either clientInfo or idToken must be provided instead."),rX(rq);let n=tv.generateHomeAccountId(t,i.authorityType,this.logger,this.cryptoObj,r),o=r?.tid,a=nd(this.storage,i,n,ii,r,t,i.hostnameAndPort,o,void 0,void 0,this.logger);return this.storage.setAccount(a),a}loadIdToken(e,t,r,i){if(!e.id_token)return this.logger.verbose("TokenCache - no id token found in response"),null;this.logger.verbose("TokenCache - loading id token");let n=eB(t,r,e.id_token,this.config.auth.clientId,i);return this.storage.setIdTokenCredential(n),n}loadAccessToken(e,t,r,i,n,o){if(!t.access_token)return this.logger.verbose("TokenCache - no access token found in response"),null;if(!t.expires_in)return this.logger.error("TokenCache - no expiration set on the access token. Cannot add it to the cache."),null;if(!t.scope&&(!e.scopes||!e.scopes.length))return this.logger.error("TokenCache - scopes not specified in the request or response. Cannot add token to the cache."),null;this.logger.verbose("TokenCache - loading access token");let a=t.scope?tp.fromString(t.scope):new tp(e.scopes),s=o.expiresOn||t.expires_in+new Date().getTime()/1e3,c=o.extendedExpiresOn||(t.ext_expires_in||t.expires_in)+new Date().getTime()/1e3,l=eG(r,i,t.access_token,this.config.auth.clientId,n,a.printScopes(),s,c,ii);return this.storage.setAccessTokenCredential(l),l}loadRefreshToken(e,t,r){if(!e.refresh_token)return this.logger.verbose("TokenCache - no refresh token found in response"),null;this.logger.verbose("TokenCache - loading refresh token");let i=e$(t,r,e.refresh_token,this.config.auth.clientId,e.foci,void 0,e.refresh_token_expires_in);return this.storage.setRefreshTokenCredential(i),i}generateAuthenticationResult(e,t,r,i){let n,o="",a=[],s=null;t?.accessToken&&(o=t.accessToken.secret,a=tp.fromString(t.accessToken.target).asArray(),s=new Date(1e3*Number(t.accessToken.expiresOn)),n=new Date(1e3*Number(t.accessToken.extendedExpiresOn)));let c=t.account;return{authority:i?i.canonicalAuthority:"",uniqueId:t.account.localAccountId,tenantId:t.account.realm,scopes:a,account:c.getAccountInfo(),idToken:t.idToken?.secret||"",idTokenClaims:r||{},accessToken:o,fromCache:!0,expiresOn:s,correlationId:e.correlationId||"",requestId:"",extExpiresOn:n,familyId:t.refreshToken?.familyId||"",tokenType:t?.accessToken?.tokenType||"",state:e.state||"",cloudGraphHostName:c.cloudGraphHostName||"",msGraphHost:c.msGraphHost||"",fromNativeBroker:!1}}}/*! @azure/msal-browser v3.21.0 2024-08-13 */class nY extends ng{constructor(e){super(e),this.includeRedirectUri=!1}}/*! @azure/msal-browser v3.21.0 2024-08-13 */class nV extends nA{constructor(e,t,r,i,n,o,a,s,c,l){super(e,t,r,i,n,o,s,c,l),this.apiId=a}async acquireToken(e){if(!e.code)throw rX(rH);let t=await iS(this.initializeAuthorizationRequest.bind(this),tY.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(e,n.Silent),r=this.initializeServerTelemetryManager(this.apiId);try{let i={...t,code:e.code},n=await iS(this.getClientConfiguration.bind(this),tY.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,e.correlationId)(r,t.authority,t.azureCloudOptions,t.account),o=new nY(n);this.logger.verbose("Auth code client created");let a=new nM(o,this.browserStorage,i,this.logger,this.performanceClient);return await iS(a.handleCodeResponseFromServer.bind(a),tY.HandleCodeResponseFromServer,this.logger,this.performanceClient,e.correlationId)({code:e.code,msgraph_host:e.msGraphHost,cloud_graph_host_name:e.cloudGraphHostName,cloud_instance_host_name:e.cloudInstanceHostName},t,!1)}catch(e){throw e instanceof K&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),e}}logout(){return Promise.reject(rX(rI))}}/*! @azure/msal-browser v3.21.0 2024-08-13 */function nW(e){let t=e?.idTokenClaims;return t?.tfp||t?.acr?"B2C":t?.tid?t?.tid==="9188040d-6c67-4c5b-b112-36a304b66dad"?"MSA":"AAD":void 0}function nj(e,t){try{i1(e)}catch(e){throw t.end({success:!1},e),e}}class nJ{constructor(e){this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.initialized=!1,this.logger=this.operatingContext.getLogger(),this.networkClient=this.config.system.networkClient,this.navigationClient=this.config.system.navigationClient,this.redirectResponse=new Map,this.hybridAuthCodeResponses=new Map,this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new iw(this.logger,this.performanceClient):eq,this.eventHandler=new i3(this.logger,this.browserCrypto),this.browserStorage=this.isBrowserEnvironment?new ij(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,function(e){let t;let r=e.cloudDiscoveryMetadata;if(r)try{t=JSON.parse(r)}catch(e){throw tu(te)}return{canonicalAuthority:e.authority?ib(e.authority):void 0,knownAuthorities:e.knownAuthorities,cloudDiscoveryMetadata:t}}(this.config.auth),this.performanceClient):iJ(this.config.auth.clientId,this.logger);let t={cacheLocation:tZ.MemoryStorage,temporaryCacheLocation:tZ.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};this.nativeInternalStorage=new ij(this.config.auth.clientId,t,this.browserCrypto,this.logger,void 0,this.performanceClient),this.tokenCache=new nQ(this.config,this.browserStorage,this.logger,this.browserCrypto),this.activeSilentTokenRequests=new Map,this.trackPageVisibility=this.trackPageVisibility.bind(this),this.trackPageVisibilityWithMeasurement=this.trackPageVisibilityWithMeasurement.bind(this)}static async createController(e,t){let r=new nJ(e);return await r.initialize(t),r}trackPageVisibility(e){e&&(this.logger.info("Perf: Visibility change detected"),this.performanceClient.incrementFields({visibilityChangeCount:1},e))}async initialize(e){if(this.logger.trace("initialize called"),this.initialized){this.logger.info("initialize has already been called, exiting early.");return}let t=e?.correlationId||this.getRequestCorrelationId(),r=this.config.system.allowNativeBroker,i=this.performanceClient.startMeasurement(tY.InitializeClientApplication,t);if(this.eventHandler.emitEvent(i6.INITIALIZE_START),r)try{this.nativeExtensionProvider=await nN.createProvider(this.logger,this.config.system.nativeBrokerHandshakeTimeout,this.performanceClient)}catch(e){this.logger.verbose(e)}this.config.cache.claimsBasedCachingEnabled||(this.logger.verbose("Claims-based caching is disabled. Clearing the previous cache with claims"),await iS(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage),tY.ClearTokensAndKeysWithClaims,this.logger,this.performanceClient,t)(this.performanceClient,t)),this.initialized=!0,this.eventHandler.emitEvent(i6.INITIALIZE_END),i.end({allowNativeBroker:r,success:!0})}async handleRedirectPromise(e){if(this.logger.verbose("handleRedirectPromise called"),i0(this.initialized),this.isBrowserEnvironment){let t=e||"",r=this.redirectResponse.get(t);return void 0===r?(r=this.handleRedirectPromiseInternal(e),this.redirectResponse.set(t,r),this.logger.verbose("handleRedirectPromise has been called for the first time, storing the promise")):this.logger.verbose("handleRedirectPromise has been called previously, returning the result from the first call"),r}return this.logger.verbose("handleRedirectPromise returns null, not browser environment"),null}async handleRedirectPromiseInternal(e){let t;let r=this.getAllAccounts(),i=this.browserStorage.getCachedNativeRequest(),o=i&&nN.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider)&&this.nativeExtensionProvider&&!e,a=o?i?.correlationId:this.browserStorage.getTemporaryCache(t1.CORRELATION_ID,!0)||"",s=this.performanceClient.startMeasurement(tY.AcquireTokenRedirect,a);if(this.eventHandler.emitEvent(i6.HANDLE_REDIRECT_START,n.Redirect),o&&this.nativeExtensionProvider){this.logger.trace("handleRedirectPromise - acquiring token from native platform");let e=new nP(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t3.handleRedirectPromise,this.performanceClient,this.nativeExtensionProvider,i.accountId,this.nativeInternalStorage,i.correlationId);t=iS(e.handleRedirectPromise.bind(e),tY.HandleNativeRedirectPromiseMeasurement,this.logger,this.performanceClient,s.event.correlationId)(this.performanceClient,s.event.correlationId)}else{this.logger.trace("handleRedirectPromise - acquiring token from web flow");let r=this.createRedirectClient(a);t=iS(r.handleRedirectPromise.bind(r),tY.HandleRedirectPromiseMeasurement,this.logger,this.performanceClient,s.event.correlationId)(e,s)}return t.then(e=>(e?(r.length<this.getAllAccounts().length?(this.eventHandler.emitEvent(i6.LOGIN_SUCCESS,n.Redirect,e),this.logger.verbose("handleRedirectResponse returned result, login success")):(this.eventHandler.emitEvent(i6.ACQUIRE_TOKEN_SUCCESS,n.Redirect,e),this.logger.verbose("handleRedirectResponse returned result, acquire token success")),s.end({success:!0,accountType:nW(e.account)})):s.event.errorCode?s.end({success:!1}):s.discard(),this.eventHandler.emitEvent(i6.HANDLE_REDIRECT_END,n.Redirect),e)).catch(e=>{throw r.length>0?this.eventHandler.emitEvent(i6.ACQUIRE_TOKEN_FAILURE,n.Redirect,null,e):this.eventHandler.emitEvent(i6.LOGIN_FAILURE,n.Redirect,null,e),this.eventHandler.emitEvent(i6.HANDLE_REDIRECT_END,n.Redirect),s.end({success:!1},e),e})}async acquireTokenRedirect(e){let t=this.getRequestCorrelationId(e);this.logger.verbose("acquireTokenRedirect called",t);let r=this.performanceClient.startMeasurement(tY.AcquireTokenPreRedirect,t);r.add({accountType:nW(e.account),scenarioId:e.scenarioId});let i=e.onRedirectNavigate;if(i)e.onRedirectNavigate=e=>{let t="function"==typeof i?i(e):void 0;return!1!==t?r.end({success:!0}):r.discard(),t};else{let e=this.config.auth.onRedirectNavigate;this.config.auth.onRedirectNavigate=t=>{let i="function"==typeof e?e(t):void 0;return!1!==i?r.end({success:!0}):r.discard(),i}}let o=this.getAllAccounts().length>0;try{let i;return i2(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0),o?this.eventHandler.emitEvent(i6.ACQUIRE_TOKEN_START,n.Redirect,e):this.eventHandler.emitEvent(i6.LOGIN_START,n.Redirect,e),i=this.nativeExtensionProvider&&this.canUseNative(e)?new nP(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t3.acquireTokenRedirect,this.performanceClient,this.nativeExtensionProvider,this.getNativeAccountId(e),this.nativeInternalStorage,t).acquireTokenRedirect(e,r).catch(r=>{if(r instanceof nE&&nR(r))return this.nativeExtensionProvider=void 0,this.createRedirectClient(t).acquireToken(e);if(r instanceof iL)return this.logger.verbose("acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createRedirectClient(t).acquireToken(e);throw this.browserStorage.setInteractionInProgress(!1),r}):this.createRedirectClient(t).acquireToken(e),await i}catch(e){throw r.end({success:!1},e),o?this.eventHandler.emitEvent(i6.ACQUIRE_TOKEN_FAILURE,n.Redirect,null,e):this.eventHandler.emitEvent(i6.LOGIN_FAILURE,n.Redirect,null,e),e}}acquireTokenPopup(e){let t=this.getRequestCorrelationId(e),r=this.performanceClient.startMeasurement(tY.AcquireTokenPopup,t);r.add({scenarioId:e.scenarioId,accountType:nW(e.account)});try{this.logger.verbose("acquireTokenPopup called",t),nj(this.initialized,r),this.browserStorage.setInteractionInProgress(!0)}catch(e){return Promise.reject(e)}let i=this.getAllAccounts();return i.length>0?this.eventHandler.emitEvent(i6.ACQUIRE_TOKEN_START,n.Popup,e):this.eventHandler.emitEvent(i6.LOGIN_START,n.Popup,e),(this.canUseNative(e)?this.acquireTokenNative({...e,correlationId:t},t3.acquireTokenPopup).then(e=>(this.browserStorage.setInteractionInProgress(!1),r.end({success:!0,isNativeBroker:!0,requestId:e.requestId,accountType:nW(e.account)}),e)).catch(r=>{if(r instanceof nE&&nR(r))return this.nativeExtensionProvider=void 0,this.createPopupClient(t).acquireToken(e);if(r instanceof iL)return this.logger.verbose("acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createPopupClient(t).acquireToken(e);throw this.browserStorage.setInteractionInProgress(!1),r}):this.createPopupClient(t).acquireToken(e)).then(e=>(i.length<this.getAllAccounts().length?this.eventHandler.emitEvent(i6.LOGIN_SUCCESS,n.Popup,e):this.eventHandler.emitEvent(i6.ACQUIRE_TOKEN_SUCCESS,n.Popup,e),r.end({success:!0,requestId:e.requestId,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:nW(e.account)}),e)).catch(e=>(i.length>0?this.eventHandler.emitEvent(i6.ACQUIRE_TOKEN_FAILURE,n.Popup,null,e):this.eventHandler.emitEvent(i6.LOGIN_FAILURE,n.Popup,null,e),r.end({success:!1},e),Promise.reject(e)))}trackPageVisibilityWithMeasurement(){let e=this.ssoSilentMeasurement||this.acquireTokenByCodeAsyncMeasurement;e&&(this.logger.info("Perf: Visibility change detected in ",e.event.name),e.increment({visibilityChangeCount:1}))}async ssoSilent(e){let t=this.getRequestCorrelationId(e),r={...e,prompt:e.prompt,correlationId:t};return this.ssoSilentMeasurement=this.performanceClient.startMeasurement(tY.SsoSilent,t),this.ssoSilentMeasurement?.add({scenarioId:e.scenarioId,accountType:nW(e.account)}),nj(this.initialized,this.ssoSilentMeasurement),this.ssoSilentMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),this.logger.verbose("ssoSilent called",t),this.eventHandler.emitEvent(i6.SSO_SILENT_START,n.Silent,r),(this.canUseNative(r)?this.acquireTokenNative(r,t3.ssoSilent).catch(e=>{if(e instanceof nE&&nR(e))return this.nativeExtensionProvider=void 0,this.createSilentIframeClient(r.correlationId).acquireToken(r);throw e}):this.createSilentIframeClient(r.correlationId).acquireToken(r)).then(e=>(this.eventHandler.emitEvent(i6.SSO_SILENT_SUCCESS,n.Silent,e),this.ssoSilentMeasurement?.end({success:!0,isNativeBroker:e.fromNativeBroker,requestId:e.requestId,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:nW(e.account)}),e)).catch(e=>{throw this.eventHandler.emitEvent(i6.SSO_SILENT_FAILURE,n.Silent,null,e),this.ssoSilentMeasurement?.end({success:!1},e),e}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenByCode(e){let t=this.getRequestCorrelationId(e);this.logger.trace("acquireTokenByCode called",t);let r=this.performanceClient.startMeasurement(tY.AcquireTokenByCode,t);nj(this.initialized,r),this.eventHandler.emitEvent(i6.ACQUIRE_TOKEN_BY_CODE_START,n.Silent,e),r.add({scenarioId:e.scenarioId});try{if(e.code&&e.nativeAccountId)throw rX(rD);if(e.code){let i=e.code,o=this.hybridAuthCodeResponses.get(i);return o?(this.logger.verbose("Existing acquireTokenByCode request found",t),r.discard()):(this.logger.verbose("Initiating new acquireTokenByCode request",t),o=this.acquireTokenByCodeAsync({...e,correlationId:t}).then(e=>(this.eventHandler.emitEvent(i6.ACQUIRE_TOKEN_BY_CODE_SUCCESS,n.Silent,e),this.hybridAuthCodeResponses.delete(i),r.end({success:!0,isNativeBroker:e.fromNativeBroker,requestId:e.requestId,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:nW(e.account)}),e)).catch(e=>{throw this.hybridAuthCodeResponses.delete(i),this.eventHandler.emitEvent(i6.ACQUIRE_TOKEN_BY_CODE_FAILURE,n.Silent,null,e),r.end({success:!1},e),e}),this.hybridAuthCodeResponses.set(i,o)),await o}if(e.nativeAccountId){if(this.canUseNative(e,e.nativeAccountId)){let i=await this.acquireTokenNative({...e,correlationId:t},t3.acquireTokenByCode,e.nativeAccountId).catch(e=>{throw e instanceof nE&&nR(e)&&(this.nativeExtensionProvider=void 0),e});return r.end({accountType:nW(i.account),success:!0}),i}throw rX(rF)}throw rX(rL)}catch(e){throw this.eventHandler.emitEvent(i6.ACQUIRE_TOKEN_BY_CODE_FAILURE,n.Silent,null,e),r.end({success:!1},e),e}}async acquireTokenByCodeAsync(e){this.logger.trace("acquireTokenByCodeAsync called",e.correlationId),this.acquireTokenByCodeAsyncMeasurement=this.performanceClient.startMeasurement(tY.AcquireTokenByCodeAsync,e.correlationId),this.acquireTokenByCodeAsyncMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement);let t=this.createSilentAuthCodeClient(e.correlationId);return await t.acquireToken(e).then(e=>(this.acquireTokenByCodeAsyncMeasurement?.end({success:!0,fromCache:e.fromCache,isNativeBroker:e.fromNativeBroker,requestId:e.requestId}),e)).catch(e=>{throw this.acquireTokenByCodeAsyncMeasurement?.end({success:!1},e),e}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenFromCache(e,t){switch(this.performanceClient.addQueueMeasurement(tY.AcquireTokenFromCache,e.correlationId),t){case t7.Default:case t7.AccessToken:case t7.AccessTokenAndRefreshToken:let r=this.createSilentCacheClient(e.correlationId);return iS(r.acquireToken.bind(r),tY.SilentCacheClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw eM(eT)}}async acquireTokenByRefreshToken(e,t){switch(this.performanceClient.addQueueMeasurement(tY.AcquireTokenByRefreshToken,e.correlationId),t){case t7.Default:case t7.AccessTokenAndRefreshToken:case t7.RefreshToken:case t7.RefreshTokenAndNetwork:let r=this.createSilentRefreshClient(e.correlationId);return iS(r.acquireToken.bind(r),tY.SilentRefreshClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw eM(eT)}}async acquireTokenBySilentIframe(e){this.performanceClient.addQueueMeasurement(tY.AcquireTokenBySilentIframe,e.correlationId);let t=this.createSilentIframeClient(e.correlationId);return iS(t.acquireToken.bind(t),tY.SilentIframeClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e)}async logout(e){let t=this.getRequestCorrelationId(e);return this.logger.warning("logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.",t),this.logoutRedirect({correlationId:t,...e})}async logoutRedirect(e){let t=this.getRequestCorrelationId(e);return i2(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0),this.createRedirectClient(t).logout(e)}logoutPopup(e){try{let t=this.getRequestCorrelationId(e);return i1(this.initialized),this.browserStorage.setInteractionInProgress(!0),this.createPopupClient(t).logout(e)}catch(e){return Promise.reject(e)}}async clearCache(e){let t=this.getRequestCorrelationId(e);return this.createSilentCacheClient(t).logout(e)}getAllAccounts(e){var t,r,i;return t=this.logger,r=this.browserStorage,i=this.isBrowserEnvironment,t.verbose("getAllAccounts called"),i?r.getAllAccounts(e):[]}getAccount(e){return function(e,t,r){if(t.trace("getAccount called"),0===Object.keys(e).length)return t.warning("getAccount: No accountFilter provided"),null;let i=r.getAccountInfoFilteredBy(e);return i?(t.verbose("getAccount: Account matching provided filter found, returning"),i):(t.verbose("getAccount: No matching account found, returning null"),null)}(e,this.logger,this.browserStorage)}getAccountByUsername(e){return function(e,t,r){if(t.trace("getAccountByUsername called"),!e)return t.warning("getAccountByUsername: No username provided"),null;let i=r.getAccountInfoFilteredBy({username:e});return i?(t.verbose("getAccountByUsername: Account matching username found, returning"),t.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${e}`),i):(t.verbose("getAccountByUsername: No matching account found, returning null"),null)}(e,this.logger,this.browserStorage)}getAccountByHomeId(e){return function(e,t,r){if(t.trace("getAccountByHomeId called"),!e)return t.warning("getAccountByHomeId: No homeAccountId provided"),null;let i=r.getAccountInfoFilteredBy({homeAccountId:e});return i?(t.verbose("getAccountByHomeId: Account matching homeAccountId found, returning"),t.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${e}`),i):(t.verbose("getAccountByHomeId: No matching account found, returning null"),null)}(e,this.logger,this.browserStorage)}getAccountByLocalId(e){return function(e,t,r){if(t.trace("getAccountByLocalId called"),!e)return t.warning("getAccountByLocalId: No localAccountId provided"),null;let i=r.getAccountInfoFilteredBy({localAccountId:e});return i?(t.verbose("getAccountByLocalId: Account matching localAccountId found, returning"),t.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${e}`),i):(t.verbose("getAccountByLocalId: No matching account found, returning null"),null)}(e,this.logger,this.browserStorage)}setActiveAccount(e){!function(e,t){t.setActiveAccount(e)}(e,this.browserStorage)}getActiveAccount(){return this.browserStorage.getActiveAccount()}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");let r=tv.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return(this.browserStorage.setAccount(r),e.fromNativeBroker)?(this.logger.verbose("Response was from native broker, storing in-memory"),this.nativeInternalStorage.hydrateCache(e,t)):this.browserStorage.hydrateCache(e,t)}async acquireTokenNative(e,t,r){if(this.logger.trace("acquireTokenNative called"),!this.nativeExtensionProvider)throw rX(rG);return new nP(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t,this.performanceClient,this.nativeExtensionProvider,r||this.getNativeAccountId(e),this.nativeInternalStorage,e.correlationId).acquireToken(e)}canUseNative(e,t){if(this.logger.trace("canUseNative called"),!nN.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme))return this.logger.trace("canUseNative: isNativeAvailable returned false, returning false"),!1;if(e.prompt)switch(e.prompt){case m.NONE:case m.CONSENT:case m.LOGIN:this.logger.trace("canUseNative: prompt is compatible with native flow");break;default:return this.logger.trace(`canUseNative: prompt = ${e.prompt} is not compatible with native flow, returning false`),!1}return!!(t||this.getNativeAccountId(e))||(this.logger.trace("canUseNative: nativeAccountId is not available, returning false"),!1)}getNativeAccountId(e){let t=e.account||this.getAccount({loginHint:e.loginHint,sid:e.sid})||this.getActiveAccount();return t&&t.nativeAccountId||""}createPopupClient(e){return new nU(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createRedirectClient(e){return new nL(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentIframeClient(e){return new n$(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t3.ssoSilent,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentCacheClient(e){return new nb(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentRefreshClient(e){return new nz(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentAuthCodeClient(e){return new nV(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t3.acquireTokenByCode,this.performanceClient,this.nativeExtensionProvider,e)}addEventCallback(e){return this.eventHandler.addEventCallback(e)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){return this.performanceClient.addPerformanceCallback(e)}removePerformanceCallback(e){return this.performanceClient.removePerformanceCallback(e)}enableAccountStorageEvents(){this.eventHandler.enableAccountStorageEvents()}disableAccountStorageEvents(){this.eventHandler.disableAccountStorageEvents()}getTokenCache(){return this.tokenCache}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){this.navigationClient=e}getConfiguration(){return this.config}getPerformanceClient(){return this.performanceClient}isBrowserEnv(){return this.isBrowserEnvironment}getEventHandler(){return this.eventHandler}getRequestCorrelationId(e){return e?.correlationId?e.correlationId:this.isBrowserEnvironment?ig():s.EMPTY_STRING}async loginRedirect(e){let t=this.getRequestCorrelationId(e);return this.logger.verbose("loginRedirect called",t),this.acquireTokenRedirect({correlationId:t,...e||t5})}loginPopup(e){let t=this.getRequestCorrelationId(e);return this.logger.verbose("loginPopup called",t),this.acquireTokenPopup({correlationId:t,...e||t5})}async acquireTokenSilent(e){let t=this.getRequestCorrelationId(e),r=this.performanceClient.startMeasurement(tY.AcquireTokenSilent,t);r.add({cacheLookupPolicy:e.cacheLookupPolicy,scenarioId:e.scenarioId}),nj(this.initialized,r),this.logger.verbose("acquireTokenSilent called",t);let i=e.account||this.getActiveAccount();if(!i)throw rX(rA);r.add({accountType:nW(i)});let n=JSON.stringify({clientId:this.config.auth.clientId,authority:e.authority||s.EMPTY_STRING,scopes:e.scopes,homeAccountIdentifier:i.homeAccountId,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid,shrOptions:e.shrOptions}),o=this.activeSilentTokenRequests.get(n);if(void 0!==o)return this.logger.verbose("acquireTokenSilent has been called previously, returning the result from the first call",t),r.discard(),{...await o,state:e.state};{this.logger.verbose("acquireTokenSilent called for the first time, storing active request",t);let o=iS(this.acquireTokenSilentAsync.bind(this),tY.AcquireTokenSilentAsync,this.logger,this.performanceClient,t)({...e,correlationId:t},i).then(t=>(this.activeSilentTokenRequests.delete(n),r.end({success:!0,fromCache:t.fromCache,isNativeBroker:t.fromNativeBroker,cacheLookupPolicy:e.cacheLookupPolicy,requestId:t.requestId,accessTokenSize:t.accessToken.length,idTokenSize:t.idToken.length}),t)).catch(e=>{throw this.activeSilentTokenRequests.delete(n),r.end({success:!1},e),e});return this.activeSilentTokenRequests.set(n,o),{...await o,state:e.state}}}async acquireTokenSilentAsync(e,t){let r=()=>this.trackPageVisibility(e.correlationId);this.performanceClient.addQueueMeasurement(tY.AcquireTokenSilentAsync,e.correlationId),this.eventHandler.emitEvent(i6.ACQUIRE_TOKEN_START,n.Silent,e),e.correlationId&&this.performanceClient.incrementFields({visibilityChangeCount:0},e.correlationId),document.addEventListener("visibilitychange",r);let i=await iS(nI,tY.InitializeSilentRequest,this.logger,this.performanceClient,e.correlationId)(e,t,this.config,this.performanceClient,this.logger),o=e.cacheLookupPolicy||t7.Default;return this.acquireTokenSilentNoIframe(i,o).catch(async e=>{if(function(e,t){let r=!(e instanceof iL&&e.subError!==iM),i=e.errorCode===tj.INVALID_GRANT_ERROR||e.errorCode===eT,n=r&&i||e.errorCode===iO||e.errorCode===iN,o=re.includes(t);return n&&o}(e,o)){if(this.activeIframeRequest){if(o===t7.Skip)return this.logger.warning("Another iframe request is currently in progress and CacheLookupPolicy is set to Skip. This may result in degraded performance and/or reliability for both calls. Please consider changing the CacheLookupPolicy to take advantage of request queuing and token cache.",i.correlationId),iS(this.acquireTokenBySilentIframe.bind(this),tY.AcquireTokenBySilentIframe,this.logger,this.performanceClient,i.correlationId)(i);{let[t,r]=this.activeIframeRequest;this.logger.verbose(`Iframe request is already in progress, awaiting resolution for request with correlationId: ${r}`,i.correlationId);let n=this.performanceClient.startMeasurement(tY.AwaitConcurrentIframe,i.correlationId);n.add({awaitIframeCorrelationId:r});let a=await t;if(n.end({success:a}),a)return this.logger.verbose(`Parallel iframe request with correlationId: ${r} succeeded. Retrying cache and/or RT redemption`,i.correlationId),this.acquireTokenSilentNoIframe(i,o);throw this.logger.info(`Iframe request with correlationId: ${r} failed. Interaction is required.`),e}}{let e;return this.activeIframeRequest=[new Promise(t=>{e=t}),i.correlationId],this.logger.verbose("Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.",i.correlationId),iS(this.acquireTokenBySilentIframe.bind(this),tY.AcquireTokenBySilentIframe,this.logger,this.performanceClient,i.correlationId)(i).then(t=>(e(!0),t)).catch(t=>{throw e(!1),t}).finally(()=>{this.activeIframeRequest=void 0})}}throw e}).then(t=>(this.eventHandler.emitEvent(i6.ACQUIRE_TOKEN_SUCCESS,n.Silent,t),e.correlationId&&this.performanceClient.addFields({fromCache:t.fromCache,isNativeBroker:t.fromNativeBroker,requestId:t.requestId},e.correlationId),t)).catch(e=>{throw this.eventHandler.emitEvent(i6.ACQUIRE_TOKEN_FAILURE,n.Silent,null,e),e}).finally(()=>{document.removeEventListener("visibilitychange",r)})}async acquireTokenSilentNoIframe(e,t){return nN.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme)&&e.account.nativeAccountId?(this.logger.verbose("acquireTokenSilent - attempting to acquire token from native platform"),this.acquireTokenNative(e,t3.acquireTokenSilent_silentFlow).catch(async e=>{if(e instanceof nE&&nR(e))throw this.logger.verbose("acquireTokenSilent - native platform unavailable, falling back to web flow"),this.nativeExtensionProvider=void 0,eM(eT);throw e})):(this.logger.verbose("acquireTokenSilent - attempting to acquire token from web flow"),iS(this.acquireTokenFromCache.bind(this),tY.AcquireTokenFromCache,this.logger,this.performanceClient,e.correlationId)(e,t).catch(r=>{if(t===t7.AccessToken)throw r;return this.eventHandler.emitEvent(i6.ACQUIRE_TOKEN_NETWORK_START,n.Silent,e),iS(this.acquireTokenByRefreshToken.bind(this),tY.AcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,t)}))}}/*! @azure/msal-browser v3.21.0 2024-08-13 */async function nX(e,t){let r=new r2(e);return await r.initialize(),nJ.createController(r,t)}/*! @azure/msal-browser v3.21.0 2024-08-13 */class nZ{static async createPublicClientApplication(e){let t=await nX(e);return new nZ(e,t)}constructor(e,t){this.controller=t||new nJ(new r2(e))}async initialize(e){return this.controller.initialize(e)}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e){return this.controller.addEventCallback(e)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}async function n0(e){let t=new nZ(e);return await t.initialize(),t}}}]);